{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"remote",
				"remote_descriptors"
			],
			[
				"to",
				"to_update"
			],
			[
				"remo",
				"remote_descriptors"
			],
			[
				"messages",
				"messages_to_delete"
			],
			[
				"remote_",
				"remote_descriptors"
			],
			[
				"local",
				"local_descriptors"
			],
			[
				"delete",
				"deleteLocalMessages"
			],
			[
				"getU",
				"getUIDs"
			],
			[
				"dele",
				"deleteLocalMessages"
			],
			[
				"attachments",
				"attachments_container"
			],
			[
				"print",
				"printAttachments"
			],
			[
				"atta",
				"attachments_container"
			],
			[
				"getMe",
				"getMessageWithUID"
			],
			[
				"ensureProjec",
				"ensureProjectStore"
			],
			[
				"object",
				"objectStoreNames"
			],
			[
				"selec",
				"selected_uid"
			],
			[
				"view",
				"view_space"
			],
			[
				"max-",
				"max-height"
			],
			[
				"days_",
				"days_printed"
			],
			[
				"days",
				"days_printed"
			],
			[
				"day",
				"daysInMonth"
			],
			[
				"real_esca",
				"mysql_real_escape_string"
			],
			[
				"real",
				"real_escape_string"
			],
			[
				"mem",
				"memcache_id"
			],
			[
				"data",
				"data_path"
			],
			[
				"cur",
				"current_index"
			],
			[
				"message",
				"message_data"
			],
			[
				"append",
				"appendTo"
			],
			[
				"appn",
				"appendTo"
			],
			[
				"db",
				"dbHandler"
			],
			[
				"getPer",
				"getPeopleString"
			],
			[
				"tool",
				"toolbarGroups"
			],
			[
				"edito",
				"editor_config"
			],
			[
				"inre",
				"inReplyTo"
			],
			[
				"onsel",
				"onSelectEmail"
			],
			[
				"selecte",
				"selected_message"
			],
			[
				"att",
				"attachments_count"
			],
			[
				"lates",
				"latest_message"
			],
			[
				"latest",
				"latest_message"
			],
			[
				"getTo",
				"getFromString"
			],
			[
				"content",
				"content_id"
			],
			[
				"text",
				"text_area"
			],
			[
				"getMa",
				"getMailFromLocalBox"
			],
			[
				"conne",
				"connectAndOpen"
			],
			[
				"connect",
				"connectAndOpen"
			],
			[
				"getUI",
				"getMessageWithUID"
			],
			[
				"existign",
				"existing_uids"
			],
			[
				"puzzle",
				"puzzle_complete"
			],
			[
				"remove",
				"removeFingerClickListener"
			],
			[
				"prelo",
				"preload"
			],
			[
				"prel",
				"preloadImages"
			],
			[
				"appen",
				"appendTo"
			],
			[
				"email",
				"emailShare"
			],
			[
				"twit",
				"twitterShare"
			],
			[
				"faceb",
				"facebookShare"
			],
			[
				"window",
				"window_scroll_top"
			],
			[
				"conta",
				"container_scroll_top"
			],
			[
				"scroll",
				"scroll_top"
			],
			[
				"scrol",
				"scrollTop"
			],
			[
				"overlay",
				"overlay_wrapper"
			],
			[
				"sound",
				"sound_directory"
			],
			[
				"sound_i",
				"sound_directory"
			],
			[
				"sound_",
				"sound_directory"
			],
			[
				"type",
				"types"
			],
			[
				"piano",
				"piano_overlays"
			],
			[
				"top",
				"top_bar"
			],
			[
				"existi",
				"existing_data"
			],
			[
				"exis",
				"existing_data"
			],
			[
				"death",
				"death_files"
			],
			[
				"played",
				"played_notes"
			],
			[
				"NOTE_",
				"NOTE_SEQUENCE"
			],
			[
				"query",
				"query_string"
			],
			[
				"get",
				"getPeopleWhoDiedByYear"
			],
			[
				"END",
				"END_YEAR"
			],
			[
				"callba",
				"callback_on_message"
			],
			[
				"clal",
				"callback_on_end"
			],
			[
				"callb",
				"callback_on_end"
			],
			[
				"call",
				"callback_on_message"
			],
			[
				"callbac",
				"callback_on_end"
			],
			[
				"callback",
				"callback_on_message"
			],
			[
				"messag",
				"message_data"
			],
			[
				"mess",
				"message_data"
			],
			[
				"search",
				"searchAtUID"
			],
			[
				"messa",
				"message_object"
			],
			[
				"parse",
				"parseHeader"
			],
			[
				"max",
				"maximum_uid"
			],
			[
				"connec",
				"connectAndOpenInbox"
			],
			[
				"message_id",
				"message_identifiers"
			],
			[
				"no",
				"nowrap"
			],
			[
				"fetc",
				"fetchMessage"
			],
			[
				"imap",
				"imapFunctions"
			],
			[
				"getINbox",
				"getInboxUIDs"
			],
			[
				"impa",
				"imapFunctions"
			],
			[
				"inline",
				"inline-block"
			],
			[
				"twitter",
				"twitter_identifier"
			],
			[
				"followed_by",
				"followed_by_slatesters"
			],
			[
				"target",
				"target_img_index"
			],
			[
				"poup",
				"popup_wrapper"
			],
			[
				"popu",
				"popup_wrapper"
			],
			[
				"eleme",
				"element_d"
			],
			[
				"PART",
				"PART_D"
			],
			[
				"PAR",
				"PART_C"
			],
			[
				"random",
				"randomFromArray"
			],
			[
				"rando",
				"randomFromArray"
			],
			[
				"ranom",
				"randomFromArray"
			],
			[
				"add",
				"addEventListeners"
			],
			[
				"st",
				"stdout"
			],
			[
				"resize",
				"resizeCallback"
			],
			[
				"attach",
				"attached_elements"
			],
			[
				"acti",
				"activateMarker"
			],
			[
				"pop",
				"popup_wrapper"
			],
			[
				"cot",
				"container"
			],
			[
				"new",
				"new_index"
			],
			[
				"active",
				"active_marker"
			],
			[
				"story",
				"story_btns_container"
			],
			[
				"inl",
				"inline-block"
			],
			[
				"str_rep",
				"str_replace"
			],
			[
				"question",
				"question_index"
			],
			[
				"loca",
				"locationVar"
			],
			[
				"corr",
				"correct_answer"
			],
			[
				"average",
				"average_score"
			],
			[
				"sel",
				"mysqli_select_db"
			],
			[
				"correct",
				"correct_here"
			],
			[
				"answer",
				"answeredAlready"
			],
			[
				"starbucks",
				"starbucks_marker_icon"
			],
			[
				"qu",
				"quiz_UI"
			],
			[
				"questo",
				"question_index"
			],
			[
				"city",
				"city_lat_lons"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "var fs = require('fs');\nvar $ = require('jquery');\nvar mailboxView = require('./modules/mailboxView.js');\nvar MessageView = require('./modules/messageView.js');\nvar ProjectView = require('./modules/projectView.js');\nvar imapHandler = require('./modules/imapHandler.js');\nvar syncer = require('./modules/syncer.js');\nvar dbHandler = require('./modules/dbHandler.js');\nvar MailComposer = require('./MailComposer/MailComposer.js');\nvar Q = require('q');\nvar gui = require('nw.gui');\nvar BOX;\n\nconsole.log(syncer);\n\n$(function(){\n\n	initialize();\n\n	function initialize(){\n		selectBox('INBOX');\n		addEventListeners();\n	}\n\n	function addEventListeners(){\n		$('#box_selector').click(function(){\n			var box_name = window.prompt('What box do you want?');\n			if(!box_name){\n				return;\n			}\n			dbHandler.connect()\n				.then(function(){\n					selectBox(box_name);\n				});\n		});\n		$(window).keydown(function(e){\n			if(e.keyCode===78 && e.metaKey){\n				new MailComposer();\n			}\n		});\n		mailboxView.onSelect(emailSelected);\n	}\n\n	function selectBox(box_name){\n		BOX = box_name;\n		$('#message_viewer').empty();\n		$('#box_selector').html(box_name);\n		update();\n	}\n	function emailSelected(uid){\n		dbHandler.connect()\n			.then(function(){\n				return dbHandler.getMailFromLocalBox(BOX,uid);\n			})\n			.then(function(mail_obj){\n				return dbHandler.getThread(mail_obj.thread_id);\n			})\n			.then(function(thread_obj){\n				if(thread_obj.project_id){\n					$('#project_viewer').show();\n					$('#message_viewer').css('width','60%');\n					new ProjectView(thread_obj.project_id, thread_obj);\n				}\n				else{\n					$('#project_viewer').hide();\n					$('#message_viewer').css('width','80%');\n				}\n				console.log(thread_obj);\n				return dbHandler.getThreadMessages(thread_obj);\n			})\n			.then(function(messages){\n				markRead(messages);\n				new MessageView($('#message_viewer'), messages, BOX);\n			})\n			.catch(function(error){\n				console.log(error);\n			});\n		$(window).unbind('keypress').on('keypress',function(e){\n			console.log('key press');\n			if(e.keyCode === 100 ){ // d\n				(function(){\n					var selected_uid = mailboxView.selected_email.data('uid');\n					dbHandler.markComplete(BOX, selected_uid);\n					mailboxView.selected_email.slideUp();\n				}());\n			}\n			else if(e.keyCode === 112){ // p\n				(function(){\n					var project_name = prompt('What project would you like to put this in?');\n					var selected_uid = mailboxView.selected_email.data('uid');\n					dbHandler.putInProject(BOX, selected_uid, project_name);\n				}());\n			}\n		});\n	}\n\n	function update(){\n		dbHandler\n			.connect()\n			.then(function(){\n				printMail();\n				regularSync();\n			});\n	}\n\n	function regularSync(){\n		console.log('regular sync');\n		syncer.syncAll()\n			.then(function(){\n				printMail();\n				setTimeout(function(){\n					regularSync();\n				},60000);\n			});\n	}\n\n	function markRead(mail_objs){\n		console.log('marking read');\n		console.log(mail_objs);\n		mail_objs.forEach(function(mail_obj){\n			if(mail_obj.flags.indexOf('\\\\Seen')===-1){\n				imapHandler.markSeen(BOX, mail_obj.uid);\n			}\n		});\n	}\n\n	function printMail(){\n		mailboxView.clear();\n		var printed_threads = [];\n		dbHandler.getMessagesFromMailbox(BOX,function(mail_object){\n			if(printed_threads.indexOf(mail_object.thread_id)>-1){\n				return;\n			}\n			mailboxView.printMessage(mail_object);\n			printed_threads.push(mail_object.thread_id);\n		});\n	}\n\n});\n",
			"file": "main.js",
			"file_size": 3361,
			"file_write_time": 130572791980000000,
			"settings":
			{
				"buffer_size": 3361,
				"line_ending": "Unix"
			}
		},
		{
			"file": "modules/dbHandler.js",
			"settings":
			{
				"buffer_size": 17095,
				"line_ending": "Unix"
			}
		},
		{
			"file": "modules/syncer.js",
			"settings":
			{
				"buffer_size": 5556,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "var Imap = require('imap');\nvar MailParser = require(\"mailparser\").MailParser;\nvar Q = require('q');\nvar imap;\nvar fs = require('fs');\n\nvar imapHandler = {\n	connect:function(){\n		if(imap && imap.state && imap.state === 'authenticated'){\n			return Q(true);\n		}\n		console.log('connecting...');\n		var def = Q.defer();\n		var conf = JSON.parse(fs.readFileSync('credentials/credentials2.json')).internal;\n		// conf.debug = function(s){\n		//   console.log(s);\n		// };\n		imap = new Imap(conf);\n		imap.connect();\n		imap\n			.once('ready',function(){\n				def.resolve();\n			})\n			.once('error',function(err){\n				console.log('imap error: '+err);\n			})\n			.once('end', function() {\n				console.log('Connection ended');\n			});\n		return def.promise;\n	},\n	connectAndOpen:function(box_name){\n		// console.log('connecting and opening: '+box_name);\n		var def = Q.defer();\n		imapHandler.connect()\n			.then(function(){\n				return imapHandler.openBox(box_name);\n			})\n			.then(function(box){\n				def.resolve(box);\n				return true;\n			})\n			.catch(function(err){\n				console.log(err);\n			});\n		return def.promise;\n	},\n	disconnect:function(){\n		// console.log('disconnecting');\n		imap.end();\n	},\n	openBox:function(box_name){\n		var def = Q.defer();\n		if(imap.opened_box === box_name){\n			return Q(box_name);\n		}\n		console.log('opening box: '+box_name+'...');\n		imap.openBox(box_name, false, function(err, box){\n			if (err){\n				console.log(err);\n				throw err;\n			}\n			else{\n				console.log('box opened');\n				imap.opened_box = box_name;\n				def.resolve(box);\n			}\n		});\n		return def.promise;\n	},\n	getUIDsFlags:function(box_name){\n		var def = Q.defer();\n		imapHandler.connectAndOpen(box_name)\n			.then(function(box){\n				var message_identifiers = [];\n				//var range_string = Math.max(1,(box.messages.total-Math.min(box.messages.total,50)))+':'+box.messages.total;\n				var range_string = 1+':'+box.messages.total;\n				var f = imap.seq.fetch(range_string)\n					.on('message', function(msg, seqno) {\n						var message_id;\n						var uid;\n						var flags;\n						msg\n							.once('attributes', function(attrs) {\n								uid = attrs.uid;\n								flags = (function(){\n									var out = [];\n									var flags = attrs.flags;\n									for(var i in flags){\n										if(flags.hasOwnProperty(i)){\n											out.push(flags[i]);\n										}\n									}\n									return out;\n								}());\n							})\n							.once('end', function() {\n								message_identifiers.push({\n									uid:uid,\n									flags:flags\n								});\n							});\n					})\n					.once('error', function(err) {})\n					.once('end', function() {\n						def.resolve(message_identifiers);\n					});\n			});\n		return def.promise;\n	},\n	getMessageWithUID:function(box_name, uid){\n		// console.log('getting message with uid: '+uid);\n		var def = Q.defer();\n		var message;\n		imapHandler.getMessagesWithSearchCriteria({\n			box_name:box_name,\n			criteria:[['UID',parseInt(uid,10)]],\n			callback_on_message:function(mail_obj){\n				def.resolve(mail_obj);\n				throw new Error('abort promise chain');\n			}\n		})\n		.then(function(){\n			def.resolve(false);\n		})\n		.fail(function(err){\n			def.resolve(false);\n		});\n		return def.promise;\n	},\n	getMessagesWithSearchCriteria:function(conf){\n		// console.log('ImapHandler: Get messages with search criteria: '+conf.criteria);\n		var def = Q.defer();\n		imapHandler.connectAndOpen(conf.box_name)\n			.then(function(box){\n				imap.search(conf.criteria, function(err,results){\n					// console.log('search initiated');\n					if(err || !results || results.length === 0){\n						// console.log('no results found');\n						if(conf.callback_on_end){\n							conf.callback_on_end(false);\n						}\n						return;\n					}\n					var fetch = imap.fetch(results,{ bodies: '' });\n					fetch.on('message', function(msg) {\n						imapHandler.getMailObject(msg)\n							.then(function(mail_object){\n								if(conf.callback_on_message){\n									conf.callback_on_message(mail_object);\n								}\n							});\n					});\n					fetch.once('error', function(err) {\n						console.log(err);\n						def.resolve();\n					});\n					fetch.once('end',function(){\n						def.resolve();\n					});\n				});\n			})\n			.catch(function(err){\n				console.log(err);\n			});\n		return def.promise;\n	},\n	getMailObject: function(msg){\n		var def = Q.defer();\n		var parser = new MailParser();\n		parser.on('end', function(mail_object){\n			def.resolve(mail_object);\n		});\n		msg.on('body', function(stream, info) {\n			stream.pipe(parser);\n		});\n		return def.promise;\n	},\n	markSeen:function(box_name, uid, callback){\n		console.log('marking seen: '+uid);\n		var def = Q.defer();\n		imapHandler.connectAndOpen(box_name)\n			.then(function(box){\n				imap.addFlags(uid,['Seen'],function(err){\n					def.resolve();\n				});\n			});\n		return def.promise;\n	},\n	getBoxes:function(callback){\n		var def = Q.defer();\n		imapHandler.connect()\n			.then(function(){\n				imap.getBoxes(function(err, boxes){\n					def.resolve(boxes);\n				});\n			});\n		return def.promise;\n	},\n	getMessageCount:function(box_name, callback){\n		var deferred = Q.defer();\n		imapHandler.connectAndOpen(box_name)\n			.then(function(box){\n				return deferred.resolve(box.messages.total);\n			});\n		return deferred.promise;\n	},\n	ensureBox:function(box_name){\n		var def = Q.defer();\n		imapHandler.getBoxes()\n			.then(function(boxes){\n				console.log(boxes);\n				if(boxes[box_name]){\n					console.log('box already exists; ensured.');\n					def.resolve();\n					return true;\n				}\n				else{\n					console.log('box does not exist; creating');\n					return imapHandler.createBox(box_name);\n				}\n			})\n			.fin(function(){\n				console.log('box ensured');\n				def.resolve();\n			});\n		return def.promise;\n	},\n	createBox:function(box_name){\n		var def = Q.defer();\n		imap.addBox(box_name, function(){\n			def.resolve();\n		});\n		return def.promise;\n	},\n	move:function(from_box, to_box, uid, callback){\n		console.log('moving '+from_box+':'+uid+' to '+to_box);\n		var def = Q.defer();\n		imapHandler.ensureBox(to_box)\n			.then(function(){\n				return imapHandler.connectAndOpen(from_box);\n			})\n			.then(function(){\n				imap.move(uid, to_box, function(){\n					return true;\n				});\n			})\n			.catch(function(err){\n				console.log(err);\n			})\n			.fin(function(){\n				console.log('move complete');\n				def.resolve();\n			});\n//		imapHandler.connectAndOpen(from_box)\n//			.then(function(){\n//				imap.move(uid, to_box, function(){\n//					def.resolve();\n//				});\n//			})\n		return def.promise;\n	}\n};\n\nmodule.exports = imapHandler;\n",
			"file": "modules/imapHandler.js",
			"file_size": 6463,
			"file_write_time": 130572655860000000,
			"settings":
			{
				"buffer_size": 6425,
				"line_ending": "Unix"
			}
		},
		{
			"file": "descriptors/2014_uids.json",
			"settings":
			{
				"buffer_size": 2,
				"line_ending": "Unix"
			}
		},
		{
			"file": "modules/syncer_old.js",
			"settings":
			{
				"buffer_size": 5644,
				"line_ending": "Unix"
			}
		},
		{
			"file": "modules/messageView.js",
			"settings":
			{
				"buffer_size": 12530,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 97.0,
		"selected_items":
		[
			[
				"format",
				"Pretty JSON: Format (Pretty Print) JSON"
			],
			[
				"next color",
				"ColorSchemeSelector: Next Color Scheme"
			],
			[
				"color",
				"ColorSchemeSelector: Random Color Scheme"
			],
			[
				"random ",
				"ColorSchemeSelector: Random Color Scheme"
			],
			[
				"select",
				"ColorSchemeSelector: Select Color Scheme"
			],
			[
				"rand",
				"ColorSchemeSelector: Random Color Scheme"
			],
			[
				"rando",
				"ColorSchemeSelector: Random Color Scheme"
			],
			[
				"random",
				"ColorSchemeSelector: Random Color Scheme"
			],
			[
				"gr",
				"Grunt"
			],
			[
				"save ",
				"Project: Save As"
			],
			[
				"gru",
				"Grunt"
			],
			[
				"forma",
				"Format: Javascript"
			],
			[
				"form",
				"Pretty JSON: Format (Pretty Print) JSON"
			],
			[
				"nog",
				"Snippet: noHighlight"
			],
			[
				"grunt",
				"Grunt: Kill Running Tasks"
			],
			[
				"mobile",
				"Snippet: mobile media query"
			],
			[
				"set syntax: live",
				"Set Syntax: LiveScript"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"grun",
				"Grunt"
			],
			[
				"json",
				"Pretty JSON: Format (Pretty Print) JSON"
			],
			[
				"beau",
				"HTMLBeautify"
			],
			[
				"beua",
				"Javascript Beautify"
			],
			[
				"beauty",
				"Javascript Beautify"
			],
			[
				"beaut",
				"Javascript Beautify"
			],
			[
				"conver tto ",
				"Indentation: Convert to Tabs"
			],
			[
				"convert tos",
				"Indentation: Convert to Tabs"
			],
			[
				"grut",
				"Grunt: Kill Running Tasks"
			],
			[
				"indent",
				"Indentation: Reindent Lines"
			],
			[
				"meda",
				"Snippet: mobile media query"
			],
			[
				"convert",
				"Indentation: Convert to Spaces"
			],
			[
				"conver tto sp",
				"Indentation: Convert to Spaces"
			],
			[
				"reid",
				"Indentation: Reindent Lines"
			],
			[
				"media",
				"Snippet: mobile media query"
			],
			[
				"set syntax: ya",
				"Set Syntax: YAML"
			],
			[
				"lint",
				"SublimeLinter: Lint This View"
			],
			[
				"wrap",
				"Word Wrap: Toggle"
			],
			[
				"tabs",
				"Indentation: Convert to Tabs"
			],
			[
				"conver tot ta",
				"Indentation: Convert to Tabs"
			],
			[
				"conver tot a",
				"Indentation: Convert to Tabs"
			],
			[
				"no",
				"Snippet: noHighlight"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"remove pa",
				"Package Control: Remove Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"remo",
				"Package Control: Remove Package"
			],
			[
				"select col",
				"ColorSchemeSelector: Select Color Scheme"
			],
			[
				"select theme",
				"ColorSchemeSelector: Select Color Scheme"
			],
			[
				"randomc",
				"ColorSchemeSelector: Random Color Scheme"
			],
			[
				"to tabs",
				"Indentation: Convert to Tabs"
			],
			[
				"no ",
				"Snippet: noHighlight"
			],
			[
				"lower",
				"Convert Case: Lower Case"
			],
			[
				"lowerc",
				"Convert Case: Lower Case"
			],
			[
				"html",
				"HTMLBeautify"
			],
			[
				"set syn",
				"Set Syntax: HTML"
			],
			[
				"set syntax: plain",
				"Set Syntax: Plain Text"
			],
			[
				"set sy",
				"Set Syntax: HTML"
			],
			[
				"syntax: text",
				"Set Syntax: Plain Text"
			],
			[
				"reind",
				"Indentation: Reindent Lines"
			],
			[
				"noh",
				"Snippet: noHighlight"
			],
			[
				"scramble",
				"Snippet: scrambleArray"
			],
			[
				"json format",
				"Pretty JSON: Format (Pretty Print) JSON"
			],
			[
				"random fro",
				"Snippet: random item from array"
			],
			[
				"gurnt",
				"Grunt"
			],
			[
				"grunts",
				"Preferences: Grunt - Settings – Default"
			],
			[
				"slatred",
				"Snippet: slatered"
			],
			[
				"linting",
				"SublimeLinter: Enable Linting"
			],
			[
				"eriden",
				"Indentation: Reindent Lines"
			],
			[
				"erid",
				"Snippet: Insert Right Double Quotation Mark"
			],
			[
				"convert to",
				"Indentation: Convert to Tabs"
			],
			[
				"scheme",
				"ColorSchemeSelector: Select Color Scheme"
			],
			[
				"theme",
				"ColorSchemeSelector: Select Color Scheme"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"medai",
				"Snippet: mobile media query"
			],
			[
				"for each",
				"Snippet: forEach polyfill"
			],
			[
				"rei",
				"Indentation: Reindent Lines"
			],
			[
				"ried",
				"Indentation: Reindent Lines"
			],
			[
				"right doubl",
				"Snippet: Insert Right Double Quotation Mark"
			],
			[
				"emd",
				"Snippet: Insert Em Dash"
			],
			[
				"double",
				"Snippet: Insert Right Double Quotation Mark"
			],
			[
				"double ",
				"Snippet: Insert Left Double Quotation Mark"
			],
			[
				"rightu",
				"Snippet: insert right guillmet arrows"
			],
			[
				"insert right",
				"Snippet: Insert Right Double Quotation Mark"
			],
			[
				"insert left ",
				"Snippet: Insert Left Double Quotation Mark"
			],
			[
				"disabl",
				"Package Control: Disable Package"
			],
			[
				"enable",
				"Package Control: Enable Package"
			],
			[
				"update",
				"Package Control: Upgrade/Overwrite All Packages"
			],
			[
				"min",
				"Pretty JSON: Minify (compress) JSON"
			],
			[
				"comam",
				"Snippet: commaSeparateNumber"
			],
			[
				"nonb",
				"Snippet: insert non-breaking space"
			],
			[
				"slatere",
				"Snippet: slatered"
			],
			[
				"cofee compi",
				"Coffee: Compile File"
			],
			[
				"compile",
				"Coffee: Compile File"
			],
			[
				"cofeecompi",
				"Coffee: Compile File"
			],
			[
				"slatre",
				"Snippet: slatered"
			],
			[
				"reii",
				"Indentation: Reindent Lines"
			],
			[
				"pret",
				"Pretty JSON: Format (Pretty Print) JSON"
			],
			[
				"preti",
				"Pretty JSON: Format (Pretty Print) JSON"
			],
			[
				"pretti",
				"Pretty JSON: Format (Pretty Print) JSON"
			],
			[
				"java",
				"Javascript Beautify"
			],
			[
				"word",
				"Word Wrap: Toggle"
			],
			[
				"leafl",
				"Snippet: makeLeafletMap"
			],
			[
				"zoom",
				"Snippet: insertLeaflet.ZoomFS"
			],
			[
				"leaflet",
				"Snippet: insertLeaflet.ZoomFS"
			],
			[
				"lintin",
				"SublimeLinter: Enable Linting"
			],
			[
				"slatr",
				"Set Syntax: LaTeX Memoir"
			],
			[
				"right",
				"Snippet: insert right guillmet arrows"
			],
			[
				"left",
				"Snippet: insert left guillmet arrows"
			],
			[
				"slatered",
				"Snippet: slatered"
			],
			[
				"package",
				"Package Control: Enable Package"
			],
			[
				"makel",
				"Snippet: makeLeafletMap"
			],
			[
				"leaf",
				"Snippet: makeLeafletMap"
			],
			[
				"scrambe",
				"Snippet: scrambleArray"
			]
		],
		"width": 453.0
	},
	"console":
	{
		"height": 174.0,
		"history":
		[
			"clear()",
			"clear",
			"clear;",
			"clear()",
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": true,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/kirkcp/Documents/node_play/slatemail",
		"/Users/kirkcp/Documents/node_play/slatemail/descriptors",
		"/Users/kirkcp/Documents/node_play/slatemail/mailComposer",
		"/Users/kirkcp/Documents/node_play/slatemail/modules"
	],
	"file_history":
	[
		"/Users/kirkcp/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/Users/kirkcp/Documents/node_play/slatemail/descriptors/INBOX_uids.json",
		"/Users/kirkcp/Documents/node_play/slatemail/modules/syncer_old.js",
		"/Users/kirkcp/Documents/node_play/slatemail/mailComposer/mailComposer.js",
		"/Users/kirkcp/Documents/node_play/slatemail/modules/mailboxView.js",
		"/Users/kirkcp/Documents/node_play/slatemail/modules/messageView.js",
		"/Users/kirkcp/Documents/node_play/slatemail/index.html",
		"/Users/kirkcp/Documents/node_play/slatemail/css/styles.scss",
		"/Users/kirkcp/Documents/node_play/slatemail/main.js",
		"/Users/kirkcp/Documents/node_play/slatemail/modules/projectView.js",
		"/Users/kirkcp/Documents/node_play/slatemail/stepplay.js",
		"/Users/kirkcp/Documents/interactives/src/features/2014/10/president_tracker/getCSV.js",
		"/Users/kirkcp/Documents/interactives/src/features/2014/10/president_tracker/tracker.js",
		"/Users/kirkcp/Documents/interactives/src/features/2014/09/outrage/node_modules/grunt-contrib-cssmin/node_modules/clean-css/node_modules/commander/index.js",
		"/Users/kirkcp/Documents/interactives/src/features/2014/09/outrage/node_modules/grunt-contrib-htmlmin/node_modules/html-minifier/node_modules/clean-css/node_modules/commander/index.js",
		"/Users/kirkcp/Library/Application Support/Sublime Text 3/Packages/Default/Default (OSX).sublime-keymap",
		"/Users/kirkcp/Documents/interactives/src/features/2014/09/outrage/data_compile/process.js",
		"/Users/kirkcp/Documents/interactives/src/features/2014/09/outrage/data_compile/data.csv",
		"/Users/kirkcp/Documents/interactives/src/features/2014/09/outrage/src/outrage.js",
		"/Users/kirkcp/Documents/interactives/src/features/2014/09/graves/src/assets/graveyards/apple/apple.cson",
		"/Users/kirkcp/Documents/interactives/src/features/lib/js/intSharing/intSharing.scss",
		"/Users/kirkcp/Documents/interactives/src/features/lib/js/intSharing/intSharing.js",
		"/Users/kirkcp/Documents/interactives/src/features/2014/09/graves/src/graves.scss",
		"/Users/kirkcp/Documents/interactives/src/features/2014/09/graves/gruntfile.js",
		"/Users/kirkcp/Documents/interactives/server/graves/getFlowers.php",
		"/Users/kirkcp/Documents/interactives/src/features/2014/09/graves/src/assets/graveyards/got/got.cson",
		"/Users/kirkcp/Documents/interactives/server/graves/submitFlower.php",
		"/Users/kirkcp/Documents/interactives/src/features/2014/09/graves/src/graves.js",
		"/Applications/MAMP/htdocs/editorial-interactives/14-04/got_graveyard/htdocs/got_graveyard.js",
		"/Applications/MAMP/htdocs/editorial-interactives/14-04/got_graveyard/htdocs/got_graveyard.coffee",
		"/Users/kirkcp/Documents/interactives/src/features/2014/09/graves/node_modules/grunt/node_modules/coffee-script/lib/coffee-script/command.js",
		"/Users/kirkcp/Documents/interactives/src/features/2014/09/graves/node_modules/grunt-s3/test/common.js",
		"/Users/kirkcp/Documents/interactives/src/features/2014/09/graves/node_modules/grunt-sync/complexity.json",
		"/Users/kirkcp/Documents/interactives/src/features/2014/09/graves/node_modules/grunt-contrib-clean/docs/clean-options.md",
		"/Users/kirkcp/Documents/interactives/src/features/2014/09/graves/node_modules/exec-sync/Cakefile",
		"/Users/kirkcp/Documents/interactives/src/features/2014/09/graves/README.md",
		"/Users/kirkcp/Documents/interactives/src/features/2014/09/graves/src/index.html",
		"/Users/kirkcp/Documents/interactives/src/features/2014/09/graves/src/assets/graveyards/apple/apple.json",
		"/Users/kirkcp/Documents/interactives/src/features/2014/09/graves/src/assets/graveyards/apple/got.cson",
		"/Users/kirkcp/Desktop/ONA Notes",
		"/Users/kirkcp/Documents/interactives/src/features/2014/09/graves/graves.sublime-project",
		"/Users/kirkcp/Documents/interactives/src/features/2014/09/graves/node_modules/grunt-text-replace/lib/grunt-text-replace.js",
		"/Users/kirkcp/Documents/interactives/src/features/2014/09/graves/src/assets/graveyards/got/got.json",
		"/Users/kirkcp/Library/Application Support/Sublime Text 3/Packages/User/SublimeGrunt.sublime-settings",
		"/Users/kirkcp/Documents/interactives/src/features/2014/09/graves/package.json",
		"/Users/kirkcp/Documents/interactives/src/features/2014/09/graves/.DS_Store",
		"/Users/kirkcp/Documents/interactives/src/features/2014/09/graves/src/assets/yards/got/got.json",
		"/Users/kirkcp/Downloads/scores_fix/.ebextensions/resources.config",
		"/Users/kirkcp/Desktop/test.css",
		"/Users/kirkcp/Documents/interactives/src/features/2014/09/news_quiz/src/news_quiz.scss",
		"/Users/kirkcp/Documents/interactives/src/features/2014/09/news_quiz/src/assets/quiz1040.json",
		"/Users/kirkcp/Documents/interactives2/build_system/package.json",
		"/Users/kirkcp/Documents/interactives/build_system/package.json",
		"/Users/kirkcp/Documents/interactives/source/features/2014/09/test/src/assets/test.cson",
		"/Users/kirkcp/Library/Preferences/WebStorm8/colors/tomorrow-night.icls",
		"/Users/kirkcp/Documents/node_play/slatemail/node_modules/jquery/bower.json",
		"/Users/kirkcp/Documents/node_play/slatemail/mailComposer/ckeditor/samples/replacebyclass.html",
		"/Users/kirkcp/Documents/node_play/slatemail/mailComposer/ckeditor/README.md",
		"/Users/kirkcp/Documents/node_play/slatemail/package.json",
		"/Users/kirkcp/Documents/node_play/slatemail/css/message.css",
		"/Users/kirkcp/Documents/node_play/slatemail/attachments/Sent Items/3296/Pressfreedommap.docx",
		"/Users/kirkcp/Documents/node_play/slatemail/attachments/Junk Email/14417/PGA TOUR Rewind, YouTube.docx",
		"/Users/kirkcp/Documents/node_play/slatemail/mailComposer/mailComposer.scss",
		"/Users/kirkcp/Documents/node_play/slatemail/mailComposer/ckeditor/messageView.js",
		"/Users/kirkcp/Documents/node_play/slatemail/mailComposer/ckeditor/config.js",
		"/Users/kirkcp/Documents/node_play/slatemail/modules/imapHandler.js",
		"/Users/kirkcp/Documents/node_play/slatemail/node_modules/favicon/node_modules/request/node_modules/form-data/node_modules/async/lib/async.js",
		"/Users/kirkcp/Documents/node_play/slatemail/node_modules/fs-extra/node_modules/mkdirp/test/sync.js",
		"/Users/kirkcp/Documents/node_play/slatemail/node_modules/graceful-fs/fs.js",
		"/Users/kirkcp/Documents/node_play/slatemail/node_modules/favicon/node_modules/request/node_modules/http-signature/http_signing.md",
		"/Users/kirkcp/Documents/node_play/slatemail/mailComposer/mailComposer.html",
		"/Users/kirkcp/Documents/node_play/slatemail/attachments/INBOX/77852/Presidential Nicknames Quiz.docx",
		"/Users/kirkcp/Documents/node_play/slatemail/node_modules/jquery/src/attributes/prop.js",
		"/Users/kirkcp/Documents/node_play/slatemail/credentials/credentials.json",
		"/Users/kirkcp/Documents/node_play/slatemail/node_modules/favicon/node_modules/request/node_modules/form-data/node_modules/combined-stream/lib/combined_stream.js",
		"/Users/kirkcp/Documents/node_play/slatemail/node_modules/favicon/node_modules/request/node_modules/http-signature/node_modules/asn1/lib/ber/types.js",
		"/Users/kirkcp/Documents/node_play/slatemail/node_modules/favicon/node_modules/request/node_modules/node-uuid/benchmark/benchmark-native.c",
		"/Users/kirkcp/Documents/node_play/slatemail/node_modules/fs-extra/node_modules/ncp/test/symlink-fixtures/src/dir/bar",
		"/Users/kirkcp/Documents/node_play/slatemail/mailComposer/mailComposer.css",
		"/Users/kirkcp/Documents/node_play/slatemail/node_modules/jquery/src/sizzle/test/data/mixed_sort.html",
		"/Users/kirkcp/Documents/node_play/slatemail/mailComposer/ckeditor/samples/sample.css",
		"/Users/kirkcp/Documents/node_play/slatemail/node_modules/jquery/MIT-LICENSE.txt",
		"/Users/kirkcp/Documents/node_play/slatemail/node_modules/nodemailer/node_modules/hyperquest/node_modules/through/LICENSE.APACHE2",
		"/Users/kirkcp/Library/Application Support/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
		"/Users/kirkcp/Documents/node_play/slatemail/mailComposer/.sass-cache/9f04d129e58cea992d2f3f00116b63931132ec53/mailComposer.scssc",
		"/Users/kirkcp/Documents/node_play/slatemail/modules/dbHandler.js",
		"/Users/kirkcp/Documents/node_play/slatemail/node_modules/nodemailer/node_modules/nodemailer-direct-transport/src/message-queue.js",
		"/Users/kirkcp/Documents/node_play/slatemail/css/message.scss",
		"/Users/kirkcp/Documents/node_play/slatemail/mailComposer/test.html",
		"/Users/kirkcp/Documents/node_play/slatemail/node_modules/imap/test/test-parse-expr.js",
		"/Users/kirkcp/Documents/node_play/slatemail/node_modules/nodemailer/node_modules/hyperquest/test/auth_encoded.js",
		"/Users/kirkcp/Documents/node_play/slatemail/node_modules/fs-extra/node_modules/mkdirp/node_modules/minimist/test/default_bool.js",
		"/Users/kirkcp/Documents/node_play/slatemail/credentials/credentials2.json",
		"/Users/kirkcp/Documents/node_play/slatemail/modules/mailComposer.js",
		"/Users/kirkcp/Documents/node_play/slatemail/modules/mailComposer.html",
		"/Users/kirkcp/Documents/node_play/slatemail/modules/mailComposerTemplate.html",
		"/Users/kirkcp/Documents/node_play/slatemail/modules/mailCompser.js",
		"/Users/kirkcp/Documents/node_play/slatemail/css/styles.css",
		"/Users/kirkcp/Documents/node_play/slatemail/attachments/INBOX/153848/sex offenders.Jane.Registration.v5.docx",
		"/Users/kirkcp/Documents/node_play/slatemail/.gitignore",
		"/Users/kirkcp/Documents/node_play/slatemail/node_modules/imap/lib/Connection.js",
		"/Users/kirkcp/Documents/node_play/slatemail/node_modules/jquery/CONTRIBUTING.md",
		"/Users/kirkcp/Documents/node_play/slatemail/node_modules/imap/test/test-connection-idle-order.js",
		"/Users/kirkcp/Documents/node_play/slatemail/attachments/Sports Separation/359/MakeAll4.py",
		"/Users/kirkcp/Documents/node_play/slatemail/uids/INBOX_uids.json",
		"/Users/kirkcp/Desktop/oldcallbackcode",
		"/Users/kirkcp/Documents/node_play/slatemail/node_modules/imap/node_modules/readable-stream/lib/_stream_readable.js",
		"/Users/kirkcp/Documents/node_play/slatemail/node_modules/imap/package.json",
		"/Users/kirkcp/Documents/node_play/my_app_2/node_modules/mailparser/package.json",
		"/Users/kirkcp/Documents/node_play/my_app_2/package.json",
		"/Users/kirkcp/Documents/node_play/my_app/node_modules/mailparser/package.json",
		"/Users/kirkcp/Documents/node_play/my_app/offlineimap/List.Slate Discuss/new/1407424641_0.72124.sc-12375.local,U=2968,FMD5=c0386a44e1258edc742ebb66890c7d7d:2,",
		"/Users/kirkcp/Documents/interactives/lib/js/intSharing/intSharing.css",
		"/Users/kirkcp/Documents/interactives/2014/08/illustrated_map/src/data/dessert/dessert.html",
		"/Applications/MAMP/htdocs/editorial-interactives/interactive_server_scripts/trivia/getScores.php",
		"/Users/kirkcp/Downloads/ard0309st/ard0309stt11.csv",
		"/Applications/MAMP/htdocs/editorial-interactives/14-03/reincarnation/htdocs/index.php",
		"/Applications/MAMP/htdocs/editorial-interactives/trivia/builder/savedQuizzes/quiz18 2.json",
		"/Users/kirkcp/Downloads/ard0309st/ard0309statt01.csv",
		"/Applications/MAMP/htdocs/editorial-interactives/trivia/builder/quiz-optomized.php",
		"/Applications/MAMP/htdocs/editorial-interactives/trivia/builder/index.php",
		"/Applications/MAMP/htdocs/editorial-interactives/trivia/builder/builderService.php",
		"/Applications/MAMP/htdocs/editorial-interactives/trivia/htdocs/trivia.css",
		"/Users/kirkcp/Documents/interactives/2014/08/movie_poster/preview/movie_poster.css",
		"/Users/kirkcp/Documents/interactives/2014/08/sports_separation_redux/data_collection/player_pids/a.c._green.json",
		"/Users/kirkcp/Documents/interactives/2014/08/sports_separation_redux/data_collection/player_pids/a.b._brown.json",
		"/Users/kirkcp/Documents/interactives/2014/08/sports_separation_redux/data_collection/connection_strings/Connect500.json",
		"/Users/kirkcp/Documents/interactives/2014/08/sports_separation_redux/data_collection/player_pids/a.j._bramlett.json"
	],
	"find":
	{
		"height": 44.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"reply",
			"deletelocalmessages",
			"delete",
			"imaphandler",
			"getmailfromlocalbox",
			"markread(",
			"promises.push",
			"updateflags",
			"getuids",
			"uids[",
			"uids",
			"downloadnewmail",
			"savedescriptors",
			"descriptors",
			"descriptors[1]",
			"saveuids",
			"deletemessage",
			"deletelocalmessages",
			"downloadnewmail",
			".all(",
			"addlocalmessage",
			"uids",
			"downloadnewmail",
			"flags",
			"downloadnewmail",
			"results",
			"getLocalDescriptors",
			"msgs",
			"deleteLocalMessages",
			"ensurelocalbox",
			"deletelocalmessages",
			"stringify",
			"syncBoxIteration",
			"syncBox",
			"syncbox",
			"getmessage",
			"console.log",
			"console",
			"syncbox",
			"export",
			"dbhandler",
			"exports",
			"imaphandler",
			"console",
			"connectandopen",
			"getmailfromlocalbox",
			"savemailtolocalbox",
			"printattachments",
			"attachments",
			".inner",
			"this.inner",
			"threadclick",
			"#feffaf;",
			"feffaf",
			"selected",
			"attachments",
			"box",
			"box_name",
			"subject",
			"attachments",
			"container",
			".thread_container",
			"thread_data",
			"getthread",
			"project",
			"thread_data",
			"getthreadmessages",
			"printmessages",
			"messageview.",
			"getmessage",
			"getmessagewithuid",
			"transaction(",
			"onerror",
			"objectStore",
			"ObjectStore",
			"objectStore",
			"\"box_\"+mailbox_name",
			"onerror",
			"store.put",
			"keypress",
			"markcomplete",
			"getmessagewithuid",
			"hr",
			"prependTo",
			"strong",
			"gettostring",
			"deletemessage",
			"markcomplete",
			"deletemessage",
			"DayTile",
			"nav",
			"YearItem",
			"\\\"\\\"",
			"font-size",
			"blank_cell",
			"months",
			"td",
			"tr",
			"255",
			"days_printed",
			"Interactive",
			"-",
			"this",
			"share",
			"%t",
			"target_grave.name",
			"btn_share",
			" ||",
			"intsharing",
			"btn_share",
			"text_grab",
			"render.html",
			"renderhtml",
			"classic",
			"36",
			"35",
			"remove",
			"tooltip",
			"flower_count",
			"unbind",
			"cursor",
			"img",
			"cursor",
			"Disc",
			"Discontinued",
			"Died",
			"g4",
			"img"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 6,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "main.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3361,
						"regions":
						{
						},
						"selection":
						[
							[
								2786,
								2786
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "modules/dbHandler.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 17095,
						"regions":
						{
							"bookmarks":
							{
								"flags": 144,
								"icon": "bookmark",
								"regions":
								[
									[
										7549,
										7549
									],
									[
										12889,
										12889
									]
								],
								"scope": "bookmarks"
							}
						},
						"selection":
						[
							[
								9154,
								9154
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "modules/syncer.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5556,
						"regions":
						{
						},
						"selection":
						[
							[
								4053,
								4053
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 2751.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "modules/imapHandler.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6425,
						"regions":
						{
						},
						"selection":
						[
							[
								6133,
								6133
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "descriptors/2014_uids.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JSON.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "modules/syncer_old.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5644,
						"regions":
						{
						},
						"selection":
						[
							[
								237,
								237
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "modules/messageView.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12530,
						"regions":
						{
						},
						"selection":
						[
							[
								9851,
								9851
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 10326.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 34.0
	},
	"input":
	{
		"height": 34.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 0.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"project": "slatemail.sublime-project",
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"main",
				"main.js"
			],
			[
				"graves.scss",
				"src/graves.scss"
			],
			[
				"dbha",
				"modules/dbHandler.js"
			],
			[
				"styles",
				"css/styles.scss"
			],
			[
				"messageview",
				"modules/messageView.js"
			],
			[
				"mailcom",
				"mailComposer/mailComposer.js"
			],
			[
				"mailcomposer.html",
				"mailComposer/mailComposer.html"
			],
			[
				"mailcompo",
				"mailComposer/mailComposer.js"
			],
			[
				"mailview",
				"mailComposer/ckeditor/messageView.js"
			],
			[
				"imap",
				"modules/imapHandler.js"
			],
			[
				"imaph",
				"modules/imapHandler.js"
			],
			[
				"dbh",
				"modules/dbHandler.js"
			],
			[
				"message",
				"modules/messageView.js"
			],
			[
				"mailcompser",
				"mailComposer/mailComposer.js"
			],
			[
				"imapha",
				"modules/imapHandler.js"
			],
			[
				"dbhand",
				"modules/dbHandler.js"
			],
			[
				"mailcomposer",
				"mailComposer/mailComposer.js"
			],
			[
				"mailcomp",
				"mailComposer/mailComposer.js"
			],
			[
				"mailcomposer.htlm",
				"mailComposer/mailComposer.html"
			],
			[
				"mailcomps",
				"mailComposer/mailComposer.js"
			],
			[
				"messsageview",
				"mailComposer/ckeditor/messageView.js"
			],
			[
				"mailc",
				"mailComposer/mailComposer.js"
			],
			[
				"test",
				"mailComposer/test.html"
			],
			[
				"test.html",
				"mailComposer/test.html"
			],
			[
				"mailbxo",
				"modules/mailboxView.js"
			],
			[
				"mailbox",
				"modules/mailboxView.js"
			],
			[
				"mailboxvi",
				"modules/mailboxView.js"
			],
			[
				"mailcm",
				"mailComposer/mailComposer.js"
			],
			[
				"boxview",
				"modules/mailboxView.js"
			],
			[
				"styles.css",
				"css/styles.css"
			],
			[
				"fingers",
				"murakami/dist/fingers.json"
			],
			[
				"inbox.j",
				"inbox.js"
			],
			[
				"themesong",
				"src/quizzes/theme_song/theme_song.cson"
			],
			[
				"theme",
				"src/quizzes/theme_song/theme_song.cson"
			],
			[
				"theme_s",
				"sound/theme_songs/theme_songs.aup"
			],
			[
				"first_se",
				"src/quizzes/first_second/first_second.cson"
			],
			[
				"slideshow",
				"/Applications/MAMP/htdocs/editorial-interactives/13-02/slideshow/htdocs/slideshow.js"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
			[
				"gay",
				"~/Documents/interactives/src/features/2014/05/gay_marriage_map/gay_marriage_map.sublime-project"
			],
			[
				"simple_quiz",
				"~/Documents/interactives/src/features/2014/05/simple_quiz/simple_quiz.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 375.0,
		"selected_items":
		[
		],
		"width": 453.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 258.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
