{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"project_item",
				"project_item_nodes"
			],
			[
				"remove",
				"removeElement"
			],
			[
				"getThread",
				"getThread"
			],
			[
				"ensure",
				"ensureLocalBoxes"
			],
			[
				"getLoca",
				"getMailFromLocalBox"
			],
			[
				"message",
				"message_list"
			],
			[
				"sync",
				"syncComplete"
			],
			[
				"remote",
				"remote_boxes"
			],
			[
				"save",
				"saveDescriptors"
			],
			[
				"rmeote",
				"remote_descriptors"
			],
			[
				"favic",
				"favicon_url"
			],
			[
				"object",
				"object_store"
			],
			[
				"down",
				"downloadMessage"
			],
			[
				"mailb",
				"mailbox_name"
			],
			[
				"e",
				"ensureProjectStore"
			],
			[
				"messae",
				"message_view"
			],
			[
				"messages",
				"messages_wrapper"
			],
			[
				"email",
				"emailSelected"
			],
			[
				"emai",
				"emailSelected"
			],
			[
				"index",
				"indexedDB"
			],
			[
				"print",
				"printMail"
			],
			[
				"Sele",
				"selectProject"
			],
			[
				"overl",
				"overlay"
			],
			[
				"overla",
				"overlay_is_open"
			],
			[
				"Proje",
				"ProjectSelector"
			],
			[
				"sbu",
				"substringMatcher"
			],
			[
				"selected",
				"selected_email"
			],
			[
				"ref",
				"reflectMessages"
			],
			[
				"reflect",
				"reflectActiveMailbox"
			],
			[
				"tree_view",
				"tree_view_item"
			],
			[
				"get",
				"getBoxPath"
			],
			[
				"messa",
				"messages_to_print"
			],
			[
				"mail_",
				"mail_obj"
			],
			[
				"getAll",
				"getAllScheduleBoxes"
			],
			[
				"sender",
				"sender_address"
			],
			[
				"mailBox",
				"mailboxView"
			],
			[
				"mailbox",
				"mailboxView"
			],
			[
				"inbox",
				"inbox_email"
			],
			[
				"onDe",
				"onDeselectEmail"
			],
			[
				"mail",
				"mail_options"
			],
			[
				"obje",
				"objectStore"
			],
			[
				"call",
				"callback_on_end"
			],
			[
				"downla",
				"downloadMessage"
			],
			[
				"reso",
				"resolved_messages"
			],
			[
				"update",
				"update_request"
			],
			[
				"cb",
				"callback"
			],
			[
				"open",
				"connectAndOpen"
			],
			[
				"imap",
				"imapHandler"
			],
			[
				"mess",
				"messages_to_print"
			],
			[
				"lcoal",
				"local_descriptors"
			],
			[
				"selec",
				"selected_email"
			],
			[
				"getMail",
				"getMailFromLocalBox"
			],
			[
				"mailbo",
				"mailboxView"
			],
			[
				"thread",
				"thread_messages"
			],
			[
				"put",
				"put_request"
			],
			[
				"regular",
				"regularSync"
			],
			[
				"deb",
				"dbHandler"
			],
			[
				"saveMail",
				"saveMailObjectToNewThread"
			],
			[
				"to",
				"to_update"
			],
			[
				"remo",
				"remote_descriptors"
			],
			[
				"remote_",
				"remote_descriptors"
			],
			[
				"local",
				"local_descriptors"
			],
			[
				"delete",
				"deleteLocalMessages"
			],
			[
				"getU",
				"getUIDs"
			],
			[
				"dele",
				"deleteLocalMessages"
			],
			[
				"attachments",
				"attachments_container"
			],
			[
				"atta",
				"attachments_container"
			],
			[
				"getMe",
				"getMessageWithUID"
			],
			[
				"ensureProjec",
				"ensureProjectStore"
			],
			[
				"view",
				"view_space"
			],
			[
				"max-",
				"max-height"
			],
			[
				"days_",
				"days_printed"
			],
			[
				"days",
				"days_printed"
			],
			[
				"day",
				"daysInMonth"
			],
			[
				"real_esca",
				"mysql_real_escape_string"
			],
			[
				"real",
				"real_escape_string"
			],
			[
				"mem",
				"memcache_id"
			],
			[
				"data",
				"data_path"
			],
			[
				"cur",
				"current_index"
			],
			[
				"append",
				"appendTo"
			],
			[
				"appn",
				"appendTo"
			],
			[
				"db",
				"dbHandler"
			],
			[
				"getPer",
				"getPeopleString"
			],
			[
				"tool",
				"toolbarGroups"
			],
			[
				"edito",
				"editor_config"
			],
			[
				"inre",
				"inReplyTo"
			],
			[
				"onsel",
				"onSelectEmail"
			],
			[
				"selecte",
				"selected_message"
			],
			[
				"att",
				"attachments_count"
			],
			[
				"lates",
				"latest_message"
			],
			[
				"latest",
				"latest_message"
			],
			[
				"getTo",
				"getFromString"
			],
			[
				"content",
				"content_id"
			],
			[
				"text",
				"text_area"
			],
			[
				"getMa",
				"getMailFromLocalBox"
			],
			[
				"conne",
				"connectAndOpen"
			],
			[
				"connect",
				"connectAndOpen"
			],
			[
				"getUI",
				"getMessageWithUID"
			],
			[
				"existign",
				"existing_uids"
			],
			[
				"puzzle",
				"puzzle_complete"
			],
			[
				"prelo",
				"preload"
			],
			[
				"prel",
				"preloadImages"
			],
			[
				"appen",
				"appendTo"
			],
			[
				"twit",
				"twitterShare"
			],
			[
				"faceb",
				"facebookShare"
			],
			[
				"window",
				"window_scroll_top"
			],
			[
				"conta",
				"container_scroll_top"
			],
			[
				"scroll",
				"scroll_top"
			],
			[
				"scrol",
				"scrollTop"
			],
			[
				"overlay",
				"overlay_wrapper"
			],
			[
				"sound",
				"sound_directory"
			],
			[
				"sound_i",
				"sound_directory"
			],
			[
				"sound_",
				"sound_directory"
			],
			[
				"type",
				"types"
			],
			[
				"piano",
				"piano_overlays"
			],
			[
				"top",
				"top_bar"
			],
			[
				"existi",
				"existing_data"
			],
			[
				"exis",
				"existing_data"
			],
			[
				"death",
				"death_files"
			],
			[
				"played",
				"played_notes"
			],
			[
				"NOTE_",
				"NOTE_SEQUENCE"
			],
			[
				"query",
				"query_string"
			],
			[
				"END",
				"END_YEAR"
			],
			[
				"callba",
				"callback_on_message"
			],
			[
				"clal",
				"callback_on_end"
			],
			[
				"callb",
				"callback_on_end"
			],
			[
				"callbac",
				"callback_on_end"
			],
			[
				"callback",
				"callback_on_message"
			]
		]
	},
	"buffers":
	[
		{
			"file": "modules/imaper.js",
			"settings":
			{
				"buffer_size": 9532,
				"line_ending": "Unix"
			}
		},
		{
			"file": "main.html",
			"settings":
			{
				"buffer_size": 1188,
				"line_ending": "Unix"
			}
		},
		{
			"file": "main.js",
			"settings":
			{
				"buffer_size": 9230,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Searching 6012 files for \"credentials\"\n\n/Users/kirkcp/Documents/node_play/slatemail/.gitignore:\n    1: credentials\n    2  attachments\n    3  descriptors\n\n/Users/kirkcp/Documents/node_play/slatemail/mailComposer/mailComposer.js:\n   78  		var subject = this.container.find('.input_subject').html();\n   79  		var body = this.CKEDITOR.instances.message_body.getData();\n   80: 		var credentials = fs.readJsonSync('preferences/preferences.json').external;\n   81  		var mail_options = {\n   82: 			from: credentials.auth.user,\n   83  			to: to,\n   84  			subject: subject,\n   ..\n   90  		}\n   91  		console.log(mail_options);\n   92: 		var transporter = nodemailer.createTransport(smtpTransport(credentials));\n   93  		console.log(transporter);\n   94  \n\n/Users/kirkcp/Documents/node_play/slatemail/node_modules/favicon/node_modules/request/README.md:\n  605  * `proxy` - An HTTP proxy to be used. Supports proxy Auth with Basic Auth, identical to support for the `url` parameter (by embedding the auth info in the `uri`)\n  606  * `oauth` - Options for OAuth HMAC-SHA1 signing. See documentation above.\n  607: * `hawk` - Options for [Hawk signing](https://github.com/hueniverse/hawk). The `credentials` key must contain the necessary signing info, [see hawk docs for details](https://github.com/hueniverse/hawk#usage-example).\n  608  * `strictSSL` - If `true`, requires SSL certificates be valid. **Note:** to use your own certificate authority, you need to specify an agent that was created with that CA as an option.\n  609  * `agentOptions` - Object containing user agent options. See documentation above. **Note:** [see tls API doc for TLS/SSL options](http://nodejs.org/api/tls.html#tls_tls_connect_options_callback).\n\n/Users/kirkcp/Documents/node_play/slatemail/node_modules/favicon/node_modules/request/node_modules/form-data/Readme.md:\n  138  ```\n  139  \n  140: For edge cases, like POST request to URL with query string or to pass HTTP auth credentials, object can be passed to `form.submit()` as first parameter:\n  141  \n  142  ``` javascript\n\n/Users/kirkcp/Documents/node_play/slatemail/node_modules/favicon/node_modules/request/node_modules/hawk/README.md:\n   28    - [Confidentiality of Requests](#confidentiality-of-requests)\n   29    - [Spoofing by Counterfeit Servers](#spoofing-by-counterfeit-servers)\n   30:   - [Plaintext Storage of Credentials](#plaintext-storage-of-credentials)\n   31    - [Entropy of Keys](#entropy-of-keys)\n   32    - [Coverage Limitations](#coverage-limitations)\n   ..\n   48  \n   49  Similar to the HTTP [Digest access authentication schemes](http://www.ietf.org/rfc/rfc2617.txt), **Hawk** uses a set of\n   50: client credentials which include an identifier (e.g. username) and key (e.g. password). Likewise, just as with the Digest scheme,\n   51  the key is never included in authenticated requests. Instead, it is used to calculate a request MAC value which is\n   52  included in its place.\n   ..\n   61  The primary design goals of this scheme are to:\n   62  * simplify and improve HTTP authentication for services that are unwilling or unable to deploy TLS for all resources,\n   63: * secure credentials against leakage (e.g., when the client uses some form of dynamic configuration to determine where\n   64    to send an authenticated request), and\n   65: * avoid the exposure of credentials sent to a malicious server over an unauthenticated secure channel due to client\n   66    failure to validate the server's identity as part of its TLS handshake.\n   67  \n   ..\n   70  \n   71  The **Hawk** scheme requires the establishment of a shared symmetric key between the client and the server,\n   72: which is beyond the scope of this module. Typically, the shared credentials are established via an initial\n   73  TLS-protected phase or derived from some other shared confidential information available to both the client\n   74  and the server.\n   ..\n   84  key identifier combination. \n   85  \n   86: The timestamp enables the server to restrict the validity period of the credentials where requests occuring afterwards\n   87  are rejected. It also removes the need for the server to retain an unbounded number of nonce values for future checks.\n   88  By default, **Hawk** uses a time window of 1 minute to allow for time skew between the client and server (which in\n   ..\n  109  \n  110  \n  111: // Credentials lookup function\n  112  \n  113: var credentialsFunc = function (id, callback) {\n  114  \n  115:     var credentials = {\n  116          key: 'werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn',\n  117          algorithm: 'sha256',\n  ...\n  119      };\n  120  \n  121:     return callback(null, credentials);\n  122  };\n  123  \n  ...\n  128      // Authenticate incoming request\n  129  \n  130:     Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials, artifacts) {\n  131  \n  132          // Prepare response\n  133  \n  134:         var payload = (!err ? 'Hello ' + credentials.user + ' ' + artifacts.ext : 'Shoosh!');\n  135          var headers = { 'Content-Type': 'text/plain' };\n  136  \n  137          // Generate Server-Authorization response header\n  138  \n  139:         var header = Hawk.server.header(credentials, artifacts, { payload: payload, contentType: headers['Content-Type'] });\n  140          headers['Server-Authorization'] = header;\n  141  \n  ...\n  159  \n  160  \n  161: // Client credentials\n  162  \n  163: var credentials = {\n  164      id: 'dh37fgj492je',\n  165      key: 'werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn',\n  ...\n  177  // Generate Authorization request header\n  178  \n  179: var header = Hawk.client.header('http://example.com:8000/resource/1?b=1&a=2', 'GET', { credentials: credentials, ext: 'some-app-data' });\n  180  requestOptions.headers.Authorization = header.field;\n  181  \n  ...\n  186      // Authenticate the server's response\n  187  \n  188:     var isValid = Hawk.client.authenticate(response, credentials, header.artifacts, { payload: body });\n  189  \n  190      // Output results\n  ...\n  219  ```\n  220  \n  221: The client has previously obtained a set of **Hawk** credentials for accessing resources on the \"http://example.com/\"\n  222: server. The **Hawk** credentials issued to the client include the following attributes:\n  223  \n  224  * Key identifier: dh37fgj492je\n  ...\n  260  \n  261  The server validates the request by calculating the request MAC again based on the request received and verifies the validity\n  262: and scope of the **Hawk** credentials. If valid, the server responds with the requested resource.\n  263  \n  264  \n  ...\n  338  as a response header using the exact same syntax as the `Authorization` request header field.\n  339  \n  340: The header is contructed using the same process as the client's request header. The server uses the same credentials and other\n  341  artifacts provided by the client to constructs the normalized request string. The `ext` and `hash` values are replaced with\n  342  new values based on the server response. The rest as identical to those used by the client.\n  ...\n  366  \n  367  There are cases in which limited and short-term access to a protected resource is granted to a third party which does not\n  368: have access to the shared credentials. For example, displaying a protected image on a web page accessed by anyone. **Hawk**\n  369  provides limited support for such URIs in the form of a _bewit_ - a URI query parameter appended to the request URI which contains\n  370: the necessary credentials to authenticate the request.\n  371  \n  372  Because of the significant security risks involved in issuing such access, bewit usage is purposely limited only to GET requests\n  373: and for a finite period of time. Both the client and server can issue bewit credentials, however, the server should not use the same\n  374: credentials as the client to maintain clear traceability as to who issued which credentials.\n  375  \n  376: In order to simplify implementation, bewit credentials do not support single-use policy and can be replayed multiple times within\n  377  the granted access timeframe. \n  378  \n  ...\n  387  \n  388  \n  389: // Credentials lookup function\n  390  \n  391: var credentialsFunc = function (id, callback) {\n  392  \n  393:     var credentials = {\n  394          key: 'werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn',\n  395          algorithm: 'sha256'\n  396      };\n  397  \n  398:     return callback(null, credentials);\n  399  };\n  400  \n  ...\n  403  var handler = function (req, res) {\n  404  \n  405:     Hawk.uri.authenticate(req, credentialsFunc, {}, function (err, credentials, attributes) {\n  406  \n  407          res.writeHead(!err ? 200 : 401, { 'Content-Type': 'text/plain' });\n  ...\n  420  \n  421  \n  422: // Client credentials\n  423  \n  424: var credentials = {\n  425      id: 'dh37fgj492je',\n  426      key: 'werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn',\n  ...\n  431  \n  432  var duration = 60 * 5;      // 5 Minutes\n  433: var bewit = Hawk.uri.getBewit('http://example.com:8080/resource/1?b=1&a=2', { credentials: credentials, ttlSec: duration, ext: 'some-app-data' });\n  434  var uri = 'http://example.com:8000/resource/1?b=1&a=2' + '&bewit=' + bewit;\n  435  ```\n  ...\n  445  ### MAC Keys Transmission\n  446  \n  447: **Hawk** does not provide any mechanism for obtaining or transmitting the set of shared credentials required. Any mechanism used\n  448: to obtain **Hawk** credentials must ensure that these transmissions are protected using transport-layer mechanisms such as TLS.\n  449  \n  450  ### Confidentiality of Requests\n  ...\n  465  require transport-layer security for any requests where the authenticity of the resource server or of server responses is an issue.\n  466  \n  467: ### Plaintext Storage of Credentials\n  468  \n  469  The **Hawk** key functions the same way passwords do in traditional authentication systems. In order to compute the request MAC,\n  470  the server must have access to the key in plaintext form. This is in contrast, for example, to modern operating systems, which\n  471: store only a one-way hash of user credentials.\n  472  \n  473  If an attacker were to gain access to these keys - or worse, to the server's database of all such keys - he or she would be able\n  ...\n  480  MAC values, and will thus be able to mount offline brute-force attacks to recover the key used. Servers should be careful to\n  481  assign keys which are long enough, and random enough, to resist such attacks for at least the length of time that the **Hawk**\n  482: credentials are valid.\n  483  \n  484: For example, if the credentials are valid for two weeks, servers should ensure that it is not possible to mount a brute force\n  485  attack that recovers the key in less than two weeks. Of course, servers are urged to err on the side of caution, and use the\n  486  longest key reasonable.\n  ...\n  514  The client must only use the time information provided by the server if:\n  515  * it was delivered over a TLS connection and the server identity has been verified, or\n  516: * the `tsm` MAC digest calculated using the same client credentials over the timestamp has been verified.\n  517  \n  518  ### Client Clock Poisoning\n  ...\n  524  ### Bewit Limitations\n  525  \n  526: Special care must be taken when issuing bewit credentials to third parties. Bewit credentials are valid until expiration and cannot\n  527  be revoked or limited without using other means. Whatever resource they grant access to will be completely exposed to anyone with\n  528: access to the bewit credentials which act as bearer credentials for that particular resource. While bewit usage is limited to GET\n  529  requests only and therefore cannot be used to perform transactions or change server state, it can still be used to expose private\n  530  and sensitive information.\n  ...\n  561  The algorithm used is closely related to the key issued as different algorithms require different key sizes (and other\n  562  requirements). While some keys can be used for multiple algorithm, the protocol is designed to closely bind the key and algorithm\n  563: together as part of the issued credentials.\n  564  \n  565  ### Why is Host and Content-Type the only headers covered by the request MAC?\n  ...\n  594  this module is specifically designed for, and a delegated access mode which is being developed separately in\n  595  [Oz](https://github.com/hueniverse/oz). In addition to the **Hawk** use cases, Oz requires another attribute: the application id `app`.\n  596: This provides binding between the credentials and the application in a way that prevents an attacker from tricking an application\n  597: to use credentials issued to someone else. It also has an optional 'delegated-by' attribute `dlg` which is the application id of the\n  598: application the credentials were directly issued to. The goal of these two additions is to allow Oz to utilize **Hawk** directly,\n  599: but with the additional security of delegated credentials.\n  600  \n  601  ### What is the purpose of the static strings used in each normalized MAC input?\n\n/Users/kirkcp/Documents/node_play/slatemail/node_modules/favicon/node_modules/request/node_modules/hawk/example/usage.js:\n    9  \n   10  var internals = {\n   11:     credentials: {\n   12          dh37fgj492je: {\n   13              id: 'dh37fgj492je',                                             // Required by Hawk.client.header \n   ..\n   20  \n   21  \n   22: // Credentials lookup function\n   23  \n   24: var credentialsFunc = function (id, callback) {\n   25  \n   26:     return callback(null, internals.credentials[id]);\n   27  };\n   28  \n   ..\n   32  var handler = function (req, res) {\n   33  \n   34:     Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials, artifacts) {\n   35  \n   36:         var payload = (!err ? 'Hello ' + credentials.user + ' ' + artifacts.ext : 'Shoosh!');\n   37          var headers = {\n   38              'Content-Type': 'text/plain',\n   39:             'Server-Authorization': Hawk.server.header(credentials, artifacts, { payload: payload, contentType: 'text/plain' })\n   40          };\n   41  \n   ..\n   58  // Send authenticated request\n   59  \n   60: credentialsFunc('dh37fgj492je', function (err, credentials) {\n   61  \n   62:     var header = Hawk.client.header('http://127.0.0.1:8000/resource/1?b=1&a=2', 'GET', { credentials: credentials, ext: 'and welcome!' });\n   63      var options = {\n   64          uri: 'http://127.0.0.1:8000/resource/1?b=1&a=2',\n   ..\n   71      Request(options, function (error, response, body) {\n   72  \n   73:         var isValid = Hawk.client.authenticate(response, credentials, header.artifacts, { payload: body });\n   74          console.log(response.statusCode + ': ' + body + (isValid ? ' (valid)' : ' (invalid)'));\n   75          process.exit(0);\n\n/Users/kirkcp/Documents/node_play/slatemail/node_modules/favicon/node_modules/request/node_modules/hawk/lib/browser.js:\n   24              // Required\n   25  \n   26:             credentials: {\n   27                  id: 'dh37fgj492je',\n   28                  key: 'aoijedoaijsdlaksjdl',\n   ..\n   65          var timestamp = options.timestamp || hawk.utils.now(options.localtimeOffsetMsec);\n   66  \n   67:         // Validate credentials\n   68  \n   69:         var credentials = options.credentials;\n   70:         if (!credentials ||\n   71:             !credentials.id ||\n   72:             !credentials.key ||\n   73:             !credentials.algorithm) {\n   74  \n   75:             result.err = 'Invalid credentials object';\n   76              return result;\n   77          }\n   78  \n   79:         if (hawk.crypto.algorithms.indexOf(credentials.algorithm) === -1) {\n   80              result.err = 'Unknown algorithm';\n   81              return result;\n   ..\n  110              (options.payload || options.payload === '')) {\n  111  \n  112:             artifacts.hash = hawk.crypto.calculatePayloadHash(options.payload, credentials.algorithm, options.contentType);\n  113          }\n  114  \n  115:         var mac = hawk.crypto.calculateMac('header', credentials, artifacts);\n  116  \n  117          // Construct header\n  118  \n  119          var hasExt = artifacts.ext !== null && artifacts.ext !== undefined && artifacts.ext !== '';       // Other falsey values allowed\n  120:         var header = 'Hawk id=\"' + credentials.id +\n  121                       '\", ts=\"' + artifacts.ts +\n  122                       '\", nonce=\"' + artifacts.nonce +\n  ...\n  143              // Required\n  144  \n  145:             credentials: {\n  146              id: 'dh37fgj492je',\n  147              key: 'aoijedoaijsdlaksjdl',\n  ...\n  176          var now = hawk.utils.now(options.localtimeOffsetMsec);\n  177  \n  178:         // Validate credentials\n  179  \n  180:         var credentials = options.credentials;\n  181:         if (!credentials ||\n  182:             !credentials.id ||\n  183:             !credentials.key ||\n  184:             !credentials.algorithm) {\n  185  \n  186              return '';\n  187          }\n  188  \n  189:         if (hawk.crypto.algorithms.indexOf(credentials.algorithm) === -1) {\n  190              return '';\n  191          }\n  ...\n  198  \n  199          var exp = now + options.ttlSec;\n  200:         var mac = hawk.crypto.calculateMac('bewit', credentials, {\n  201              ts: exp,\n  202              nonce: '',\n  ...\n  210          // Construct bewit: id\\exp\\mac\\ext\n  211  \n  212:         var bewit = credentials.id + '\\\\' + exp + '\\\\' + mac + '\\\\' + options.ext;\n  213          return hawk.utils.base64urlEncode(bewit);\n  214      },\n  ...\n  225      */\n  226  \n  227:     authenticate: function (request, credentials, artifacts, options) {\n  228  \n  229          options = options || {};\n  ...\n  245  \n  246              if (attributes.ts) {\n  247:                 var tsm = hawk.crypto.calculateTsMac(attributes.ts, credentials);\n  248                  if (tsm !== attributes.tsm) {\n  249                      return false;\n  ...\n  281          };\n  282  \n  283:         var mac = hawk.crypto.calculateMac('response', credentials, modArtifacts);\n  284          if (mac !== attributes.mac) {\n  285              return false;\n  ...\n  296          }\n  297  \n  298:         var calculatedHash = hawk.crypto.calculatePayloadHash(options.payload, credentials.algorithm, getHeader('content-type'));\n  299          return (calculatedHash === attributes.hash);\n  300      },\n  ...\n  316          var timestamp = options.timestamp || hawk.utils.now(options.localtimeOffsetMsec);\n  317  \n  318:         // Validate credentials\n  319  \n  320:         var credentials = options.credentials;\n  321:         if (!credentials ||\n  322:             !credentials.id ||\n  323:             !credentials.key ||\n  324:             !credentials.algorithm) {\n  325  \n  326              // Invalid credential object\n  ...\n  328          }\n  329  \n  330:         if (hawk.crypto.algorithms.indexOf(credentials.algorithm) === -1) {\n  331              return null;\n  332          }\n  ...\n  339              host: host,\n  340              port: port,\n  341:             hash: hawk.crypto.calculatePayloadHash(message, credentials.algorithm)\n  342          };\n  343  \n  ...\n  345  \n  346          var result = {\n  347:             id: credentials.id,\n  348              ts: artifacts.ts,\n  349              nonce: artifacts.nonce,\n  350              hash: artifacts.hash,\n  351:             mac: hawk.crypto.calculateMac('message', credentials, artifacts)\n  352          };\n  353  \n  ...\n  355      },\n  356  \n  357:     authenticateTimestamp: function (message, credentials, updateClock) {           // updateClock defaults to true\n  358  \n  359:         var tsm = hawk.crypto.calculateTsMac(message.ts, credentials);\n  360          if (tsm !== message.tsm) {\n  361              return false;\n  ...\n  377      algorithms: ['sha1', 'sha256'],\n  378  \n  379:     calculateMac: function (type, credentials, options) {\n  380  \n  381          var normalized = hawk.crypto.generateNormalizedString(type, options);\n  382  \n  383:         var hmac = CryptoJS['Hmac' + credentials.algorithm.toUpperCase()](normalized, credentials.key);\n  384          return hmac.toString(CryptoJS.enc.Base64);\n  385      },\n  ...\n  420      },\n  421  \n  422:     calculateTsMac: function (ts, credentials) {\n  423  \n  424:         var hash = CryptoJS['Hmac' + credentials.algorithm.toUpperCase()]('hawk.' + hawk.crypto.headerVersion + '.ts\\n' + ts + '\\n', credentials.key);\n  425          return hash.toString(CryptoJS.enc.Base64);\n  426      }\n\n/Users/kirkcp/Documents/node_play/slatemail/node_modules/favicon/node_modules/request/node_modules/hawk/lib/client.js:\n   22          // Required\n   23  \n   24:         credentials: {\n   25              id: 'dh37fgj492je',\n   26              key: 'aoijedoaijsdlaksjdl',\n   ..\n   63      var timestamp = options.timestamp || Utils.nowSecs(options.localtimeOffsetMsec);\n   64  \n   65:     // Validate credentials\n   66  \n   67:     var credentials = options.credentials;\n   68:     if (!credentials ||\n   69:         !credentials.id ||\n   70:         !credentials.key ||\n   71:         !credentials.algorithm) {\n   72  \n   73          result.err = 'Invalid credential object';\n   ..\n   75      }\n   76  \n   77:     if (Crypto.algorithms.indexOf(credentials.algorithm) === -1) {\n   78          result.err = 'Unknown algorithm';\n   79          return result;\n   ..\n  108          (options.payload || options.payload === '')) {\n  109  \n  110:         artifacts.hash = Crypto.calculatePayloadHash(options.payload, credentials.algorithm, options.contentType);\n  111      }\n  112  \n  113:     var mac = Crypto.calculateMac('header', credentials, artifacts);\n  114  \n  115      // Construct header\n  116  \n  117      var hasExt = artifacts.ext !== null && artifacts.ext !== undefined && artifacts.ext !== '';       // Other falsey values allowed\n  118:     var header = 'Hawk id=\"' + credentials.id +\n  119                   '\", ts=\"' + artifacts.ts +\n  120                   '\", nonce=\"' + artifacts.nonce +\n  ...\n  145  */\n  146  \n  147: exports.authenticate = function (res, credentials, artifacts, options) {\n  148  \n  149      artifacts = Hoek.clone(artifacts);\n  ...\n  162  \n  163          if (attributes.ts) {\n  164:             var tsm = Crypto.calculateTsMac(attributes.ts, credentials);\n  165              if (tsm !== attributes.tsm) {\n  166                  return false;\n  ...\n  185      artifacts.hash = attributes.hash;\n  186  \n  187:     var mac = Crypto.calculateMac('response', credentials, artifacts);\n  188      if (mac !== attributes.mac) {\n  189          return false;\n  ...\n  200      }\n  201  \n  202:     var calculatedHash = Crypto.calculatePayloadHash(options.payload, credentials.algorithm, res.headers['content-type']);\n  203      return (calculatedHash === attributes.hash);\n  204  };\n  ...\n  213          // Required\n  214  \n  215:         credentials: {\n  216              id: 'dh37fgj492je',\n  217              key: 'aoijedoaijsdlaksjdl',\n  ...\n  246      var now = Utils.now(options.localtimeOffsetMsec);\n  247  \n  248:     // Validate credentials\n  249  \n  250:     var credentials = options.credentials;\n  251:     if (!credentials ||\n  252:         !credentials.id ||\n  253:         !credentials.key ||\n  254:         !credentials.algorithm) {\n  255  \n  256          return '';\n  257      }\n  258  \n  259:     if (Crypto.algorithms.indexOf(credentials.algorithm) === -1) {\n  260          return '';\n  261      }\n  ...\n  270  \n  271      var exp = Math.floor(now / 1000) + options.ttlSec;\n  272:     var mac = Crypto.calculateMac('bewit', credentials, {\n  273          ts: exp,\n  274          nonce: '',\n  ...\n  282      // Construct bewit: id\\exp\\mac\\ext\n  283  \n  284:     var bewit = credentials.id + '\\\\' + exp + '\\\\' + mac + '\\\\' + options.ext;\n  285      return Hoek.base64urlEncode(bewit);\n  286  };\n  ...\n  297          // Required\n  298  \n  299:         credentials: {\n  300              id: 'dh37fgj492je',\n  301              key: 'aoijedoaijsdlaksjdl',\n  ...\n  327      var timestamp = options.timestamp || Utils.nowSecs(options.localtimeOffsetMsec);\n  328  \n  329:     // Validate credentials\n  330  \n  331:     var credentials = options.credentials;\n  332:     if (!credentials ||\n  333:         !credentials.id ||\n  334:         !credentials.key ||\n  335:         !credentials.algorithm) {\n  336  \n  337          // Invalid credential object\n  ...\n  339      }\n  340  \n  341:     if (Crypto.algorithms.indexOf(credentials.algorithm) === -1) {\n  342          return null;\n  343      }\n  ...\n  350          host: host,\n  351          port: port,\n  352:         hash: Crypto.calculatePayloadHash(message, credentials.algorithm)\n  353      };\n  354  \n  ...\n  356  \n  357      var result = {\n  358:         id: credentials.id,\n  359          ts: artifacts.ts,\n  360          nonce: artifacts.nonce,\n  361          hash: artifacts.hash,\n  362:         mac: Crypto.calculateMac('message', credentials, artifacts)\n  363      };\n  364  \n\n/Users/kirkcp/Documents/node_play/slatemail/node_modules/favicon/node_modules/request/node_modules/hawk/lib/crypto.js:\n   25  /*\n   26      type: 'header',                                 // 'header', 'bewit', 'response'\n   27:     credentials: {\n   28          key: 'aoijedoaijsdlaksjdl',\n   29          algorithm: 'sha256'                         // 'sha1', 'sha256'\n   ..\n   43  */\n   44  \n   45: exports.calculateMac = function (type, credentials, options) {\n   46  \n   47      var normalized = exports.generateNormalizedString(type, options);\n   48  \n   49:     var hmac = Crypto.createHmac(credentials.algorithm, credentials.key).update(normalized);\n   50      var digest = hmac.digest('base64');\n   51      return digest;\n   ..\n  111  \n  112  \n  113: exports.calculateTsMac = function (ts, credentials) {\n  114  \n  115:     var hmac = Crypto.createHmac(credentials.algorithm, credentials.key);\n  116      hmac.update('hawk.' + exports.headerVersion + '.ts\\n' + ts + '\\n');\n  117      return hmac.digest('base64');\n  ...\n  119  \n  120  \n  121: exports.timestampMessage = function (credentials, localtimeOffsetMsec) {\n  122  \n  123      var now = Utils.nowSecs(localtimeOffsetMsec);\n  124:     var tsm = exports.calculateTsMac(now, credentials);\n  125      return { ts: now, tsm: tsm };\n  126  };\n\n/Users/kirkcp/Documents/node_play/slatemail/node_modules/favicon/node_modules/request/node_modules/hawk/lib/server.js:\n   26                          };\n   27    \n   28:    credentialsFunc:     required function to lookup the set of Hawk credentials based on the provided credentials id.\n   29:                         The credentials include the MAC key, MAC algorithm, and other attributes (such as username)\n   30                          needed by the application. This function is the equivalent of verifying the username and\n   31                          password in Basic authentication.\n   32    \n   33:                         var credentialsFunc = function (id, callback) {\n   34      \n   35:                             // Lookup credentials in database\n   36                              db.lookup(id, function (err, item) {\n   37      \n   ..\n   40                                  }\n   41      \n   42:                                 var credentials = {\n   43                                      // Required\n   44                                      key: item.key,\n   ..\n   48                                  };\n   49      \n   50:                                 return callback(null, credentials);\n   51                              });\n   52                          };\n   ..\n   73                                 a hash value over the entire payload (assuming it has already be normalized to the same format and\n   74                                 encoding used by the client to calculate the hash on request). If the payload is not available at the time\n   75:                                of authentication, the authenticatePayload() method can be used by passing it the credentials and\n   76                                 attributes.hash returned in the authenticate callback.\n   77  \n   ..\n   80      }\n   81  \n   82:     callback: function (err, credentials, artifacts) { }\n   83   */\n   84  \n   85: exports.authenticate = function (req, credentialsFunc, options, callback) {\n   86  \n   87      callback = Hoek.nextTick(callback);\n   ..\n  137      }\n  138  \n  139:     // Fetch Hawk credentials\n  140  \n  141:     credentialsFunc(attributes.id, function (err, credentials) {\n  142  \n  143          if (err) {\n  144:             return callback(err, credentials || null, artifacts);\n  145          }\n  146  \n  147:         if (!credentials) {\n  148:             return callback(Boom.unauthorized('Unknown credentials', 'Hawk'), null, artifacts);\n  149          }\n  150  \n  151:         if (!credentials.key ||\n  152:             !credentials.algorithm) {\n  153  \n  154:             return callback(Boom.internal('Invalid credentials'), credentials, artifacts);\n  155          }\n  156  \n  157:         if (Crypto.algorithms.indexOf(credentials.algorithm) === -1) {\n  158:             return callback(Boom.internal('Unknown algorithm'), credentials, artifacts);\n  159          }\n  160  \n  161          // Calculate MAC\n  162  \n  163:         var mac = Crypto.calculateMac('header', credentials, artifacts);\n  164          if (!Cryptiles.fixedTimeComparison(mac, attributes.mac)) {\n  165:             return callback(Boom.unauthorized('Bad mac', 'Hawk'), credentials, artifacts);\n  166          }\n  167  \n  ...\n  172  \n  173              if (!attributes.hash) {\n  174:                 return callback(Boom.unauthorized('Missing required payload hash', 'Hawk'), credentials, artifacts);\n  175              }\n  176  \n  177:             var hash = Crypto.calculatePayloadHash(options.payload, credentials.algorithm, request.contentType);\n  178              if (!Cryptiles.fixedTimeComparison(hash, attributes.hash)) {\n  179:                 return callback(Boom.unauthorized('Bad payload hash', 'Hawk'), credentials, artifacts);\n  180              }\n  181          }\n  ...\n  186  \n  187              if (err) {\n  188:                 return callback(Boom.unauthorized('Invalid nonce', 'Hawk'), credentials, artifacts);\n  189              }\n  190  \n  ...\n  192  \n  193              if (Math.abs((attributes.ts * 1000) - now) > (options.timestampSkewSec * 1000)) {\n  194:                 var tsm = Crypto.timestampMessage(credentials, options.localtimeOffsetMsec);\n  195:                 return callback(Boom.unauthorized('Stale timestamp', 'Hawk', tsm), credentials, artifacts);\n  196              }\n  197  \n  198              // Successful authentication\n  199  \n  200:             return callback(null, credentials, artifacts);\n  201          });\n  202      });\n  ...\n  208  /*\n  209      payload:        raw request payload\n  210:     credentials:    from authenticate callback\n  211      artifacts:      from authenticate callback\n  212      contentType:    req.headers['content-type']\n  213  */\n  214  \n  215: exports.authenticatePayload = function (payload, credentials, artifacts, contentType) {\n  216  \n  217:     var calculatedHash = Crypto.calculatePayloadHash(payload, credentials.algorithm, contentType);\n  218      return Cryptiles.fixedTimeComparison(calculatedHash, artifacts.hash);\n  219  };\n  ...\n  236  \n  237  /*\n  238:     credentials: {},                                        // Object received from authenticate()\n  239      artifacts: {}                                           // Object received from authenticate(); 'mac', 'hash', and 'ext' - ignored\n  240      options: {\n  ...\n  246  */\n  247  \n  248: exports.header = function (credentials, artifacts, options) {\n  249  \n  250      // Prepare inputs\n  ...\n  264      artifacts.ext = options.ext;\n  265  \n  266:     // Validate credentials\n  267  \n  268:     if (!credentials ||\n  269:         !credentials.key ||\n  270:         !credentials.algorithm) {\n  271  \n  272          // Invalid credential object\n  ...\n  274      }\n  275  \n  276:     if (Crypto.algorithms.indexOf(credentials.algorithm) === -1) {\n  277          return '';\n  278      }\n  ...\n  283          (options.payload || options.payload === '')) {\n  284  \n  285:         artifacts.hash = Crypto.calculatePayloadHash(options.payload, credentials.algorithm, options.contentType);\n  286      }\n  287  \n  288:     var mac = Crypto.calculateMac('response', credentials, artifacts);\n  289  \n  290      // Construct header\n  ...\n  309   */\n  310  \n  311: exports.authenticateBewit = function (req, credentialsFunc, options, callback) {\n  312  \n  313      callback = Hoek.nextTick(callback);\n  ...\n  393      }\n  394  \n  395:     // Fetch Hawk credentials\n  396  \n  397:     credentialsFunc(bewit.id, function (err, credentials) {\n  398  \n  399          if (err) {\n  400:             return callback(err, credentials || null, bewit.ext);\n  401          }\n  402  \n  403:         if (!credentials) {\n  404:             return callback(Boom.unauthorized('Unknown credentials', 'Hawk'), null, bewit);\n  405          }\n  406  \n  407:         if (!credentials.key ||\n  408:             !credentials.algorithm) {\n  409  \n  410:             return callback(Boom.internal('Invalid credentials'), credentials, bewit);\n  411          }\n  412  \n  413:         if (Crypto.algorithms.indexOf(credentials.algorithm) === -1) {\n  414:             return callback(Boom.internal('Unknown algorithm'), credentials, bewit);\n  415          }\n  416  \n  417          // Calculate MAC\n  418  \n  419:         var mac = Crypto.calculateMac('bewit', credentials, {\n  420              ts: bewit.exp,\n  421              nonce: '',\n  ...\n  428  \n  429          if (!Cryptiles.fixedTimeComparison(mac, bewit.mac)) {\n  430:             return callback(Boom.unauthorized('Bad mac', 'Hawk'), credentials, bewit);\n  431          }\n  432  \n  433          // Successful authentication\n  434  \n  435:         return callback(null, credentials, bewit);\n  436      });\n  437  };\n  ...\n  443   */\n  444  \n  445: exports.authenticateMessage = function (host, port, message, authorization, credentialsFunc, options, callback) {\n  446  \n  447      callback = Hoek.nextTick(callback);\n  ...\n  467      }\n  468  \n  469:     // Fetch Hawk credentials\n  470  \n  471:     credentialsFunc(authorization.id, function (err, credentials) {\n  472  \n  473          if (err) {\n  474:             return callback(err, credentials || null);\n  475          }\n  476  \n  477:         if (!credentials) {\n  478:             return callback(Boom.unauthorized('Unknown credentials', 'Hawk'));\n  479          }\n  480  \n  481:         if (!credentials.key ||\n  482:             !credentials.algorithm) {\n  483  \n  484:             return callback(Boom.internal('Invalid credentials'), credentials);\n  485          }\n  486  \n  487:         if (Crypto.algorithms.indexOf(credentials.algorithm) === -1) {\n  488:             return callback(Boom.internal('Unknown algorithm'), credentials);\n  489          }\n  490  \n  ...\n  501          // Calculate MAC\n  502  \n  503:         var mac = Crypto.calculateMac('message', credentials, artifacts);\n  504          if (!Cryptiles.fixedTimeComparison(mac, authorization.mac)) {\n  505:             return callback(Boom.unauthorized('Bad mac', 'Hawk'), credentials);\n  506          }\n  507  \n  508          // Check payload hash\n  509  \n  510:         var hash = Crypto.calculatePayloadHash(message, credentials.algorithm);\n  511          if (!Cryptiles.fixedTimeComparison(hash, authorization.hash)) {\n  512:             return callback(Boom.unauthorized('Bad message hash', 'Hawk'), credentials);\n  513          }\n  514  \n  ...\n  518  \n  519              if (err) {\n  520:                 return callback(Boom.unauthorized('Invalid nonce', 'Hawk'), credentials);\n  521              }\n  522  \n  ...\n  524  \n  525              if (Math.abs((authorization.ts * 1000) - now) > (options.timestampSkewSec * 1000)) {\n  526:                 return callback(Boom.unauthorized('Stale timestamp'), credentials);\n  527              }\n  528  \n  529              // Successful authentication\n  530  \n  531:             return callback(null, credentials);\n  532          });\n  533      });\n\n/Users/kirkcp/Documents/node_play/slatemail/node_modules/favicon/node_modules/request/node_modules/hawk/test/browser.js:\n   24  describe('Browser', function () {\n   25  \n   26:     var credentialsFunc = function (id, callback) {\n   27  \n   28:         var credentials = {\n   29              id: id,\n   30              key: 'werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn',\n   ..\n   33          };\n   34  \n   35:         return callback(null, credentials);\n   36      };\n   37  \n   ..\n   45          };\n   46  \n   47:         credentialsFunc('123456', function (err, credentials) {\n   48  \n   49:             var bewit = Browser.client.bewit('http://example.com/resource/4?a=1&b=2', { credentials: credentials, ttlSec: 60 * 60 * 24 * 365 * 100, ext: 'some-app-data' });\n   50              req.url += '&bewit=' + bewit;\n   51  \n   52:             Hawk.uri.authenticate(req, credentialsFunc, {}, function (err, credentials, attributes) {\n   53  \n   54                  expect(err).to.not.exist();\n   55:                 expect(credentials.user).to.equal('steve');\n   56                  expect(attributes.ext).to.equal('some-app-data');\n   57                  done();\n   ..\n   69          };\n   70  \n   71:         credentialsFunc('123456', function (err, credentials) {\n   72  \n   73:             var bewit = Browser.client.bewit('http://example.com/resource/4?a=1&b=2', { credentials: credentials, ttlSec: 60 * 60 * 24 * 365 * 100 });\n   74              req.url += '&bewit=' + bewit;\n   75  \n   76:             Hawk.uri.authenticate(req, credentialsFunc, {}, function (err, credentials, attributes) {\n   77  \n   78                  expect(err).to.not.exist();\n   79:                 expect(credentials.user).to.equal('steve');\n   80                  done();\n   81              });\n   ..\n   87          it('returns a valid bewit value', function (done) {\n   88  \n   89:             var credentials = {\n   90                  id: '123456',\n   91                  key: '2983d45yun89q',\n   ..\n   93              };\n   94  \n   95:             var bewit = Browser.client.bewit('https://example.com/somewhere/over/the/rainbow', { credentials: credentials, ttlSec: 300, localtimeOffsetMsec: 1356420407232 - Hawk.utils.now(), ext: 'xandyandz' });\n   96              expect(bewit).to.equal('MTIzNDU2XDEzNTY0MjA3MDdca3NjeHdOUjJ0SnBQMVQxekRMTlBiQjVVaUtJVTl0T1NKWFRVZEc3WDloOD1ceGFuZHlhbmR6');\n   97              done();\n   ..\n  100          it('returns a valid bewit value (explicit HTTP port)', function (done) {\n  101  \n  102:             var credentials = {\n  103                  id: '123456',\n  104                  key: '2983d45yun89q',\n  ...\n  106              };\n  107  \n  108:             var bewit = Browser.client.bewit('http://example.com:8080/somewhere/over/the/rainbow', { credentials: credentials, ttlSec: 300, localtimeOffsetMsec: 1356420407232 - Hawk.utils.now(), ext: 'xandyandz' });\n  109              expect(bewit).to.equal('MTIzNDU2XDEzNTY0MjA3MDdcaFpiSjNQMmNLRW80a3kwQzhqa1pBa1J5Q1p1ZWc0V1NOYnhWN3ZxM3hIVT1ceGFuZHlhbmR6');\n  110              done();\n  ...\n  113          it('returns a valid bewit value (explicit HTTPS port)', function (done) {\n  114  \n  115:             var credentials = {\n  116                  id: '123456',\n  117                  key: '2983d45yun89q',\n  ...\n  119              };\n  120  \n  121:             var bewit = Browser.client.bewit('https://example.com:8043/somewhere/over/the/rainbow', { credentials: credentials, ttlSec: 300, localtimeOffsetMsec: 1356420407232 - Hawk.utils.now(), ext: 'xandyandz' });\n  122              expect(bewit).to.equal('MTIzNDU2XDEzNTY0MjA3MDdcL2t4UjhwK0xSaTdvQTRnUXc3cWlxa3BiVHRKYkR4OEtRMC9HRUwvVytTUT1ceGFuZHlhbmR6');\n  123              done();\n  ...\n  126          it('returns a valid bewit value (null ext)', function (done) {\n  127  \n  128:             var credentials = {\n  129                  id: '123456',\n  130                  key: '2983d45yun89q',\n  ...\n  132              };\n  133  \n  134:             var bewit = Browser.client.bewit('https://example.com/somewhere/over/the/rainbow', { credentials: credentials, ttlSec: 300, localtimeOffsetMsec: 1356420407232 - Hawk.utils.now(), ext: null });\n  135              expect(bewit).to.equal('MTIzNDU2XDEzNTY0MjA3MDdcSUdZbUxnSXFMckNlOEN4dktQczRKbFdJQStValdKSm91d2dBUmlWaENBZz1c');\n  136              done();\n  ...\n  139          it('errors on invalid options', function (done) {\n  140  \n  141:             var credentials = {\n  142                  id: '123456',\n  143                  key: '2983d45yun89q',\n  ...\n  152          it('errors on missing uri', function (done) {\n  153  \n  154:             var credentials = {\n  155                  id: '123456',\n  156                  key: '2983d45yun89q',\n  ...\n  158              };\n  159  \n  160:             var bewit = Browser.client.bewit('', { credentials: credentials, ttlSec: 300, localtimeOffsetMsec: 1356420407232 - Hawk.utils.now(), ext: 'xandyandz' });\n  161              expect(bewit).to.equal('');\n  162              done();\n  ...\n  165          it('errors on invalid uri', function (done) {\n  166  \n  167:             var credentials = {\n  168                  id: '123456',\n  169                  key: '2983d45yun89q',\n  ...\n  171              };\n  172  \n  173:             var bewit = Browser.client.bewit(5, { credentials: credentials, ttlSec: 300, localtimeOffsetMsec: 1356420407232 - Hawk.utils.now(), ext: 'xandyandz' });\n  174              expect(bewit).to.equal('');\n  175              done();\n  176          });\n  177  \n  178:         it('errors on invalid credentials (id)', function (done) {\n  179  \n  180:             var credentials = {\n  181                  key: '2983d45yun89q',\n  182                  algorithm: 'sha256'\n  183              };\n  184  \n  185:             var bewit = Browser.client.bewit('https://example.com/somewhere/over/the/rainbow', { credentials: credentials, ttlSec: 3000, ext: 'xandyandz' });\n  186              expect(bewit).to.equal('');\n  187              done();\n  188          });\n  189  \n  190:         it('errors on missing credentials', function (done) {\n  191  \n  192              var bewit = Browser.client.bewit('https://example.com/somewhere/over/the/rainbow', { ttlSec: 3000, ext: 'xandyandz' });\n  ...\n  195          });\n  196  \n  197:         it('errors on invalid credentials (key)', function (done) {\n  198  \n  199:             var credentials = {\n  200                  id: '123456',\n  201                  algorithm: 'sha256'\n  202              };\n  203  \n  204:             var bewit = Browser.client.bewit('https://example.com/somewhere/over/the/rainbow', { credentials: credentials, ttlSec: 3000, ext: 'xandyandz' });\n  205              expect(bewit).to.equal('');\n  206              done();\n  ...\n  209          it('errors on invalid algorithm', function (done) {\n  210  \n  211:             var credentials = {\n  212                  id: '123456',\n  213                  key: '2983d45yun89q',\n  ...\n  215              };\n  216  \n  217:             var bewit = Browser.client.bewit('https://example.com/somewhere/over/the/rainbow', { credentials: credentials, ttlSec: 300, ext: 'xandyandz' });\n  218              expect(bewit).to.equal('');\n  219              done();\n  ...\n  222          it('errors on missing options', function (done) {\n  223  \n  224:             var credentials = {\n  225                  id: '123456',\n  226                  key: '2983d45yun89q',\n  ...\n  243          };\n  244  \n  245:         credentialsFunc('123456', function (err, credentials) {\n  246  \n  247:             req.authorization = Browser.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials, ext: 'some-app-data' }).field;\n  248              expect(req.authorization).to.exist();\n  249  \n  250:             Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials, artifacts) {\n  251  \n  252                  expect(err).to.not.exist();\n  253:                 expect(credentials.user).to.equal('steve');\n  254                  expect(artifacts.ext).to.equal('some-app-data');\n  255                  done();\n  ...\n  271          var payload = 'some not so random text';\n  272  \n  273:         credentialsFunc('123456', function (err, credentials) {\n  274  \n  275:             var reqHeader = Browser.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials, ext: 'some-app-data', payload: payload, contentType: req.headers['content-type'] });\n  276              req.headers.authorization = reqHeader.field;\n  277  \n  278:             Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials, artifacts) {\n  279  \n  280                  expect(err).to.not.exist();\n  281:                 expect(credentials.user).to.equal('steve');\n  282                  expect(artifacts.ext).to.equal('some-app-data');\n  283:                 expect(Hawk.server.authenticatePayload(payload, credentials, artifacts, req.headers['content-type'])).to.equal(true);\n  284  \n  285                  var res = {\n  ...\n  293                  };\n  294  \n  295:                 res.headers['server-authorization'] = Hawk.server.header(credentials, artifacts, { payload: 'some reply', contentType: 'text/plain', ext: 'response-specific' });\n  296                  expect(res.headers['server-authorization']).to.exist();\n  297  \n  298:                 expect(Browser.client.authenticate(res, credentials, artifacts, { payload: 'some reply' })).to.equal(true);\n  299                  done();\n  300              });\n  ...\n  315          var payload = 'some not so random text';\n  316  \n  317:         credentialsFunc('123456', function (err, credentials) {\n  318  \n  319:             var reqHeader = Browser.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials, ext: 'some-app-data', payload: payload, contentType: req.headers['content-type'] });\n  320              req.headers.authorization = reqHeader.field;\n  321  \n  322:             Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials, artifacts) {\n  323  \n  324                  expect(err).to.not.exist();\n  325:                 expect(credentials.user).to.equal('steve');\n  326                  expect(artifacts.ext).to.equal('some-app-data');\n  327:                 expect(Hawk.server.authenticatePayload(payload, credentials, artifacts, req.headers['content-type'])).to.equal(true);\n  328  \n  329                  var res = {\n  ...\n  337                  };\n  338  \n  339:                 res.headers['server-authorization'] = Hawk.server.header(credentials, artifacts, { payload: 'some reply', contentType: 'text/plain', ext: 'response-specific' });\n  340                  expect(res.headers['server-authorization']).to.exist();\n  341  \n  342:                 expect(Browser.client.authenticate(res, credentials, artifacts, { payload: 'some reply' })).to.equal(true);\n  343                  done();\n  344              });\n  ...\n  355          };\n  356  \n  357:         credentialsFunc('123456', function (err, credentials) {\n  358  \n  359:             req.authorization = Browser.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials, ext: 'some-app-data', localtimeOffsetMsec: 100000 }).field;\n  360              expect(req.authorization).to.exist();\n  361  \n  362:             Hawk.server.authenticate(req, credentialsFunc, { localtimeOffsetMsec: 100000 }, function (err, credentials, artifacts) {\n  363  \n  364                  expect(err).to.not.exist();\n  365:                 expect(credentials.user).to.equal('steve');\n  366                  expect(artifacts.ext).to.equal('some-app-data');\n  367                  done();\n  ...\n  383          var payload = 'some not so random text';\n  384  \n  385:         credentialsFunc('123456', function (err, credentials) {\n  386  \n  387:             var reqHeader = Browser.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials, ext: 'some-app-data', payload: payload, contentType: req.headers['content-type'] });\n  388              req.headers.authorization = reqHeader.field;\n  389  \n  390:             Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials, artifacts) {\n  391  \n  392                  expect(err).to.not.exist();\n  393:                 expect(credentials.user).to.equal('steve');\n  394                  expect(artifacts.ext).to.equal('some-app-data');\n  395:                 expect(Hawk.server.authenticatePayload(payload, credentials, artifacts, req.headers['content-type'])).to.equal(true);\n  396  \n  397                  var res = {\n  ...\n  405                  };\n  406  \n  407:                 res.headers['server-authorization'] = Hawk.server.header(credentials, artifacts);\n  408                  expect(res.headers['server-authorization']).to.exist();\n  409  \n  410:                 expect(Browser.client.authenticate(res, credentials, artifacts)).to.equal(true);\n  411                  done();\n  412              });\n  ...\n  427          var payload = 'some not so random text';\n  428  \n  429:         credentialsFunc('123456', function (err, credentials) {\n  430  \n  431:             var reqHeader = Browser.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials, ext: 'some-app-data', payload: payload, contentType: req.headers['content-type'] });\n  432              req.headers.authorization = reqHeader.field;\n  433  \n  434:             Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials, artifacts) {\n  435  \n  436                  expect(err).to.not.exist();\n  437:                 expect(credentials.user).to.equal('steve');\n  438                  expect(artifacts.ext).to.equal('some-app-data');\n  439:                 expect(Hawk.server.authenticatePayload(payload, credentials, artifacts, req.headers['content-type'])).to.equal(true);\n  440  \n  441                  var res = {\n  ...\n  449                  };\n  450  \n  451:                 expect(Browser.client.authenticate(res, credentials, artifacts)).to.equal(true);\n  452                  done();\n  453              });\n  ...\n  464          };\n  465  \n  466:         credentialsFunc('123456', function (err, credentials) {\n  467  \n  468              Browser.utils.setNtpOffset(60 * 60 * 1000);\n  469:             var header = Browser.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials, ext: 'some-app-data' });\n  470              req.authorization = header.field;\n  471              expect(req.authorization).to.exist();\n  472  \n  473:             Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials, artifacts) {\n  474  \n  475                  expect(err).to.exist();\n  ...\n  487  \n  488                  expect(Browser.utils.getNtpOffset()).to.equal(60 * 60 * 1000);\n  489:                 expect(Browser.client.authenticate(res, credentials, header.artifacts)).to.equal(true);\n  490                  expect(Browser.utils.getNtpOffset()).to.equal(0);\n  491  \n  492:                 req.authorization = Browser.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials, ext: 'some-app-data' }).field;\n  493                  expect(req.authorization).to.exist();\n  494  \n  495:                 Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials, artifacts) {\n  496  \n  497                      expect(err).to.not.exist();\n  498:                     expect(credentials.user).to.equal('steve');\n  499                      expect(artifacts.ext).to.equal('some-app-data');\n  500                      done();\n  ...\n  513          };\n  514  \n  515:         credentialsFunc('123456', function (err, credentials) {\n  516  \n  517              var localStorage = new Browser.internals.LocalStorage();\n  ...\n  520  \n  521              Browser.utils.setNtpOffset(60 * 60 * 1000);\n  522:             var header = Browser.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials, ext: 'some-app-data' });\n  523              req.authorization = header.field;\n  524              expect(req.authorization).to.exist();\n  525  \n  526:             Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials, artifacts) {\n  527  \n  528                  expect(err).to.exist();\n  ...\n  541                  expect(parseInt(localStorage.getItem('hawk_ntp_offset'))).to.equal(60 * 60 * 1000);\n  542                  expect(Browser.utils.getNtpOffset()).to.equal(60 * 60 * 1000);\n  543:                 expect(Browser.client.authenticate(res, credentials, header.artifacts)).to.equal(true);\n  544                  expect(Browser.utils.getNtpOffset()).to.equal(0);\n  545                  expect(parseInt(localStorage.getItem('hawk_ntp_offset'))).to.equal(0);\n  546  \n  547:                 req.authorization = Browser.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials, ext: 'some-app-data' }).field;\n  548                  expect(req.authorization).to.exist();\n  549  \n  550:                 Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials, artifacts) {\n  551  \n  552                      expect(err).to.not.exist();\n  553:                     expect(credentials.user).to.equal('steve');\n  554                      expect(artifacts.ext).to.equal('some-app-data');\n  555                      done();\n  ...\n  572          var payload = 'some not so random text';\n  573  \n  574:         credentialsFunc('123456', function (err, credentials) {\n  575  \n  576:             var reqHeader = Browser.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials, ext: 'some-app-data', payload: payload, contentType: req.headers['content-type'] });\n  577              req.headers.authorization = reqHeader.field;\n  578  \n  579:             Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials, artifacts) {\n  580  \n  581                  expect(err).to.not.exist();\n  582:                 expect(credentials.user).to.equal('steve');\n  583                  expect(artifacts.ext).to.equal('some-app-data');\n  584:                 expect(Hawk.server.authenticatePayload(payload, credentials, artifacts, req.headers['content-type'])).to.equal(true);\n  585  \n  586                  var res = {\n  ...\n  594                  };\n  595  \n  596:                 res.headers['server-authorization'] = Hawk.server.header(credentials, artifacts);\n  597                  expect(res.headers['server-authorization']).to.exist();\n  598  \n  599:                 expect(Browser.client.authenticate(res, credentials, artifacts, { payload: 'some reply' })).to.equal(false);\n  600                  done();\n  601              });\n  ...\n  612          };\n  613  \n  614:         credentialsFunc('123456', function (err, credentials) {\n  615  \n  616:             req.authorization = Browser.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials, payload: 'hola!', ext: 'some-app-data' }).field;\n  617:             Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials, artifacts) {\n  618  \n  619                  expect(err).to.not.exist();\n  620:                 expect(credentials.user).to.equal('steve');\n  621                  expect(artifacts.ext).to.equal('some-app-data');\n  622                  done();\n  ...\n  634          };\n  635  \n  636:         credentialsFunc('123456', function (err, credentials) {\n  637  \n  638:             req.authorization = Browser.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials, payload: 'hola!', ext: 'some-app-data' }).field;\n  639:             Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials, artifacts) {\n  640  \n  641                  expect(err).to.not.exist();\n  642:                 expect(credentials.user).to.equal('steve');\n  643                  expect(artifacts.ext).to.equal('some-app-data');\n  644:                 expect(Hawk.server.authenticatePayload('hola!', credentials, artifacts)).to.be.true();\n  645:                 expect(Hawk.server.authenticatePayload('hello!', credentials, artifacts)).to.be.false();\n  646                  done();\n  647              });\n  ...\n  658          };\n  659  \n  660:         credentialsFunc('123456', function (err, credentials) {\n  661  \n  662:             req.authorization = Browser.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials, ext: 'some-app-data', app: 'asd23ased' }).field;\n  663:             Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials, artifacts) {\n  664  \n  665                  expect(err).to.not.exist();\n  666:                 expect(credentials.user).to.equal('steve');\n  667                  expect(artifacts.ext).to.equal('some-app-data');\n  668                  expect(artifacts.app).to.equal('asd23ased');\n  ...\n  681          };\n  682  \n  683:         credentialsFunc('123456', function (err, credentials) {\n  684  \n  685:             req.authorization = Browser.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials, ext: 'some-app-data', app: 'asd23ased', dlg: '23434szr3q4d' }).field;\n  686:             Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials, artifacts) {\n  687  \n  688                  expect(err).to.not.exist();\n  689:                 expect(credentials.user).to.equal('steve');\n  690                  expect(artifacts.ext).to.equal('some-app-data');\n  691                  expect(artifacts.app).to.equal('asd23ased');\n  ...\n  705          };\n  706  \n  707:         credentialsFunc('123456', function (err, credentials) {\n  708  \n  709:             req.authorization = Browser.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials, payload: 'hola!', ext: 'some-app-data' }).field;\n  710:             Hawk.server.authenticate(req, credentialsFunc, { payload: 'byebye!' }, function (err, credentials, artifacts) {\n  711  \n  712                  expect(err).to.exist();\n  ...\n  726          };\n  727  \n  728:         credentialsFunc('123456', function (err, credentials) {\n  729  \n  730:             req.authorization = Browser.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials, ext: 'some-app-data' }).field;\n  731              req.url = '/something/else';\n  732  \n  733:             Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials, artifacts) {\n  734  \n  735                  expect(err).to.exist();\n  736:                 expect(credentials).to.exist();\n  737                  done();\n  738              });\n  ...\n  746              it('returns a valid authorization header (sha1)', function (done) {\n  747  \n  748:                 var credentials = {\n  749                      id: '123456',\n  750                      key: '2983d45yun89q',\n  ...\n  752                  };\n  753  \n  754:                 var header = Browser.client.header('http://example.net/somewhere/over/the/rainbow', 'POST', { credentials: credentials, ext: 'Bazinga!', timestamp: 1353809207, nonce: 'Ygvqdz', payload: 'something to write about' }).field;\n  755                  expect(header).to.equal('Hawk id=\"123456\", ts=\"1353809207\", nonce=\"Ygvqdz\", hash=\"bsvY3IfUllw6V5rvk4tStEvpBhE=\", ext=\"Bazinga!\", mac=\"qbf1ZPG/r/e06F4ht+T77LXi5vw=\"');\n  756                  done();\n  ...\n  759              it('returns a valid authorization header (sha256)', function (done) {\n  760  \n  761:                 var credentials = {\n  762                      id: '123456',\n  763                      key: '2983d45yun89q',\n  ...\n  765                  };\n  766  \n  767:                 var header = Browser.client.header('https://example.net/somewhere/over/the/rainbow', 'POST', { credentials: credentials, ext: 'Bazinga!', timestamp: 1353809207, nonce: 'Ygvqdz', payload: 'something to write about', contentType: 'text/plain' }).field;\n  768                  expect(header).to.equal('Hawk id=\"123456\", ts=\"1353809207\", nonce=\"Ygvqdz\", hash=\"2QfCt3GuY9HQnHWyWD3wX68ZOKbynqlfYmuO2ZBRqtY=\", ext=\"Bazinga!\", mac=\"q1CwFoSHzPZSkbIvl0oYlD+91rBUEvFk763nMjMndj8=\"');\n  769                  done();\n  ...\n  772              it('returns a valid authorization header (empty payload)', function (done) {\n  773  \n  774:                 var credentials = {\n  775                      id: '123456',\n  776                      key: '2983d45yun89q',\n  ...\n  778                  };\n  779  \n  780:                 var header = Browser.client.header('http://example.net/somewhere/over/the/rainbow', 'POST', { credentials: credentials, ext: 'Bazinga!', timestamp: 1353809207, nonce: 'Ygvqdz', payload: '' }).field;\n  781                  expect(header).to.equal('Hawk id=\\\"123456\\\", ts=\\\"1353809207\\\", nonce=\\\"Ygvqdz\\\", hash=\\\"404ghL7K+hfyhByKKejFBRGgTjU=\\\", ext=\\\"Bazinga!\\\", mac=\\\"Bh1sj1DOfFRWOdi3ww52nLCJdBE=\\\"');\n  782                  done();\n  ...\n  785              it('returns a valid authorization header (no ext)', function (done) {\n  786  \n  787:                 var credentials = {\n  788                      id: '123456',\n  789                      key: '2983d45yun89q',\n  ...\n  791                  };\n  792  \n  793:                 var header = Browser.client.header('https://example.net/somewhere/over/the/rainbow', 'POST', { credentials: credentials, timestamp: 1353809207, nonce: 'Ygvqdz', payload: 'something to write about', contentType: 'text/plain' }).field;\n  794                  expect(header).to.equal('Hawk id=\"123456\", ts=\"1353809207\", nonce=\"Ygvqdz\", hash=\"2QfCt3GuY9HQnHWyWD3wX68ZOKbynqlfYmuO2ZBRqtY=\", mac=\"HTgtd0jPI6E4izx8e4OHdO36q00xFCU0FolNq3RiCYs=\"');\n  795                  done();\n  ...\n  798              it('returns a valid authorization header (null ext)', function (done) {\n  799  \n  800:                 var credentials = {\n  801                      id: '123456',\n  802                      key: '2983d45yun89q',\n  ...\n  804                  };\n  805  \n  806:                 var header = Browser.client.header('https://example.net/somewhere/over/the/rainbow', 'POST', { credentials: credentials, timestamp: 1353809207, nonce: 'Ygvqdz', payload: 'something to write about', contentType: 'text/plain', ext: null }).field;\n  807                  expect(header).to.equal('Hawk id=\"123456\", ts=\"1353809207\", nonce=\"Ygvqdz\", hash=\"2QfCt3GuY9HQnHWyWD3wX68ZOKbynqlfYmuO2ZBRqtY=\", mac=\"HTgtd0jPI6E4izx8e4OHdO36q00xFCU0FolNq3RiCYs=\"');\n  808                  done();\n  ...\n  811              it('returns a valid authorization header (uri object)', function (done) {\n  812  \n  813:                 var credentials = {\n  814                      id: '123456',\n  815                      key: '2983d45yun89q',\n  ...\n  818  \n  819                  var uri = Browser.utils.parseUri('https://example.net/somewhere/over/the/rainbow');\n  820:                 var header = Browser.client.header(uri, 'POST', { credentials: credentials, timestamp: 1353809207, nonce: 'Ygvqdz', payload: 'something to write about', contentType: 'text/plain' }).field;\n  821                  expect(header).to.equal('Hawk id=\"123456\", ts=\"1353809207\", nonce=\"Ygvqdz\", hash=\"2QfCt3GuY9HQnHWyWD3wX68ZOKbynqlfYmuO2ZBRqtY=\", mac=\"HTgtd0jPI6E4izx8e4OHdO36q00xFCU0FolNq3RiCYs=\"');\n  822                  done();\n  ...\n  833              it('errors on empty uri', function (done) {\n  834  \n  835:                 var credentials = {\n  836                      id: '123456',\n  837                      key: '2983d45yun89q',\n  ...\n  839                  };\n  840  \n  841:                 var header = Browser.client.header('', 'POST', { credentials: credentials, timestamp: 1353809207, nonce: 'Ygvqdz', payload: 'something to write about', contentType: 'text/plain' });\n  842                  expect(header.field).to.equal('');\n  843                  expect(header.err).to.equal('Invalid argument type');\n  ...\n  847              it('errors on invalid uri', function (done) {\n  848  \n  849:                 var credentials = {\n  850                      id: '123456',\n  851                      key: '2983d45yun89q',\n  ...\n  853                  };\n  854  \n  855:                 var header = Browser.client.header(4, 'POST', { credentials: credentials, timestamp: 1353809207, nonce: 'Ygvqdz', payload: 'something to write about', contentType: 'text/plain' });\n  856                  expect(header.field).to.equal('');\n  857                  expect(header.err).to.equal('Invalid argument type');\n  ...\n  861              it('errors on missing method', function (done) {\n  862  \n  863:                 var credentials = {\n  864                      id: '123456',\n  865                      key: '2983d45yun89q',\n  ...\n  867                  };\n  868  \n  869:                 var header = Browser.client.header('https://example.net/somewhere/over/the/rainbow', '', { credentials: credentials, timestamp: 1353809207, nonce: 'Ygvqdz', payload: 'something to write about', contentType: 'text/plain' });\n  870                  expect(header.field).to.equal('');\n  871                  expect(header.err).to.equal('Invalid argument type');\n  ...\n  875              it('errors on invalid method', function (done) {\n  876  \n  877:                 var credentials = {\n  878                      id: '123456',\n  879                      key: '2983d45yun89q',\n  ...\n  881                  };\n  882  \n  883:                 var header = Browser.client.header('https://example.net/somewhere/over/the/rainbow', 5, { credentials: credentials, timestamp: 1353809207, nonce: 'Ygvqdz', payload: 'something to write about', contentType: 'text/plain' });\n  884                  expect(header.field).to.equal('');\n  885                  expect(header.err).to.equal('Invalid argument type');\n  ...\n  887              });\n  888  \n  889:             it('errors on missing credentials', function (done) {\n  890  \n  891                  var header = Browser.client.header('https://example.net/somewhere/over/the/rainbow', 'POST', { ext: 'Bazinga!', timestamp: 1353809207 });\n  892                  expect(header.field).to.equal('');\n  893:                 expect(header.err).to.equal('Invalid credentials object');\n  894                  done();\n  895              });\n  896  \n  897:             it('errors on invalid credentials (id)', function (done) {\n  898  \n  899:                 var credentials = {\n  900                      key: '2983d45yun89q',\n  901                      algorithm: 'sha256'\n  902                  };\n  903  \n  904:                 var header = Browser.client.header('https://example.net/somewhere/over/the/rainbow', 'POST', { credentials: credentials, ext: 'Bazinga!', timestamp: 1353809207 });\n  905                  expect(header.field).to.equal('');\n  906:                 expect(header.err).to.equal('Invalid credentials object');\n  907                  done();\n  908              });\n  909  \n  910:             it('errors on invalid credentials (key)', function (done) {\n  911  \n  912:                 var credentials = {\n  913                      id: '123456',\n  914                      algorithm: 'sha256'\n  915                  };\n  916  \n  917:                 var header = Browser.client.header('https://example.net/somewhere/over/the/rainbow', 'POST', { credentials: credentials, ext: 'Bazinga!', timestamp: 1353809207 });\n  918                  expect(header.field).to.equal('');\n  919:                 expect(header.err).to.equal('Invalid credentials object');\n  920                  done();\n  921              });\n  ...\n  923              it('errors on invalid algorithm', function (done) {\n  924  \n  925:                 var credentials = {\n  926                      id: '123456',\n  927                      key: '2983d45yun89q',\n  ...\n  929                  };\n  930  \n  931:                 var header = Browser.client.header('https://example.net/somewhere/over/the/rainbow', 'POST', { credentials: credentials, payload: 'something, anything!', ext: 'Bazinga!', timestamp: 1353809207 });\n  932                  expect(header.field).to.equal('');\n  933                  expect(header.err).to.equal('Unknown algorithm');\n  ...\n  937              it('uses a pre-calculated payload hash', function (done) {\n  938  \n  939:                 var credentials = {\n  940                      id: '123456',\n  941                      key: '2983d45yun89q',\n  ...\n  943                  };\n  944  \n  945:                 var options = { credentials: credentials, ext: 'Bazinga!', timestamp: 1353809207, nonce: 'Ygvqdz', payload: 'something to write about', contentType: 'text/plain' };\n  946:                 options.hash = Browser.crypto.calculatePayloadHash(options.payload, credentials.algorithm, options.contentType);\n  947                  var header = Browser.client.header('https://example.net/somewhere/over/the/rainbow', 'POST', options).field;\n  948                  expect(header).to.equal('Hawk id=\"123456\", ts=\"1353809207\", nonce=\"Ygvqdz\", hash=\"2QfCt3GuY9HQnHWyWD3wX68ZOKbynqlfYmuO2ZBRqtY=\", ext=\"Bazinga!\", mac=\"q1CwFoSHzPZSkbIvl0oYlD+91rBUEvFk763nMjMndj8=\"');\n  ...\n  965                  };\n  966  \n  967:                 var credentials = {\n  968                      id: '123456',\n  969                      key: 'werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn',\n  ...\n  982                  };\n  983  \n  984:                 expect(Browser.client.authenticate(res, credentials, artifacts)).to.equal(true);\n  985                  done();\n  986              });\n  ...\n 1030                  };\n 1031  \n 1032:                 var credentials = {\n 1033                      id: '123456',\n 1034                      key: 'werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn',\n ....\n 1037                  };\n 1038  \n 1039:                 expect(Browser.client.authenticate(res, credentials, artifacts)).to.equal(false);\n 1040                  done();\n 1041              });\n ....\n 1069                  };\n 1070  \n 1071:                 var credentials = {\n 1072                      id: '123456',\n 1073                      key: 'werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn',\n ....\n 1076                  };\n 1077  \n 1078:                 expect(Browser.client.authenticate(res, credentials, artifacts)).to.equal(true);\n 1079                  done();\n 1080              });\n ....\n 1098              it('errors on invalid WWW-Authenticate header format', function (done) {\n 1099  \n 1100:                 var credentials = {\n 1101                      id: '123456',\n 1102                      key: 'werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn',\n ....\n 1115                  };\n 1116  \n 1117:                 expect(Browser.client.authenticate(res, credentials)).to.equal(false);\n 1118                  done();\n 1119              });\n ....\n 1124              it('generates an authorization then successfully parse it', function (done) {\n 1125  \n 1126:                 credentialsFunc('123456', function (err, credentials) {\n 1127  \n 1128:                     var auth = Browser.client.message('example.com', 8080, 'some message', { credentials: credentials });\n 1129                      expect(auth).to.exist();\n 1130  \n 1131:                     Hawk.server.authenticateMessage('example.com', 8080, 'some message', auth, credentialsFunc, {}, function (err, credentials) {\n 1132  \n 1133                          expect(err).to.not.exist();\n 1134:                         expect(credentials.user).to.equal('steve');\n 1135                          done();\n 1136                      });\n ....\n 1140              it('generates an authorization using custom nonce/timestamp', function (done) {\n 1141  \n 1142:                 credentialsFunc('123456', function (err, credentials) {\n 1143  \n 1144:                     var auth = Browser.client.message('example.com', 8080, 'some message', { credentials: credentials, nonce: 'abc123', timestamp: 1398536270957 });\n 1145                      expect(auth).to.exist();\n 1146                      expect(auth.nonce).to.equal('abc123');\n ....\n 1152              it('errors on missing host', function (done) {\n 1153  \n 1154:                 credentialsFunc('123456', function (err, credentials) {\n 1155  \n 1156:                     var auth = Browser.client.message(null, 8080, 'some message', { credentials: credentials });\n 1157                      expect(auth).to.not.exist();\n 1158                      done();\n ....\n 1162              it('errors on invalid host', function (done) {\n 1163  \n 1164:                 credentialsFunc('123456', function (err, credentials) {\n 1165  \n 1166:                     var auth = Browser.client.message(5, 8080, 'some message', { credentials: credentials });\n 1167                      expect(auth).to.not.exist();\n 1168                      done();\n ....\n 1172              it('errors on missing port', function (done) {\n 1173  \n 1174:                 credentialsFunc('123456', function (err, credentials) {\n 1175  \n 1176:                     var auth = Browser.client.message('example.com', 0, 'some message', { credentials: credentials });\n 1177                      expect(auth).to.not.exist();\n 1178                      done();\n ....\n 1182              it('errors on invalid port', function (done) {\n 1183  \n 1184:                 credentialsFunc('123456', function (err, credentials) {\n 1185  \n 1186:                     var auth = Browser.client.message('example.com', 'a', 'some message', { credentials: credentials });\n 1187                      expect(auth).to.not.exist();\n 1188                      done();\n ....\n 1192              it('errors on missing message', function (done) {\n 1193  \n 1194:                 credentialsFunc('123456', function (err, credentials) {\n 1195  \n 1196:                     var auth = Browser.client.message('example.com', 8080, undefined, { credentials: credentials });\n 1197                      expect(auth).to.not.exist();\n 1198                      done();\n ....\n 1202              it('errors on null message', function (done) {\n 1203  \n 1204:                 credentialsFunc('123456', function (err, credentials) {\n 1205  \n 1206:                     var auth = Browser.client.message('example.com', 8080, null, { credentials: credentials });\n 1207                      expect(auth).to.not.exist();\n 1208                      done();\n ....\n 1212              it('errors on invalid message', function (done) {\n 1213  \n 1214:                 credentialsFunc('123456', function (err, credentials) {\n 1215  \n 1216:                     var auth = Browser.client.message('example.com', 8080, 5, { credentials: credentials });\n 1217                      expect(auth).to.not.exist();\n 1218                      done();\n ....\n 1220              });\n 1221  \n 1222:             it('errors on missing credentials', function (done) {\n 1223  \n 1224                  var auth = Browser.client.message('example.com', 8080, 'some message', {});\n ....\n 1234              });\n 1235  \n 1236:             it('errors on invalid credentials (id)', function (done) {\n 1237  \n 1238:                 credentialsFunc('123456', function (err, credentials) {\n 1239  \n 1240:                     var creds = Hoek.clone(credentials);\n 1241                      delete creds.id;\n 1242:                     var auth = Browser.client.message('example.com', 8080, 'some message', { credentials: creds });\n 1243                      expect(auth).to.not.exist();\n 1244                      done();\n ....\n 1246              });\n 1247  \n 1248:             it('errors on invalid credentials (key)', function (done) {\n 1249  \n 1250:                 credentialsFunc('123456', function (err, credentials) {\n 1251  \n 1252:                     var creds = Hoek.clone(credentials);\n 1253                      delete creds.key;\n 1254:                     var auth = Browser.client.message('example.com', 8080, 'some message', { credentials: creds });\n 1255                      expect(auth).to.not.exist();\n 1256                      done();\n ....\n 1260              it('errors on invalid algorithm', function (done) {\n 1261  \n 1262:                 credentialsFunc('123456', function (err, credentials) {\n 1263  \n 1264:                     var creds = Hoek.clone(credentials);\n 1265                      creds.algorithm = 'blah';\n 1266:                     var auth = Browser.client.message('example.com', 8080, 'some message', { credentials: creds });\n 1267                      expect(auth).to.not.exist();\n 1268                      done();\n ....\n 1275              it('validates a timestamp', function (done) {\n 1276  \n 1277:                 credentialsFunc('123456', function (err, credentials) {\n 1278  \n 1279:                     var tsm = Hawk.crypto.timestampMessage(credentials);\n 1280:                     expect(Browser.client.authenticateTimestamp(tsm, credentials)).to.equal(true);\n 1281                      done();\n 1282                  });\n ....\n 1285              it('validates a timestamp without updating local time', function (done) {\n 1286  \n 1287:                 credentialsFunc('123456', function (err, credentials) {\n 1288  \n 1289                      var offset = Browser.utils.getNtpOffset();\n 1290:                     var tsm = Hawk.crypto.timestampMessage(credentials, 10000);\n 1291:                     expect(Browser.client.authenticateTimestamp(tsm, credentials, false)).to.equal(true);\n 1292                      expect(offset).to.equal(Browser.utils.getNtpOffset());\n 1293                      done();\n ....\n 1297              it('detects a bad timestamp', function (done) {\n 1298  \n 1299:                 credentialsFunc('123456', function (err, credentials) {\n 1300  \n 1301:                     var tsm = Hawk.crypto.timestampMessage(credentials);\n 1302                      tsm.ts = 4;\n 1303:                     expect(Browser.client.authenticateTimestamp(tsm, credentials)).to.equal(false);\n 1304                      done();\n 1305                  });\n\n/Users/kirkcp/Documents/node_play/slatemail/node_modules/favicon/node_modules/request/node_modules/hawk/test/client.js:\n   28              it('returns a valid authorization header (sha1)', function (done) {\n   29  \n   30:                 var credentials = {\n   31                      id: '123456',\n   32                      key: '2983d45yun89q',\n   ..\n   34                  };\n   35  \n   36:                 var header = Hawk.client.header('http://example.net/somewhere/over/the/rainbow', 'POST', { credentials: credentials, ext: 'Bazinga!', timestamp: 1353809207, nonce: 'Ygvqdz', payload: 'something to write about' }).field;\n   37                  expect(header).to.equal('Hawk id=\"123456\", ts=\"1353809207\", nonce=\"Ygvqdz\", hash=\"bsvY3IfUllw6V5rvk4tStEvpBhE=\", ext=\"Bazinga!\", mac=\"qbf1ZPG/r/e06F4ht+T77LXi5vw=\"');\n   38                  done();\n   ..\n   41              it('returns a valid authorization header (sha256)', function (done) {\n   42  \n   43:                 var credentials = {\n   44                      id: '123456',\n   45                      key: '2983d45yun89q',\n   ..\n   47                  };\n   48  \n   49:                 var header = Hawk.client.header('https://example.net/somewhere/over/the/rainbow', 'POST', { credentials: credentials, ext: 'Bazinga!', timestamp: 1353809207, nonce: 'Ygvqdz', payload: 'something to write about', contentType: 'text/plain' }).field;\n   50                  expect(header).to.equal('Hawk id=\"123456\", ts=\"1353809207\", nonce=\"Ygvqdz\", hash=\"2QfCt3GuY9HQnHWyWD3wX68ZOKbynqlfYmuO2ZBRqtY=\", ext=\"Bazinga!\", mac=\"q1CwFoSHzPZSkbIvl0oYlD+91rBUEvFk763nMjMndj8=\"');\n   51                  done();\n   ..\n   54              it('returns a valid authorization header (no ext)', function (done) {\n   55  \n   56:                 var credentials = {\n   57                      id: '123456',\n   58                      key: '2983d45yun89q',\n   ..\n   60                  };\n   61  \n   62:                 var header = Hawk.client.header('https://example.net/somewhere/over/the/rainbow', 'POST', { credentials: credentials, timestamp: 1353809207, nonce: 'Ygvqdz', payload: 'something to write about', contentType: 'text/plain' }).field;\n   63                  expect(header).to.equal('Hawk id=\"123456\", ts=\"1353809207\", nonce=\"Ygvqdz\", hash=\"2QfCt3GuY9HQnHWyWD3wX68ZOKbynqlfYmuO2ZBRqtY=\", mac=\"HTgtd0jPI6E4izx8e4OHdO36q00xFCU0FolNq3RiCYs=\"');\n   64                  done();\n   ..\n   67              it('returns a valid authorization header (null ext)', function (done) {\n   68  \n   69:                 var credentials = {\n   70                      id: '123456',\n   71                      key: '2983d45yun89q',\n   ..\n   73                  };\n   74  \n   75:                 var header = Hawk.client.header('https://example.net/somewhere/over/the/rainbow', 'POST', { credentials: credentials, timestamp: 1353809207, nonce: 'Ygvqdz', payload: 'something to write about', contentType: 'text/plain', ext: null }).field;\n   76                  expect(header).to.equal('Hawk id=\"123456\", ts=\"1353809207\", nonce=\"Ygvqdz\", hash=\"2QfCt3GuY9HQnHWyWD3wX68ZOKbynqlfYmuO2ZBRqtY=\", mac=\"HTgtd0jPI6E4izx8e4OHdO36q00xFCU0FolNq3RiCYs=\"');\n   77                  done();\n   ..\n   80              it('returns a valid authorization header (empty payload)', function (done) {\n   81  \n   82:                 var credentials = {\n   83                      id: '123456',\n   84                      key: '2983d45yun89q',\n   ..\n   86                  };\n   87  \n   88:                 var header = Hawk.client.header('https://example.net/somewhere/over/the/rainbow', 'POST', { credentials: credentials, timestamp: 1353809207, nonce: 'Ygvqdz', payload: '', contentType: 'text/plain' }).field;\n   89                  expect(header).to.equal('Hawk id=\\\"123456\\\", ts=\\\"1353809207\\\", nonce=\\\"Ygvqdz\\\", hash=\\\"q/t+NNAkQZNlq/aAD6PlexImwQTxwgT2MahfTa9XRLA=\\\", mac=\\\"U5k16YEzn3UnBHKeBzsDXn067Gu3R4YaY6xOt9PYRZM=\\\"');\n   90                  done();\n   ..\n   93              it('returns a valid authorization header (pre hashed payload)', function (done) {\n   94  \n   95:                 var credentials = {\n   96                      id: '123456',\n   97                      key: '2983d45yun89q',\n   ..\n   99                  };\n  100  \n  101:                 var options = { credentials: credentials, timestamp: 1353809207, nonce: 'Ygvqdz', payload: 'something to write about', contentType: 'text/plain' };\n  102:                 options.hash = Hawk.crypto.calculatePayloadHash(options.payload, credentials.algorithm, options.contentType);\n  103                  var header = Hawk.client.header('https://example.net/somewhere/over/the/rainbow', 'POST', options).field;\n  104                  expect(header).to.equal('Hawk id=\"123456\", ts=\"1353809207\", nonce=\"Ygvqdz\", hash=\"2QfCt3GuY9HQnHWyWD3wX68ZOKbynqlfYmuO2ZBRqtY=\", mac=\"HTgtd0jPI6E4izx8e4OHdO36q00xFCU0FolNq3RiCYs=\"');\n  ...\n  146              });\n  147  \n  148:             it('errors on invalid credentials (id)', function (done) {\n  149  \n  150:                 var credentials = {\n  151                      key: '2983d45yun89q',\n  152                      algorithm: 'sha256'\n  153                  };\n  154  \n  155:                 var header = Hawk.client.header('https://example.net/somewhere/over/the/rainbow', 'POST', { credentials: credentials, ext: 'Bazinga!', timestamp: 1353809207 });\n  156                  expect(header.field).to.equal('');\n  157                  expect(header.err).to.equal('Invalid credential object');\n  ...\n  159              });\n  160  \n  161:             it('errors on missing credentials', function (done) {\n  162  \n  163                  var header = Hawk.client.header('https://example.net/somewhere/over/the/rainbow', 'POST', { ext: 'Bazinga!', timestamp: 1353809207 });\n  ...\n  167              });\n  168  \n  169:             it('errors on invalid credentials', function (done) {\n  170  \n  171:                 var credentials = {\n  172                      id: '123456',\n  173                      algorithm: 'sha256'\n  174                  };\n  175  \n  176:                 var header = Hawk.client.header('https://example.net/somewhere/over/the/rainbow', 'POST', { credentials: credentials, ext: 'Bazinga!', timestamp: 1353809207 });\n  177                  expect(header.field).to.equal('');\n  178                  expect(header.err).to.equal('Invalid credential object');\n  ...\n  182              it('errors on invalid algorithm', function (done) {\n  183  \n  184:                 var credentials = {\n  185                      id: '123456',\n  186                      key: '2983d45yun89q',\n  ...\n  188                  };\n  189  \n  190:                 var header = Hawk.client.header('https://example.net/somewhere/over/the/rainbow', 'POST', { credentials: credentials, payload: 'something, anything!', ext: 'Bazinga!', timestamp: 1353809207 });\n  191                  expect(header.field).to.equal('');\n  192                  expect(header.err).to.equal('Unknown algorithm');\n  ...\n  233                  };\n  234  \n  235:                 var credentials = {\n  236                      id: '123456',\n  237                      key: 'werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn',\n  ...\n  240                  };\n  241  \n  242:                 expect(Hawk.client.authenticate(res, credentials, artifacts)).to.equal(false);\n  243                  done();\n  244              });\n  ...\n  268                  };\n  269  \n  270:                 var credentials = {\n  271                      id: '123456',\n  272                      key: 'werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn',\n  ...\n  275                  };\n  276  \n  277:                 expect(Hawk.client.authenticate(res, credentials, artifacts)).to.equal(true);\n  278                  done();\n  279              });\n  ...\n  288              it('fails on invalid WWW-Authenticate header format', function (done) {\n  289  \n  290:                 var credentials = {\n  291                      id: '123456',\n  292                      key: 'werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn',\n  ...\n  296  \n  297                  var header = 'Hawk ts=\"1362346425875\", tsm=\"hwayS28vtnn3qbv0mqRBYSXebN/zggEtucfeZ620Zo=\", error=\"Stale timestamp\"';\n  298:                 expect(Hawk.client.authenticate({ headers: { 'www-authenticate': header } }, credentials)).to.equal(false);\n  299                  done();\n  300              });\n  ...\n  312              it('generates authorization', function (done) {\n  313  \n  314:                 var credentials = {\n  315                      id: '123456',\n  316                      key: '2983d45yun89q',\n  ...\n  318                  };\n  319  \n  320:                 var auth = Hawk.client.message('example.com', 80, 'I am the boodyman', { credentials: credentials, timestamp: 1353809207, nonce: 'abc123' });\n  321                  expect(auth).to.exist();\n  322                  expect(auth.ts).to.equal(1353809207);\n  ...\n  327              it('errors on invalid host', function (done) {\n  328  \n  329:                 var credentials = {\n  330                      id: '123456',\n  331                      key: '2983d45yun89q',\n  ...\n  333                  };\n  334  \n  335:                 var auth = Hawk.client.message(5, 80, 'I am the boodyman', { credentials: credentials, timestamp: 1353809207, nonce: 'abc123' });\n  336                  expect(auth).to.not.exist();\n  337                  done();\n  ...\n  340              it('errors on invalid port', function (done) {\n  341  \n  342:                 var credentials = {\n  343                      id: '123456',\n  344                      key: '2983d45yun89q',\n  ...\n  346                  };\n  347  \n  348:                 var auth = Hawk.client.message('example.com', '80', 'I am the boodyman', { credentials: credentials, timestamp: 1353809207, nonce: 'abc123' });\n  349                  expect(auth).to.not.exist();\n  350                  done();\n  ...\n  353              it('errors on missing host', function (done) {\n  354  \n  355:                 var credentials = {\n  356                      id: '123456',\n  357                      key: '2983d45yun89q',\n  ...\n  359                  };\n  360  \n  361:                 var auth = Hawk.client.message('example.com', 0, 'I am the boodyman', { credentials: credentials, timestamp: 1353809207, nonce: 'abc123' });\n  362                  expect(auth).to.not.exist();\n  363                  done();\n  ...\n  366              it('errors on null message', function (done) {\n  367  \n  368:                 var credentials = {\n  369                      id: '123456',\n  370                      key: '2983d45yun89q',\n  ...\n  372                  };\n  373  \n  374:                 var auth = Hawk.client.message('example.com', 80, null, { credentials: credentials, timestamp: 1353809207, nonce: 'abc123' });\n  375                  expect(auth).to.not.exist();\n  376                  done();\n  ...\n  379              it('errors on missing message', function (done) {\n  380  \n  381:                 var credentials = {\n  382                      id: '123456',\n  383                      key: '2983d45yun89q',\n  ...\n  385                  };\n  386  \n  387:                 var auth = Hawk.client.message('example.com', 80, undefined, { credentials: credentials, timestamp: 1353809207, nonce: 'abc123' });\n  388                  expect(auth).to.not.exist();\n  389                  done();\n  ...\n  392              it('errors on invalid message', function (done) {\n  393  \n  394:                 var credentials = {\n  395                      id: '123456',\n  396                      key: '2983d45yun89q',\n  ...\n  398                  };\n  399  \n  400:                 var auth = Hawk.client.message('example.com', 80, 5, { credentials: credentials, timestamp: 1353809207, nonce: 'abc123' });\n  401                  expect(auth).to.not.exist();\n  402                  done();\n  ...\n  405              it('errors on missing options', function (done) {\n  406  \n  407:                 var credentials = {\n  408                      id: '123456',\n  409                      key: '2983d45yun89q',\n  ...\n  416              });\n  417  \n  418:             it('errors on invalid credentials (id)', function (done) {\n  419  \n  420:                 var credentials = {\n  421                      key: '2983d45yun89q',\n  422                      algorithm: 'sha1'\n  423                  };\n  424  \n  425:                 var auth = Hawk.client.message('example.com', 80, 'I am the boodyman', { credentials: credentials, timestamp: 1353809207, nonce: 'abc123' });\n  426                  expect(auth).to.not.exist();\n  427                  done();\n  428              });\n  429  \n  430:             it('errors on invalid credentials (key)', function (done) {\n  431  \n  432:                 var credentials = {\n  433                      id: '123456',\n  434                      algorithm: 'sha1'\n  435                  };\n  436  \n  437:                 var auth = Hawk.client.message('example.com', 80, 'I am the boodyman', { credentials: credentials, timestamp: 1353809207, nonce: 'abc123' });\n  438                  expect(auth).to.not.exist();\n  439                  done();\n\n/Users/kirkcp/Documents/node_play/slatemail/node_modules/favicon/node_modules/request/node_modules/hawk/test/crypto.js:\n   28  \n   29                  expect(Hawk.crypto.generateNormalizedString('header', {\n   30:                     credentials: {\n   31                          key: 'dasdfasdf',\n   32                          algorithm: 'sha256'\n   ..\n   46  \n   47                  expect(Hawk.crypto.generateNormalizedString('header', {\n   48:                     credentials: {\n   49                          key: 'dasdfasdf',\n   50                          algorithm: 'sha256'\n   ..\n   65  \n   66                  expect(Hawk.crypto.generateNormalizedString('header', {\n   67:                     credentials: {\n   68                          key: 'dasdfasdf',\n   69                          algorithm: 'sha256'\n\n/Users/kirkcp/Documents/node_play/slatemail/node_modules/favicon/node_modules/request/node_modules/hawk/test/index.js:\n   22  describe('Hawk', function () {\n   23  \n   24:     var credentialsFunc = function (id, callback) {\n   25  \n   26:         var credentials = {\n   27              id: id,\n   28              key: 'werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn',\n   ..\n   31          };\n   32  \n   33:         return callback(null, credentials);\n   34      };\n   35  \n   ..\n   43          };\n   44  \n   45:         credentialsFunc('123456', function (err, credentials) {\n   46  \n   47:             req.authorization = Hawk.client.header(Url.parse('http://example.com:8080/resource/4?filter=a'), req.method, { credentials: credentials, ext: 'some-app-data' }).field;\n   48              expect(req.authorization).to.exist();\n   49  \n   50:             Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials, artifacts) {\n   51  \n   52                  expect(err).to.not.exist();\n   53:                 expect(credentials.user).to.equal('steve');\n   54                  expect(artifacts.ext).to.equal('some-app-data');\n   55                  done();\n   ..\n   71          var payload = 'some not so random text';\n   72  \n   73:         credentialsFunc('123456', function (err, credentials) {\n   74  \n   75:             var reqHeader = Hawk.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials, ext: 'some-app-data', payload: payload, contentType: req.headers['content-type'] });\n   76              req.headers.authorization = reqHeader.field;\n   77  \n   78:             Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials, artifacts) {\n   79  \n   80                  expect(err).to.not.exist();\n   81:                 expect(credentials.user).to.equal('steve');\n   82                  expect(artifacts.ext).to.equal('some-app-data');\n   83:                 expect(Hawk.server.authenticatePayload(payload, credentials, artifacts, req.headers['content-type'])).to.equal(true);\n   84  \n   85                  var res = {\n   ..\n   89                  };\n   90  \n   91:                 res.headers['server-authorization'] = Hawk.server.header(credentials, artifacts, { payload: 'some reply', contentType: 'text/plain', ext: 'response-specific' });\n   92                  expect(res.headers['server-authorization']).to.exist();\n   93  \n   94:                 expect(Hawk.client.authenticate(res, credentials, artifacts, { payload: 'some reply' })).to.equal(true);\n   95                  done();\n   96              });\n   ..\n  111          var payload = 'some not so random text';\n  112  \n  113:         credentialsFunc('123456', function (err, credentials) {\n  114  \n  115:             var reqHeader = Hawk.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials, ext: 'some-app-data', payload: payload, contentType: req.headers['content-type'] });\n  116              req.headers.authorization = reqHeader.field;\n  117  \n  118:             Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials, artifacts) {\n  119  \n  120                  expect(err).to.not.exist();\n  121:                 expect(credentials.user).to.equal('steve');\n  122                  expect(artifacts.ext).to.equal('some-app-data');\n  123:                 expect(Hawk.server.authenticatePayload(payload, credentials, artifacts, req.headers['content-type'])).to.equal(true);\n  124  \n  125                  var res = {\n  ...\n  129                  };\n  130  \n  131:                 res.headers['server-authorization'] = Hawk.server.header(credentials, artifacts, { payload: 'some reply', contentType: 'text/plain', ext: 'response-specific' });\n  132                  expect(res.headers['server-authorization']).to.exist();\n  133  \n  134:                 expect(Hawk.client.authenticate(res, credentials, artifacts, { payload: 'some reply' })).to.equal(true);\n  135                  done();\n  136              });\n  ...\n  151          var payload = 'some not so random text';\n  152  \n  153:         credentialsFunc('123456', function (err, credentials) {\n  154  \n  155:             var reqHeader = Hawk.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials, ext: 'some-app-data', payload: payload, contentType: req.headers['content-type'] });\n  156              req.headers.authorization = reqHeader.field;\n  157  \n  158:             Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials, artifacts) {\n  159  \n  160                  expect(err).to.not.exist();\n  161:                 expect(credentials.user).to.equal('steve');\n  162                  expect(artifacts.ext).to.equal('some-app-data');\n  163:                 expect(Hawk.server.authenticatePayload(payload, credentials, artifacts, req.headers['content-type'])).to.equal(true);\n  164  \n  165                  var res = {\n  ...\n  169                  };\n  170  \n  171:                 res.headers['server-authorization'] = Hawk.server.header(credentials, artifacts);\n  172                  expect(res.headers['server-authorization']).to.exist();\n  173  \n  174:                 expect(Hawk.client.authenticate(res, credentials, artifacts)).to.equal(true);\n  175                  done();\n  176              });\n  ...\n  191          var payload = 'some not so random text';\n  192  \n  193:         credentialsFunc('123456', function (err, credentials) {\n  194  \n  195:             var reqHeader = Hawk.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials, ext: 'some-app-data', payload: payload, contentType: req.headers['content-type'] });\n  196              req.headers.authorization = reqHeader.field;\n  197  \n  198:             Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials, artifacts) {\n  199  \n  200                  expect(err).to.not.exist();\n  201:                 expect(credentials.user).to.equal('steve');\n  202                  expect(artifacts.ext).to.equal('some-app-data');\n  203:                 expect(Hawk.server.authenticatePayload(payload, credentials, artifacts, req.headers['content-type'])).to.equal(true);\n  204  \n  205                  var res = {\n  ...\n  209                  };\n  210  \n  211:                 res.headers['server-authorization'] = Hawk.server.header(credentials, artifacts);\n  212                  expect(res.headers['server-authorization']).to.exist();\n  213  \n  214:                 expect(Hawk.client.authenticate(res, credentials, artifacts, { payload: 'some reply' })).to.equal(false);\n  215                  done();\n  216              });\n  ...\n  227          };\n  228  \n  229:         credentialsFunc('123456', function (err, credentials) {\n  230  \n  231:             req.authorization = Hawk.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials, payload: 'hola!', ext: 'some-app-data' }).field;\n  232:             Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials, artifacts) {\n  233  \n  234                  expect(err).to.not.exist();\n  235:                 expect(credentials.user).to.equal('steve');\n  236                  expect(artifacts.ext).to.equal('some-app-data');\n  237                  done();\n  ...\n  249          };\n  250  \n  251:         credentialsFunc('123456', function (err, credentials) {\n  252  \n  253:             req.authorization = Hawk.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials, payload: 'hola!', ext: 'some-app-data' }).field;\n  254:             Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials, artifacts) {\n  255  \n  256                  expect(err).to.not.exist();\n  257:                 expect(credentials.user).to.equal('steve');\n  258                  expect(artifacts.ext).to.equal('some-app-data');\n  259:                 expect(Hawk.server.authenticatePayload('hola!', credentials, artifacts)).to.be.true();\n  260:                 expect(Hawk.server.authenticatePayload('hello!', credentials, artifacts)).to.be.false();\n  261                  done();\n  262              });\n  ...\n  273          };\n  274  \n  275:         credentialsFunc('123456', function (err, credentials) {\n  276  \n  277:             req.authorization = Hawk.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials, payload: 'hola!', ext: 'some-app-data' }).field;\n  278:             Hawk.server.authenticate(req, credentialsFunc, { payload: 'hola!' }, function (err, credentials, artifacts) {\n  279  \n  280                  expect(err).to.not.exist();\n  281:                 expect(credentials.user).to.equal('steve');\n  282                  expect(artifacts.ext).to.equal('some-app-data');\n  283                  done();\n  ...\n  295          };\n  296  \n  297:         credentialsFunc('123456', function (err, credentials) {\n  298  \n  299:             req.authorization = Hawk.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials, ext: 'some-app-data', app: 'asd23ased' }).field;\n  300:             Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials, artifacts) {\n  301  \n  302                  expect(err).to.not.exist();\n  303:                 expect(credentials.user).to.equal('steve');\n  304                  expect(artifacts.ext).to.equal('some-app-data');\n  305                  expect(artifacts.app).to.equal('asd23ased');\n  ...\n  318          };\n  319  \n  320:         credentialsFunc('123456', function (err, credentials) {\n  321  \n  322:             req.authorization = Hawk.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials, ext: 'some-app-data', app: 'asd23ased', dlg: '23434szr3q4d' }).field;\n  323:             Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials, artifacts) {\n  324  \n  325                  expect(err).to.not.exist();\n  326:                 expect(credentials.user).to.equal('steve');\n  327                  expect(artifacts.ext).to.equal('some-app-data');\n  328                  expect(artifacts.app).to.equal('asd23ased');\n  ...\n  342          };\n  343  \n  344:         credentialsFunc('123456', function (err, credentials) {\n  345  \n  346:             req.authorization = Hawk.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials, payload: 'hola!', ext: 'some-app-data' }).field;\n  347:             Hawk.server.authenticate(req, credentialsFunc, { payload: 'byebye!' }, function (err, credentials, artifacts) {\n  348  \n  349                  expect(err).to.exist();\n  ...\n  363          };\n  364  \n  365:         credentialsFunc('123456', function (err, credentials) {\n  366  \n  367:             req.authorization = Hawk.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials, ext: 'some-app-data' }).field;\n  368              req.url = '/something/else';\n  369  \n  370:             Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials, artifacts) {\n  371  \n  372                  expect(err).to.exist();\n  373:                 expect(credentials).to.exist();\n  374                  done();\n  375              });\n\n/Users/kirkcp/Documents/node_play/slatemail/node_modules/favicon/node_modules/request/node_modules/hawk/test/message.js:\n   23  describe('Hawk', function () {\n   24  \n   25:     var credentialsFunc = function (id, callback) {\n   26  \n   27:         var credentials = {\n   28              id: id,\n   29              key: 'werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn',\n   ..\n   32          };\n   33  \n   34:         return callback(null, credentials);\n   35      };\n   36  \n   37      it('should generate an authorization then successfully parse it', function (done) {\n   38  \n   39:         credentialsFunc('123456', function (err, credentials) {\n   40  \n   41:             var auth = Hawk.client.message('example.com', 8080, 'some message', { credentials: credentials });\n   42              expect(auth).to.exist();\n   43  \n   44:             Hawk.server.authenticateMessage('example.com', 8080, 'some message', auth, credentialsFunc, {}, function (err, credentials) {\n   45  \n   46                  expect(err).to.not.exist();\n   47:                 expect(credentials.user).to.equal('steve');\n   48                  done();\n   49              });\n   ..\n   53      it('should fail authorization on mismatching host', function (done) {\n   54  \n   55:         credentialsFunc('123456', function (err, credentials) {\n   56  \n   57:             var auth = Hawk.client.message('example.com', 8080, 'some message', { credentials: credentials });\n   58              expect(auth).to.exist();\n   59  \n   60:             Hawk.server.authenticateMessage('example1.com', 8080, 'some message', auth, credentialsFunc, {}, function (err, credentials) {\n   61  \n   62                  expect(err).to.exist();\n   ..\n   69      it('should fail authorization on stale timestamp', function (done) {\n   70  \n   71:         credentialsFunc('123456', function (err, credentials) {\n   72  \n   73:             var auth = Hawk.client.message('example.com', 8080, 'some message', { credentials: credentials });\n   74              expect(auth).to.exist();\n   75  \n   76:             Hawk.server.authenticateMessage('example.com', 8080, 'some message', auth, credentialsFunc, { localtimeOffsetMsec: 100000 }, function (err, credentials) {\n   77  \n   78                  expect(err).to.exist();\n   ..\n   85      it('overrides timestampSkewSec', function (done) {\n   86  \n   87:         credentialsFunc('123456', function (err, credentials) {\n   88  \n   89:             var auth = Hawk.client.message('example.com', 8080, 'some message', { credentials: credentials, localtimeOffsetMsec: 100000 });\n   90              expect(auth).to.exist();\n   91  \n   92:             Hawk.server.authenticateMessage('example.com', 8080, 'some message', auth, credentialsFunc, { timestampSkewSec: 500 }, function (err, credentials) {\n   93  \n   94                  expect(err).to.not.exist();\n   ..\n  100      it('should fail authorization on invalid authorization', function (done) {\n  101  \n  102:         credentialsFunc('123456', function (err, credentials) {\n  103  \n  104:             var auth = Hawk.client.message('example.com', 8080, 'some message', { credentials: credentials });\n  105              expect(auth).to.exist();\n  106              delete auth.id;\n  107  \n  108:             Hawk.server.authenticateMessage('example.com', 8080, 'some message', auth, credentialsFunc, {}, function (err, credentials) {\n  109  \n  110                  expect(err).to.exist();\n  ...\n  117      it('should fail authorization on bad hash', function (done) {\n  118  \n  119:         credentialsFunc('123456', function (err, credentials) {\n  120  \n  121:             var auth = Hawk.client.message('example.com', 8080, 'some message', { credentials: credentials });\n  122              expect(auth).to.exist();\n  123  \n  124:             Hawk.server.authenticateMessage('example.com', 8080, 'some message1', auth, credentialsFunc, {}, function (err, credentials) {\n  125  \n  126                  expect(err).to.exist();\n  ...\n  133      it('should fail authorization on nonce error', function (done) {\n  134  \n  135:         credentialsFunc('123456', function (err, credentials) {\n  136  \n  137:             var auth = Hawk.client.message('example.com', 8080, 'some message', { credentials: credentials });\n  138              expect(auth).to.exist();\n  139  \n  140:             Hawk.server.authenticateMessage('example.com', 8080, 'some message', auth, credentialsFunc, { nonceFunc: function (nonce, ts, callback) { callback (new Error('kaboom')); } }, function (err, credentials) {\n  141  \n  142                  expect(err).to.exist();\n  ...\n  147      });\n  148  \n  149:     it('should fail authorization on credentials error', function (done) {\n  150  \n  151:         credentialsFunc('123456', function (err, credentials) {\n  152  \n  153:             var auth = Hawk.client.message('example.com', 8080, 'some message', { credentials: credentials });\n  154              expect(auth).to.exist();\n  155  \n  ...\n  159              };\n  160  \n  161:             Hawk.server.authenticateMessage('example.com', 8080, 'some message', auth, errFunc, {}, function (err, credentials) {\n  162  \n  163                  expect(err).to.exist();\n  ...\n  168      });\n  169  \n  170:     it('should fail authorization on missing credentials', function (done) {\n  171  \n  172:         credentialsFunc('123456', function (err, credentials) {\n  173  \n  174:             var auth = Hawk.client.message('example.com', 8080, 'some message', { credentials: credentials });\n  175              expect(auth).to.exist();\n  176  \n  ...\n  180              };\n  181  \n  182:             Hawk.server.authenticateMessage('example.com', 8080, 'some message', auth, errFunc, {}, function (err, credentials) {\n  183  \n  184                  expect(err).to.exist();\n  185:                 expect(err.message).to.equal('Unknown credentials');\n  186                  done();\n  187              });\n  ...\n  189      });\n  190  \n  191:     it('should fail authorization on invalid credentials', function (done) {\n  192  \n  193:         credentialsFunc('123456', function (err, credentials) {\n  194  \n  195:             var auth = Hawk.client.message('example.com', 8080, 'some message', { credentials: credentials });\n  196              expect(auth).to.exist();\n  197  \n  ...\n  201              };\n  202  \n  203:             Hawk.server.authenticateMessage('example.com', 8080, 'some message', auth, errFunc, {}, function (err, credentials) {\n  204  \n  205                  expect(err).to.exist();\n  206:                 expect(err.message).to.equal('Invalid credentials');\n  207                  done();\n  208              });\n  ...\n  210      });\n  211  \n  212:     it('should fail authorization on invalid credentials algorithm', function (done) {\n  213  \n  214:         credentialsFunc('123456', function (err, credentials) {\n  215  \n  216:             var auth = Hawk.client.message('example.com', 8080, 'some message', { credentials: credentials });\n  217              expect(auth).to.exist();\n  218  \n  ...\n  222              };\n  223  \n  224:             Hawk.server.authenticateMessage('example.com', 8080, 'some message', auth, errFunc, {}, function (err, credentials) {\n  225  \n  226                  expect(err).to.exist();\n  ...\n  233      it('should fail on missing host', function (done) {\n  234  \n  235:         credentialsFunc('123456', function (err, credentials) {\n  236  \n  237:             var auth = Hawk.client.message(null, 8080, 'some message', { credentials: credentials });\n  238              expect(auth).to.not.exist();\n  239              done();\n  ...\n  241      });\n  242  \n  243:     it('should fail on missing credentials', function (done) {\n  244  \n  245          var auth = Hawk.client.message('example.com', 8080, 'some message', {});\n  ...\n  250      it('should fail on invalid algorithm', function (done) {\n  251  \n  252:         credentialsFunc('123456', function (err, credentials) {\n  253  \n  254:             var creds = Hoek.clone(credentials);\n  255              creds.algorithm = 'blah';\n  256:             var auth = Hawk.client.message('example.com', 8080, 'some message', { credentials: creds });\n  257              expect(auth).to.not.exist();\n  258              done();\n\n/Users/kirkcp/Documents/node_play/slatemail/node_modules/favicon/node_modules/request/node_modules/hawk/test/readme.js:\n   26          describe('core', function () {\n   27  \n   28:             var credentials = {\n   29                  id: 'dh37fgj492je',\n   30                  key: 'werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn',\n   ..\n   33  \n   34              var options = {\n   35:                 credentials: credentials,\n   36                  timestamp: 1353832234,\n   37                  nonce: 'j4h3g2',\n   ..\n   50  \n   51                  var normalized = Hawk.crypto.generateNormalizedString('header', {\n   52:                     credentials: credentials,\n   53                      ts: options.timestamp,\n   54                      nonce: options.nonce,\n   ..\n   79  \n   80                  var normalized = Hawk.crypto.generateNormalizedString('header', {\n   81:                     credentials: credentials,\n   82                      ts: options.timestamp,\n   83                      nonce: options.nonce,\n   ..\n   86                      host: 'example.com',\n   87                      port: 8000,\n   88:                     hash: Hawk.crypto.calculatePayloadHash(payloadOptions.payload, credentials.algorithm, payloadOptions.contentType),\n   89                      ext: options.ext\n   90                  });\n\n/Users/kirkcp/Documents/node_play/slatemail/node_modules/favicon/node_modules/request/node_modules/hawk/test/server.js:\n   24      describe('server', function () {\n   25  \n   26:         var credentialsFunc = function (id, callback) {\n   27  \n   28:             var credentials = {\n   29                  id: id,\n   30                  key: 'werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn',\n   ..\n   33              };\n   34  \n   35:             return callback(null, credentials);\n   36          };\n   37  \n   ..\n   48                  };\n   49  \n   50:                 Hawk.server.authenticate(req, credentialsFunc, { localtimeOffsetMsec: 1353788437000 - Hawk.utils.now() }, function (err, credentials, artifacts) {\n   51  \n   52                      expect(err).to.not.exist();\n   53:                     expect(credentials.user).to.equal('steve');\n   54                      done();\n   55                  });\n   ..\n   66                  };\n   67  \n   68:                 Hawk.server.authenticate(req, credentialsFunc, { localtimeOffsetMsec: 1353832234000 - Hawk.utils.now() }, function (err, credentials, artifacts) {\n   69  \n   70                      expect(err).to.not.exist();\n   71:                     expect(credentials.user).to.equal('steve');\n   72                      done();\n   73                  });\n   ..\n   85                  };\n   86  \n   87:                 Hawk.server.authenticate(req, credentialsFunc, { host: 'example.com', localtimeOffsetMsec: 1353788437000 - Hawk.utils.now() }, function (err, credentials, artifacts) {\n   88  \n   89                      expect(err).to.not.exist();\n   90:                     expect(credentials.user).to.equal('steve');\n   91                      done();\n   92                  });\n   ..\n  104                  };\n  105  \n  106:                 Hawk.server.authenticate(req, credentialsFunc, { host: 'example.com', port: 8080, localtimeOffsetMsec: 1353788437000 - Hawk.utils.now() }, function (err, credentials, artifacts) {\n  107  \n  108                      expect(err).to.not.exist();\n  109:                     expect(credentials.user).to.equal('steve');\n  110                      done();\n  111                  });\n  ...\n  122                  };\n  123  \n  124:                 Hawk.server.authenticate(req, credentialsFunc, { localtimeOffsetMsec: 1357926341000 - Hawk.utils.now() }, function (err, credentials, artifacts) {\n  125  \n  126                      expect(err).to.not.exist();\n  127:                     expect(credentials.user).to.equal('steve');\n  128                      done();\n  129                  });\n  ...\n  140                  };\n  141  \n  142:                 Hawk.server.authenticate(req, credentialsFunc, { payload: 'body', localtimeOffsetMsec: 1353832234000 - Hawk.utils.now() }, function (err, credentials, artifacts) {\n  143  \n  144                      expect(err).to.exist();\n  ...\n  158                  };\n  159  \n  160:                 Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials, artifacts) {\n  161  \n  162                      expect(err).to.exist();\n  ...\n  173                      };\n  174  \n  175:                     expect(Hawk.client.authenticate(res, credentials, artifacts)).to.equal(true);\n  176                      done();\n  177                  });\n  ...\n  202                  };\n  203  \n  204:                 Hawk.server.authenticate(req, credentialsFunc, options, function (err, credentials, artifacts) {\n  205  \n  206                      expect(err).to.not.exist();\n  207:                     expect(credentials.user).to.equal('steve');\n  208  \n  209:                     Hawk.server.authenticate(req, credentialsFunc, options, function (err, credentials, artifacts) {\n  210  \n  211                          expect(err).to.exist();\n  ...\n  226                  };\n  227  \n  228:                 Hawk.server.authenticate(req, credentialsFunc, { localtimeOffsetMsec: 1353788437000 - Hawk.utils.now() }, function (err, credentials, artifacts) {\n  229  \n  230                      expect(err).to.exist();\n  ...\n  244                  };\n  245  \n  246:                 Hawk.server.authenticate(req, credentialsFunc, { localtimeOffsetMsec: 1353788437000 - Hawk.utils.now() }, function (err, credentials, artifacts) {\n  247  \n  248                      expect(err).to.exist();\n  ...\n  261                  };\n  262  \n  263:                 Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials, artifacts) {\n  264  \n  265                      expect(err).to.exist();\n  ...\n  279                  };\n  280  \n  281:                 Hawk.server.authenticate(req, credentialsFunc, { localtimeOffsetMsec: 1353788437000 - Hawk.utils.now() }, function (err, credentials, artifacts) {\n  282  \n  283                      expect(err).to.exist();\n  ...\n  297                  };\n  298  \n  299:                 Hawk.server.authenticate(req, credentialsFunc, { localtimeOffsetMsec: 1353788437000 - Hawk.utils.now() }, function (err, credentials, artifacts) {\n  300  \n  301                      expect(err).to.exist();\n  ...\n  315                  };\n  316  \n  317:                 Hawk.server.authenticate(req, credentialsFunc, { localtimeOffsetMsec: 1353788437000 - Hawk.utils.now() }, function (err, credentials, artifacts) {\n  318  \n  319                      expect(err).to.exist();\n  ...\n  333                  };\n  334  \n  335:                 Hawk.server.authenticate(req, credentialsFunc, { localtimeOffsetMsec: 1353788437000 - Hawk.utils.now() }, function (err, credentials, artifacts) {\n  336  \n  337                      expect(err).to.exist();\n  ...\n  351                  };\n  352  \n  353:                 Hawk.server.authenticate(req, credentialsFunc, { localtimeOffsetMsec: 1353788437000 - Hawk.utils.now() }, function (err, credentials, artifacts) {\n  354  \n  355                      expect(err).to.exist();\n  ...\n  369                  };\n  370  \n  371:                 Hawk.server.authenticate(req, credentialsFunc, { localtimeOffsetMsec: 1353788437000 - Hawk.utils.now() }, function (err, credentials, artifacts) {\n  372  \n  373                      expect(err).to.exist();\n  ...\n  387                  };\n  388  \n  389:                 Hawk.server.authenticate(req, credentialsFunc, { localtimeOffsetMsec: 1353788437000 - Hawk.utils.now() }, function (err, credentials, artifacts) {\n  390  \n  391                      expect(err).to.exist();\n  ...\n  405                  };\n  406  \n  407:                 Hawk.server.authenticate(req, credentialsFunc, { localtimeOffsetMsec: 1353788437000 - Hawk.utils.now() }, function (err, credentials, artifacts) {\n  408  \n  409                      expect(err).to.exist();\n  ...\n  423                  };\n  424  \n  425:                 Hawk.server.authenticate(req, credentialsFunc, { localtimeOffsetMsec: 1353788437000 - Hawk.utils.now() }, function (err, credentials, artifacts) {\n  426  \n  427                      expect(err).to.exist();\n  ...\n  441                  };\n  442  \n  443:                 Hawk.server.authenticate(req, credentialsFunc, { localtimeOffsetMsec: 1353788437000 - Hawk.utils.now() }, function (err, credentials, artifacts) {\n  444  \n  445                      expect(err).to.exist();\n  ...\n  459                  };\n  460  \n  461:                 Hawk.server.authenticate(req, credentialsFunc, { localtimeOffsetMsec: 1353788437000 - Hawk.utils.now() }, function (err, credentials, artifacts) {\n  462  \n  463                      expect(err).to.exist();\n  ...\n  478                  };\n  479  \n  480:                 Hawk.server.authenticate(req, credentialsFunc, { localtimeOffsetMsec: 1353788437000 - Hawk.utils.now() }, function (err, credentials, artifacts) {\n  481  \n  482                      expect(err).to.exist();\n  ...\n  497                  };\n  498  \n  499:                 Hawk.server.authenticate(req, credentialsFunc, { localtimeOffsetMsec: 1353788437000 - Hawk.utils.now() }, function (err, credentials, artifacts) {\n  500  \n  501                      expect(err).to.exist();\n  ...\n  505              });\n  506  \n  507:             it('errors on credentialsFunc error', function (done) {\n  508  \n  509                  var req = {\n  ...\n  515                  };\n  516  \n  517:                 var credentialsFunc = function (id, callback) {\n  518  \n  519                      return callback(new Error('Unknown user'));\n  520                  };\n  521  \n  522:                 Hawk.server.authenticate(req, credentialsFunc, { localtimeOffsetMsec: 1353788437000 - Hawk.utils.now() }, function (err, credentials, artifacts) {\n  523  \n  524                      expect(err).to.exist();\n  ...\n  528              });\n  529  \n  530:             it('errors on credentialsFunc error (with credentials)', function (done) {\n  531  \n  532                  var req = {\n  ...\n  538                  };\n  539  \n  540:                 var credentialsFunc = function (id, callback) {\n  541  \n  542                      return callback(new Error('Unknown user'), { some: 'value' });\n  543                  };\n  544  \n  545:                 Hawk.server.authenticate(req, credentialsFunc, { localtimeOffsetMsec: 1353788437000 - Hawk.utils.now() }, function (err, credentials, artifacts) {\n  546  \n  547                      expect(err).to.exist();\n  548                      expect(err.message).to.equal('Unknown user');\n  549:                     expect(credentials.some).to.equal('value');\n  550                      done();\n  551                  });\n  552              });\n  553  \n  554:             it('errors on missing credentials', function (done) {\n  555  \n  556                  var req = {\n  ...\n  562                  };\n  563  \n  564:                 var credentialsFunc = function (id, callback) {\n  565  \n  566                      return callback(null, null);\n  567                  };\n  568  \n  569:                 Hawk.server.authenticate(req, credentialsFunc, { localtimeOffsetMsec: 1353788437000 - Hawk.utils.now() }, function (err, credentials, artifacts) {\n  570  \n  571                      expect(err).to.exist();\n  572:                     expect(err.output.payload.message).to.equal('Unknown credentials');\n  573                      done();\n  574                  });\n  575              });\n  576  \n  577:             it('errors on invalid credentials (id)', function (done) {\n  578  \n  579                  var req = {\n  ...\n  585                  };\n  586  \n  587:                 var credentialsFunc = function (id, callback) {\n  588  \n  589:                     var credentials = {\n  590                          key: 'werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn',\n  591                          user: 'steve'\n  592                      };\n  593  \n  594:                     return callback(null, credentials);\n  595                  };\n  596  \n  597:                 Hawk.server.authenticate(req, credentialsFunc, { localtimeOffsetMsec: 1353788437000 - Hawk.utils.now() }, function (err, credentials, artifacts) {\n  598  \n  599                      expect(err).to.exist();\n  600:                     expect(err.message).to.equal('Invalid credentials');\n  601                      expect(err.output.payload.message).to.equal('An internal server error occurred');\n  602                      done();\n  ...\n  604              });\n  605  \n  606:             it('errors on invalid credentials (key)', function (done) {\n  607  \n  608                  var req = {\n  ...\n  614                  };\n  615  \n  616:                 var credentialsFunc = function (id, callback) {\n  617  \n  618:                     var credentials = {\n  619                          id: '23434d3q4d5345d',\n  620                          user: 'steve'\n  621                      };\n  622  \n  623:                     return callback(null, credentials);\n  624                  };\n  625  \n  626:                 Hawk.server.authenticate(req, credentialsFunc, { localtimeOffsetMsec: 1353788437000 - Hawk.utils.now() }, function (err, credentials, artifacts) {\n  627  \n  628                      expect(err).to.exist();\n  629:                     expect(err.message).to.equal('Invalid credentials');\n  630                      expect(err.output.payload.message).to.equal('An internal server error occurred');\n  631                      done();\n  ...\n  633              });\n  634  \n  635:             it('errors on unknown credentials algorithm', function (done) {\n  636  \n  637                  var req = {\n  ...\n  643                  };\n  644  \n  645:                 var credentialsFunc = function (id, callback) {\n  646  \n  647:                     var credentials = {\n  648                          key: 'werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn',\n  649                          algorithm: 'hmac-sha-0',\n  ...\n  651                      };\n  652  \n  653:                     return callback(null, credentials);\n  654                  };\n  655  \n  656:                 Hawk.server.authenticate(req, credentialsFunc, { localtimeOffsetMsec: 1353788437000 - Hawk.utils.now() }, function (err, credentials, artifacts) {\n  657  \n  658                      expect(err).to.exist();\n  ...\n  673                  };\n  674  \n  675:                 var credentialsFunc = function (id, callback) {\n  676  \n  677:                     var credentials = {\n  678                          key: 'werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn',\n  679                          algorithm: 'sha256',\n  ...\n  681                      };\n  682  \n  683:                     return callback(null, credentials);\n  684                  };\n  685  \n  686:                 Hawk.server.authenticate(req, credentialsFunc, { localtimeOffsetMsec: 1353788437000 - Hawk.utils.now() }, function (err, credentials, artifacts) {\n  687  \n  688                      expect(err).to.exist();\n  ...\n  697              it('generates header', function (done) {\n  698  \n  699:                 var credentials = {\n  700                      id: '123456',\n  701                      key: 'werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn',\n  ...\n  717                  };\n  718  \n  719:                 var header = Hawk.server.header(credentials, artifacts, { payload: 'some reply', contentType: 'text/plain', ext: 'response-specific' });\n  720                  expect(header).to.equal('Hawk mac=\\\"n14wVJK4cOxAytPUMc5bPezQzuJGl5n7MYXhFQgEKsE=\\\", hash=\\\"f9cDF/TDm7TkYRLnGwRMfeDzT6LixQVLvrIKhh0vgmM=\\\", ext=\\\"response-specific\\\"');\n  721                  done();\n  ...\n  724              it('generates header (empty payload)', function (done) {\n  725  \n  726:                 var credentials = {\n  727                      id: '123456',\n  728                      key: 'werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn',\n  ...\n  744                  };\n  745  \n  746:                 var header = Hawk.server.header(credentials, artifacts, { payload: '', contentType: 'text/plain', ext: 'response-specific' });\n  747                  expect(header).to.equal('Hawk mac=\\\"i8/kUBDx0QF+PpCtW860kkV/fa9dbwEoe/FpGUXowf0=\\\", hash=\\\"q/t+NNAkQZNlq/aAD6PlexImwQTxwgT2MahfTa9XRLA=\\\", ext=\\\"response-specific\\\"');\n  748                  done();\n  ...\n  751              it('generates header (pre calculated hash)', function (done) {\n  752  \n  753:                 var credentials = {\n  754                      id: '123456',\n  755                      key: 'werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn',\n  ...\n  772  \n  773                  var options = { payload: 'some reply', contentType: 'text/plain', ext: 'response-specific' };\n  774:                 options.hash = Hawk.crypto.calculatePayloadHash(options.payload, credentials.algorithm, options.contentType);\n  775:                 var header = Hawk.server.header(credentials, artifacts, options);\n  776                  expect(header).to.equal('Hawk mac=\\\"n14wVJK4cOxAytPUMc5bPezQzuJGl5n7MYXhFQgEKsE=\\\", hash=\\\"f9cDF/TDm7TkYRLnGwRMfeDzT6LixQVLvrIKhh0vgmM=\\\", ext=\\\"response-specific\\\"');\n  777                  done();\n  ...\n  780              it('generates header (null ext)', function (done) {\n  781  \n  782:                 var credentials = {\n  783                      id: '123456',\n  784                      key: 'werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn',\n  ...\n  799                  };\n  800  \n  801:                 var header = Hawk.server.header(credentials, artifacts, { payload: 'some reply', contentType: 'text/plain', ext: null });\n  802                  expect(header).to.equal('Hawk mac=\\\"6PrybJTJs20jsgBw5eilXpcytD8kUbaIKNYXL+6g0ns=\\\", hash=\\\"f9cDF/TDm7TkYRLnGwRMfeDzT6LixQVLvrIKhh0vgmM=\\\"');\n  803                  done();\n  ...\n  806              it('errors on missing artifacts', function (done) {\n  807  \n  808:                 var credentials = {\n  809                      id: '123456',\n  810                      key: 'werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn',\n  ...\n  813                  };\n  814  \n  815:                 var header = Hawk.server.header(credentials, null, { payload: 'some reply', contentType: 'text/plain', ext: 'response-specific' });\n  816                  expect(header).to.equal('');\n  817                  done();\n  ...\n  820              it('errors on invalid artifacts', function (done) {\n  821  \n  822:                 var credentials = {\n  823                      id: '123456',\n  824                      key: 'werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn',\n  ...\n  827                  };\n  828  \n  829:                 var header = Hawk.server.header(credentials, 5, { payload: 'some reply', contentType: 'text/plain', ext: 'response-specific' });\n  830                  expect(header).to.equal('');\n  831                  done();\n  832              });\n  833  \n  834:             it('errors on missing credentials', function (done) {\n  835  \n  836                  var artifacts = {\n  ...\n  852              });\n  853  \n  854:             it('errors on invalid credentials (key)', function (done) {\n  855  \n  856:                 var credentials = {\n  857                      id: '123456',\n  858                      algorithm: 'sha256',\n  ...\n  873                  };\n  874  \n  875:                 var header = Hawk.server.header(credentials, artifacts, { payload: 'some reply', contentType: 'text/plain', ext: 'response-specific' });\n  876                  expect(header).to.equal('');\n  877                  done();\n  ...\n  880              it('errors on invalid algorithm', function (done) {\n  881  \n  882:                 var credentials = {\n  883                      id: '123456',\n  884                      key: 'werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn',\n  ...\n  900                  };\n  901  \n  902:                 var header = Hawk.server.header(credentials, artifacts, { payload: 'some reply', contentType: 'text/plain', ext: 'response-specific' });\n  903                  expect(header).to.equal('');\n  904                  done();\n  ...\n  910              it('errors on invalid authorization (ts)', function (done) {\n  911  \n  912:                 credentialsFunc('123456', function (err, credentials) {\n  913  \n  914:                     var auth = Hawk.client.message('example.com', 8080, 'some message', { credentials: credentials });\n  915                      delete auth.ts;\n  916  \n  917:                     Hawk.server.authenticateMessage('example.com', 8080, 'some message', auth, credentialsFunc, {}, function (err, credentials) {\n  918  \n  919                          expect(err).to.exist();\n  ...\n  926              it('errors on invalid authorization (nonce)', function (done) {\n  927  \n  928:                 credentialsFunc('123456', function (err, credentials) {\n  929  \n  930:                     var auth = Hawk.client.message('example.com', 8080, 'some message', { credentials: credentials });\n  931                      delete auth.nonce;\n  932  \n  933:                     Hawk.server.authenticateMessage('example.com', 8080, 'some message', auth, credentialsFunc, {}, function (err, credentials) {\n  934  \n  935                          expect(err).to.exist();\n  ...\n  942              it('errors on invalid authorization (hash)', function (done) {\n  943  \n  944:                 credentialsFunc('123456', function (err, credentials) {\n  945  \n  946:                     var auth = Hawk.client.message('example.com', 8080, 'some message', { credentials: credentials });\n  947                      delete auth.hash;\n  948  \n  949:                     Hawk.server.authenticateMessage('example.com', 8080, 'some message', auth, credentialsFunc, {}, function (err, credentials) {\n  950  \n  951                          expect(err).to.exist();\n  ...\n  956              });\n  957  \n  958:             it('errors with credentials', function (done) {\n  959  \n  960:                 credentialsFunc('123456', function (err, credentials) {\n  961  \n  962:                     var auth = Hawk.client.message('example.com', 8080, 'some message', { credentials: credentials });\n  963  \n  964:                     Hawk.server.authenticateMessage('example.com', 8080, 'some message', auth, function (id, callback) { callback(new Error('something'), { some: 'value' }); }, {}, function (err, credentials) {\n  965  \n  966                          expect(err).to.exist();\n  967                          expect(err.message).to.equal('something');\n  968:                         expect(credentials.some).to.equal('value');\n  969                          done();\n  970                      });\n\n/Users/kirkcp/Documents/node_play/slatemail/node_modules/favicon/node_modules/request/node_modules/hawk/test/uri.js:\n   26      describe('Uri', function () {\n   27  \n   28:         var credentialsFunc = function (id, callback) {\n   29  \n   30:             var credentials = {\n   31                  id: id,\n   32                  key: 'werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn',\n   ..\n   35              };\n   36  \n   37:             return callback(null, credentials);\n   38          };\n   39  \n   ..\n   47              };\n   48  \n   49:             credentialsFunc('123456', function (err, credentials) {\n   50  \n   51:                 var bewit = Hawk.uri.getBewit('http://example.com/resource/4?a=1&b=2', { credentials: credentials, ttlSec: 60 * 60 * 24 * 365 * 100, ext: 'some-app-data' });\n   52                  req.url += '&bewit=' + bewit;\n   53  \n   54:                 Hawk.uri.authenticate(req, credentialsFunc, {}, function (err, credentials, attributes) {\n   55  \n   56                      expect(err).to.not.exist();\n   57:                     expect(credentials.user).to.equal('steve');\n   58                      expect(attributes.ext).to.equal('some-app-data');\n   59                      done();\n   ..\n   71              };\n   72  \n   73:             credentialsFunc('123456', function (err, credentials) {\n   74  \n   75:                 var bewit = Hawk.uri.getBewit('http://example.com/resource/4?a=1&b=2', { credentials: credentials, ttlSec: 60 * 60 * 24 * 365 * 100 });\n   76                  req.url += '&bewit=' + bewit;\n   77  \n   78:                 Hawk.uri.authenticate(req, credentialsFunc, {}, function (err, credentials, attributes) {\n   79  \n   80                      expect(err).to.not.exist();\n   81:                     expect(credentials.user).to.equal('steve');\n   82                      done();\n   83                  });\n   ..\n   94              };\n   95  \n   96:             Hawk.uri.authenticate(req, credentialsFunc, {}, function (err, credentials, attributes) {\n   97  \n   98                  expect(err).to.not.exist();\n   99:                 expect(credentials.user).to.equal('steve');\n  100                  expect(attributes.ext).to.equal('some-app-data');\n  101                  done();\n  ...\n  112              };\n  113  \n  114:             Hawk.uri.authenticate(req, credentialsFunc, {}, function (err, credentials, attributes) {\n  115  \n  116                  expect(err).to.not.exist();\n  117:                 expect(credentials.user).to.equal('steve');\n  118                  expect(attributes.ext).to.equal('some-app-data');\n  119                  done();\n  ...\n  130              };\n  131  \n  132:             Hawk.uri.authenticate(req, credentialsFunc, {}, function (err, credentials, attributes) {\n  133  \n  134                  expect(err).to.not.exist();\n  135:                 expect(credentials.user).to.equal('steve');\n  136                  expect(attributes.ext).to.equal('some-app-data');\n  137                  done();\n  ...\n  149              };\n  150  \n  151:             Hawk.uri.authenticate(req, credentialsFunc, {}, function (err, credentials, attributes) {\n  152  \n  153                  expect(err).to.exist();\n  ...\n  159          it('should fail on method other than GET', function (done) {\n  160  \n  161:             credentialsFunc('123456', function (err, credentials) {\n  162  \n  163                  var req = {\n  ...\n  170                  var exp = Math.floor(Hawk.utils.now() / 1000) + 60;\n  171                  var ext = 'some-app-data';\n  172:                 var mac = Hawk.crypto.calculateMac('bewit', credentials, {\n  173                      timestamp: exp,\n  174                      nonce: '',\n  ...\n  180                  });\n  181  \n  182:                 var bewit = credentials.id + '\\\\' + exp + '\\\\' + mac + '\\\\' + ext;\n  183  \n  184                  req.url += '&bewit=' + Hoek.base64urlEncode(bewit);\n  185  \n  186:                 Hawk.uri.authenticate(req, credentialsFunc, {}, function (err, credentials, attributes) {\n  187  \n  188                      expect(err).to.exist();\n  ...\n  203              };\n  204  \n  205:             Hawk.uri.authenticate(req, credentialsFunc, {}, function (err, credentials, attributes) {\n  206  \n  207                  expect(err).to.exist();\n  ...\n  220              };\n  221  \n  222:             Hawk.uri.authenticate(req, credentialsFunc, {}, function (err, credentials, attributes) {\n  223  \n  224                  expect(err).to.exist();\n  ...\n  238              };\n  239  \n  240:             Hawk.uri.authenticate(req, credentialsFunc, {}, function (err, credentials, attributes) {\n  241  \n  242                  expect(err).to.exist();\n  ...\n  256              };\n  257  \n  258:             Hawk.uri.authenticate(req, credentialsFunc, {}, function (err, credentials, attributes) {\n  259  \n  260                  expect(err).to.exist();\n  ...\n  274              };\n  275  \n  276:             Hawk.uri.authenticate(req, credentialsFunc, {}, function (err, credentials, attributes) {\n  277  \n  278                  expect(err).to.exist();\n  ...\n  291              };\n  292  \n  293:             Hawk.uri.authenticate(req, credentialsFunc, {}, function (err, credentials, attributes) {\n  294  \n  295                  expect(err).to.exist();\n  ...\n  308              };\n  309  \n  310:             Hawk.uri.authenticate(req, credentialsFunc, {}, function (err, credentials, attributes) {\n  311  \n  312                  expect(err).to.exist();\n  ...\n  325              };\n  326  \n  327:             Hawk.uri.authenticate(req, credentialsFunc, {}, function (err, credentials, attributes) {\n  328  \n  329                  expect(err).to.exist();\n  ...\n  333          });\n  334  \n  335:         it('should fail on credentials function error', function (done) {\n  336  \n  337              var req = {\n  ...\n  342              };\n  343  \n  344:             Hawk.uri.authenticate(req, function (id, callback) { callback(Hawk.error.badRequest('Boom')); }, {}, function (err, credentials, attributes) {\n  345  \n  346                  expect(err).to.exist();\n  ...\n  350          });\n  351  \n  352:         it('should fail on credentials function error with credentials', function (done) {\n  353  \n  354              var req = {\n  ...\n  359              };\n  360  \n  361:             Hawk.uri.authenticate(req, function (id, callback) { callback(Hawk.error.badRequest('Boom'), { some: 'value' }); }, {}, function (err, credentials, attributes) {\n  362  \n  363                  expect(err).to.exist();\n  364                  expect(err.output.payload.message).to.equal('Boom');\n  365:                 expect(credentials.some).to.equal('value');\n  366                  done();\n  367              });\n  368          });\n  369  \n  370:         it('should fail on null credentials function response', function (done) {\n  371  \n  372              var req = {\n  ...\n  377              };\n  378  \n  379:             Hawk.uri.authenticate(req, function (id, callback) { callback(null, null); }, {}, function (err, credentials, attributes) {\n  380  \n  381                  expect(err).to.exist();\n  382:                 expect(err.output.payload.message).to.equal('Unknown credentials');\n  383                  done();\n  384              });\n  385          });\n  386  \n  387:         it('should fail on invalid credentials function response', function (done) {\n  388  \n  389              var req = {\n  ...\n  394              };\n  395  \n  396:             Hawk.uri.authenticate(req, function (id, callback) { callback(null, {}); }, {}, function (err, credentials, attributes) {\n  397  \n  398                  expect(err).to.exist();\n  399:                 expect(err.message).to.equal('Invalid credentials');\n  400                  done();\n  401              });\n  402          });\n  403  \n  404:         it('should fail on invalid credentials function response (unknown algorithm)', function (done) {\n  405  \n  406              var req = {\n  ...\n  411              };\n  412  \n  413:             Hawk.uri.authenticate(req, function (id, callback) { callback(null, { key: 'xxx', algorithm: 'xxx' }); }, {}, function (err, credentials, attributes) {\n  414  \n  415                  expect(err).to.exist();\n  ...\n  428              };\n  429  \n  430:             Hawk.uri.authenticate(req, function (id, callback) { callback(null, { key: 'xxx', algorithm: 'sha256' }); }, {}, function (err, credentials, attributes) {\n  431  \n  432                  expect(err).to.exist();\n  ...\n  441          it('returns a valid bewit value', function (done) {\n  442  \n  443:             var credentials = {\n  444                  id: '123456',\n  445                  key: '2983d45yun89q',\n  ...\n  447              };\n  448  \n  449:             var bewit = Hawk.uri.getBewit('https://example.com/somewhere/over/the/rainbow', { credentials: credentials, ttlSec: 300, localtimeOffsetMsec: 1356420407232 - Hawk.utils.now(), ext: 'xandyandz' });\n  450              expect(bewit).to.equal('MTIzNDU2XDEzNTY0MjA3MDdca3NjeHdOUjJ0SnBQMVQxekRMTlBiQjVVaUtJVTl0T1NKWFRVZEc3WDloOD1ceGFuZHlhbmR6');\n  451              done();\n  ...\n  454          it('returns a valid bewit value (explicit port)', function (done) {\n  455  \n  456:             var credentials = {\n  457                  id: '123456',\n  458                  key: '2983d45yun89q',\n  ...\n  460              };\n  461  \n  462:             var bewit = Hawk.uri.getBewit('https://example.com:8080/somewhere/over/the/rainbow', { credentials: credentials, ttlSec: 300, localtimeOffsetMsec: 1356420407232 - Hawk.utils.now(), ext: 'xandyandz' });\n  463              expect(bewit).to.equal('MTIzNDU2XDEzNTY0MjA3MDdcaFpiSjNQMmNLRW80a3kwQzhqa1pBa1J5Q1p1ZWc0V1NOYnhWN3ZxM3hIVT1ceGFuZHlhbmR6');\n  464              done();\n  ...\n  467          it('returns a valid bewit value (null ext)', function (done) {\n  468  \n  469:             var credentials = {\n  470                  id: '123456',\n  471                  key: '2983d45yun89q',\n  ...\n  473              };\n  474  \n  475:             var bewit = Hawk.uri.getBewit('https://example.com/somewhere/over/the/rainbow', { credentials: credentials, ttlSec: 300, localtimeOffsetMsec: 1356420407232 - Hawk.utils.now(), ext: null });\n  476              expect(bewit).to.equal('MTIzNDU2XDEzNTY0MjA3MDdcSUdZbUxnSXFMckNlOEN4dktQczRKbFdJQStValdKSm91d2dBUmlWaENBZz1c');\n  477              done();\n  ...\n  480          it('returns a valid bewit value (parsed uri)', function (done) {\n  481  \n  482:             var credentials = {\n  483                  id: '123456',\n  484                  key: '2983d45yun89q',\n  ...\n  486              };\n  487  \n  488:             var bewit = Hawk.uri.getBewit(Url.parse('https://example.com/somewhere/over/the/rainbow'), { credentials: credentials, ttlSec: 300, localtimeOffsetMsec: 1356420407232 - Hawk.utils.now(), ext: 'xandyandz' });\n  489              expect(bewit).to.equal('MTIzNDU2XDEzNTY0MjA3MDdca3NjeHdOUjJ0SnBQMVQxekRMTlBiQjVVaUtJVTl0T1NKWFRVZEc3WDloOD1ceGFuZHlhbmR6');\n  490              done();\n  ...\n  493          it('errors on invalid options', function (done) {\n  494  \n  495:             var credentials = {\n  496                  id: '123456',\n  497                  key: '2983d45yun89q',\n  ...\n  506          it('errors on missing uri', function (done) {\n  507  \n  508:             var credentials = {\n  509                  id: '123456',\n  510                  key: '2983d45yun89q',\n  ...\n  512              };\n  513  \n  514:             var bewit = Hawk.uri.getBewit('', { credentials: credentials, ttlSec: 300, localtimeOffsetMsec: 1356420407232 - Hawk.utils.now(), ext: 'xandyandz' });\n  515              expect(bewit).to.equal('');\n  516              done();\n  ...\n  519          it('errors on invalid uri', function (done) {\n  520  \n  521:             var credentials = {\n  522                  id: '123456',\n  523                  key: '2983d45yun89q',\n  ...\n  525              };\n  526  \n  527:             var bewit = Hawk.uri.getBewit(5, { credentials: credentials, ttlSec: 300, localtimeOffsetMsec: 1356420407232 - Hawk.utils.now(), ext: 'xandyandz' });\n  528              expect(bewit).to.equal('');\n  529              done();\n  530          });\n  531  \n  532:         it('errors on invalid credentials (id)', function (done) {\n  533  \n  534:             var credentials = {\n  535                  key: '2983d45yun89q',\n  536                  algorithm: 'sha256'\n  537              };\n  538  \n  539:             var bewit = Hawk.uri.getBewit('https://example.com/somewhere/over/the/rainbow', { credentials: credentials, ttlSec: 3000, ext: 'xandyandz' });\n  540              expect(bewit).to.equal('');\n  541              done();\n  542          });\n  543  \n  544:         it('errors on missing credentials', function (done) {\n  545  \n  546              var bewit = Hawk.uri.getBewit('https://example.com/somewhere/over/the/rainbow', { ttlSec: 3000, ext: 'xandyandz' });\n  ...\n  549          });\n  550  \n  551:         it('errors on invalid credentials (key)', function (done) {\n  552  \n  553:             var credentials = {\n  554                  id: '123456',\n  555                  algorithm: 'sha256'\n  556              };\n  557  \n  558:             var bewit = Hawk.uri.getBewit('https://example.com/somewhere/over/the/rainbow', { credentials: credentials, ttlSec: 3000, ext: 'xandyandz' });\n  559              expect(bewit).to.equal('');\n  560              done();\n  ...\n  563          it('errors on invalid algorithm', function (done) {\n  564  \n  565:             var credentials = {\n  566                  id: '123456',\n  567                  key: '2983d45yun89q',\n  ...\n  569              };\n  570  \n  571:             var bewit = Hawk.uri.getBewit('https://example.com/somewhere/over/the/rainbow', { credentials: credentials, ttlSec: 300, ext: 'xandyandz' });\n  572              expect(bewit).to.equal('');\n  573              done();\n  ...\n  576          it('errors on missing options', function (done) {\n  577  \n  578:             var credentials = {\n  579                  id: '123456',\n  580                  key: '2983d45yun89q',\n\n/Users/kirkcp/Documents/node_play/slatemail/node_modules/favicon/node_modules/request/node_modules/http-signature/http_signing.md:\n   47  with the following parameterization:\n   48  \n   49:     credentials := \"Signature\" params\n   50      params := 1#(keyId | algorithm | [headers] | [ext] | signature)\n   51      digitalSignature := plain-string\n\n/Users/kirkcp/Documents/node_play/slatemail/node_modules/jquery/dist/jquery.js:\n 8538  }\n 8539  \n 8540: support.cors = !!xhrSupported && ( \"withCredentials\" in xhrSupported );\n 8541  support.ajax = xhrSupported = !!xhrSupported;\n 8542  \n\n/Users/kirkcp/Documents/node_play/slatemail/node_modules/jquery/dist/jquery.min.js:\n    2  !function(a,b){\"object\"==typeof module&&\"object\"==typeof module.exports?module.exports=a.document?b(a,!0):function(a){if(!a.document)throw new Error(\"jQuery requires a window with a document\");return b(a)}:b(a)}(\"undefined\"!=typeof window?window:this,function(a,b){var c=[],d=c.slice,e=c.concat,f=c.push,g=c.indexOf,h={},i=h.toString,j=h.hasOwnProperty,k={},l=a.document,m=\"2.1.1\",n=function(a,b){return new n.fn.init(a,b)},o=/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,p=/^-ms-/,q=/-([\\da-z])/gi,r=function(a,b){return b.toUpperCase()};n.fn=n.prototype={jquery:m,constructor:n,selector:\"\",length:0,toArray:function(){return d.call(this)},get:function(a){return null!=a?0>a?this[a+this.length]:this[a]:d.call(this)},pushStack:function(a){var b=n.merge(this.constructor(),a);return b.prevObject=this,b.context=this.context,b},each:function(a,b){return n.each(this,a,b)},map:function(a){return this.pushStack(n.map(this,function(b,c){return a.call(b,c,b)}))},slice:function(){return this.pushStack(d.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(a){var b=this.length,c=+a+(0>a?b:0);return this.pushStack(c>=0&&b>c?[this[c]]:[])},end:function(){return this.prevObject||this.constructor(null)},push:f,sort:c.sort,splice:c.splice},n.extend=n.fn.extend=function(){var a,b,c,d,e,f,g=arguments[0]||{},h=1,i=arguments.length,j=!1;for(\"boolean\"==typeof g&&(j=g,g=arguments[h]||{},h++),\"object\"==typeof g||n.isFunction(g)||(g={}),h===i&&(g=this,h--);i>h;h++)if(null!=(a=arguments[h]))for(b in a)c=g[b],d=a[b],g!==d&&(j&&d&&(n.isPlainObject(d)||(e=n.isArray(d)))?(e?(e=!1,f=c&&n.isArray(c)?c:[]):f=c&&n.isPlainObject(c)?c:{},g[b]=n.extend(j,f,d)):void 0!==d&&(g[b]=d));return g},n.extend({expando:\"jQuery\"+(m+Math.random()).replace(/\\D/g,\"\"),isReady:!0,error:function(a){throw new Error(a)},noop:function(){},isFunction:function(a){return\"function\"===n.type(a)},isArray:Array.isArray,isWindow:function(a){return null!=a&&a===a.window},isNumeric:function(a){return!n.isArray(a)&&a-parseFloat(a)>=0},isPlainObject:function(a){return\"object\"!==n.type(a)||a.nodeType||n.isWindow(a)?!1:a.constructor&&!j.call(a.constructor.prototype,\"isPrototypeOf\")?!1:!0},isEmptyObject:function(a){var b;for(b in a)return!1;return!0},type:function(a){return null==a?a+\"\":\"object\"==typeof a||\"function\"==typeof a?h[i.call(a)]||\"object\":typeof a},globalEval:function(a){var b,c=eval;a=n.trim(a),a&&(1===a.indexOf(\"use strict\")?(b=l.createElement(\"script\"),b.text=a,l.head.appendChild(b).parentNode.removeChild(b)):c(a))},camelCase:function(a){return a.replace(p,\"ms-\").replace(q,r)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toLowerCase()===b.toLowerCase()},each:function(a,b,c){var d,e=0,f=a.length,g=s(a);if(c){if(g){for(;f>e;e++)if(d=b.apply(a[e],c),d===!1)break}else for(e in a)if(d=b.apply(a[e],c),d===!1)break}else if(g){for(;f>e;e++)if(d=b.call(a[e],e,a[e]),d===!1)break}else for(e in a)if(d=b.call(a[e],e,a[e]),d===!1)break;return a},trim:function(a){return null==a?\"\":(a+\"\").replace(o,\"\")},makeArray:function(a,b){var c=b||[];return null!=a&&(s(Object(a))?n.merge(c,\"string\"==typeof a?[a]:a):f.call(c,a)),c},inArray:function(a,b,c){return null==b?-1:g.call(b,a,c)},merge:function(a,b){for(var c=+b.length,d=0,e=a.length;c>d;d++)a[e++]=b[d];return a.length=e,a},grep:function(a,b,c){for(var d,e=[],f=0,g=a.length,h=!c;g>f;f++)d=!b(a[f],f),d!==h&&e.push(a[f]);return e},map:function(a,b,c){var d,f=0,g=a.length,h=s(a),i=[];if(h)for(;g>f;f++)d=b(a[f],f,c),null!=d&&i.push(d);else for(f in a)d=b(a[f],f,c),null!=d&&i.push(d);return e.apply([],i)},guid:1,proxy:function(a,b){var c,e,f;return\"string\"==typeof b&&(c=a[b],b=a,a=c),n.isFunction(a)?(e=d.call(arguments,2),f=function(){return a.apply(b||this,e.concat(d.call(arguments)))},f.guid=a.guid=a.guid||n.guid++,f):void 0},now:Date.now,support:k}),n.each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"),function(a,b){h[\"[object \"+b+\"]\"]=b.toLowerCase()});function s(a){var b=a.length,c=n.type(a);return\"function\"===c||n.isWindow(a)?!1:1===a.nodeType&&b?!0:\"array\"===c||0===b||\"number\"==typeof b&&b>0&&b-1 in a}var t=function(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u=\"sizzle\"+-new Date,v=a.document,w=0,x=0,y=gb(),z=gb(),A=gb(),B=function(a,b){return a===b&&(l=!0),0},C=\"undefined\",D=1<<31,E={}.hasOwnProperty,F=[],G=F.pop,H=F.push,I=F.push,J=F.slice,K=F.indexOf||function(a){for(var b=0,c=this.length;c>b;b++)if(this[b]===a)return b;return-1},L=\"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",M=\"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",N=\"(?:\\\\\\\\.|[\\\\w-]|[^\\\\x00-\\\\xa0])+\",O=N.replace(\"w\",\"w#\"),P=\"\\\\[\"+M+\"*(\"+N+\")(?:\"+M+\"*([*^$|!~]?=)\"+M+\"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\"+O+\"))|)\"+M+\"*\\\\]\",Q=\":(\"+N+\")(?:\\\\((('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\"+P+\")*)|.*)\\\\)|)\",R=new RegExp(\"^\"+M+\"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\"+M+\"+$\",\"g\"),S=new RegExp(\"^\"+M+\"*,\"+M+\"*\"),T=new RegExp(\"^\"+M+\"*([>+~]|\"+M+\")\"+M+\"*\"),U=new RegExp(\"=\"+M+\"*([^\\\\]'\\\"]*?)\"+M+\"*\\\\]\",\"g\"),V=new RegExp(Q),W=new RegExp(\"^\"+O+\"$\"),X={ID:new RegExp(\"^#(\"+N+\")\"),CLASS:new RegExp(\"^\\\\.(\"+N+\")\"),TAG:new RegExp(\"^(\"+N.replace(\"w\",\"w*\")+\")\"),ATTR:new RegExp(\"^\"+P),PSEUDO:new RegExp(\"^\"+Q),CHILD:new RegExp(\"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\"+M+\"*(even|odd|(([+-]|)(\\\\d*)n|)\"+M+\"*(?:([+-]|)\"+M+\"*(\\\\d+)|))\"+M+\"*\\\\)|)\",\"i\"),bool:new RegExp(\"^(?:\"+L+\")$\",\"i\"),needsContext:new RegExp(\"^\"+M+\"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\"+M+\"*((?:-\\\\d)?\\\\d*)\"+M+\"*\\\\)|)(?=[^-]|$)\",\"i\")},Y=/^(?:input|select|textarea|button)$/i,Z=/^h\\d$/i,$=/^[^{]+\\{\\s*\\[native \\w/,_=/^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,ab=/[+~]/,bb=/'|\\\\/g,cb=new RegExp(\"\\\\\\\\([\\\\da-f]{1,6}\"+M+\"?|(\"+M+\")|.)\",\"ig\"),db=function(a,b,c){var d=\"0x\"+b-65536;return d!==d||c?b:0>d?String.fromCharCode(d+65536):String.fromCharCode(d>>10|55296,1023&d|56320)};try{I.apply(F=J.call(v.childNodes),v.childNodes),F[v.childNodes.length].nodeType}catch(eb){I={apply:F.length?function(a,b){H.apply(a,J.call(b))}:function(a,b){var c=a.length,d=0;while(a[c++]=b[d++]);a.length=c-1}}}function fb(a,b,d,e){var f,h,j,k,l,o,r,s,w,x;if((b?b.ownerDocument||b:v)!==n&&m(b),b=b||n,d=d||[],!a||\"string\"!=typeof a)return d;if(1!==(k=b.nodeType)&&9!==k)return[];if(p&&!e){if(f=_.exec(a))if(j=f[1]){if(9===k){if(h=b.getElementById(j),!h||!h.parentNode)return d;if(h.id===j)return d.push(h),d}else if(b.ownerDocument&&(h=b.ownerDocument.getElementById(j))&&t(b,h)&&h.id===j)return d.push(h),d}else{if(f[2])return I.apply(d,b.getElementsByTagName(a)),d;if((j=f[3])&&c.getElementsByClassName&&b.getElementsByClassName)return I.apply(d,b.getElementsByClassName(j)),d}if(c.qsa&&(!q||!q.test(a))){if(s=r=u,w=b,x=9===k&&a,1===k&&\"object\"!==b.nodeName.toLowerCase()){o=g(a),(r=b.getAttribute(\"id\"))?s=r.replace(bb,\"\\\\$&\"):b.setAttribute(\"id\",s),s=\"[id='\"+s+\"'] \",l=o.length;while(l--)o[l]=s+qb(o[l]);w=ab.test(a)&&ob(b.parentNode)||b,x=o.join(\",\")}if(x)try{return I.apply(d,w.querySelectorAll(x)),d}catch(y){}finally{r||b.removeAttribute(\"id\")}}}return i(a.replace(R,\"$1\"),b,d,e)}function gb(){var a=[];function b(c,e){return a.push(c+\" \")>d.cacheLength&&delete b[a.shift()],b[c+\" \"]=e}return b}function hb(a){return a[u]=!0,a}function ib(a){var b=n.createElement(\"div\");try{return!!a(b)}catch(c){return!1}finally{b.parentNode&&b.parentNode.removeChild(b),b=null}}function jb(a,b){var c=a.split(\"|\"),e=a.length;while(e--)d.attrHandle[c[e]]=b}function kb(a,b){var c=b&&a,d=c&&1===a.nodeType&&1===b.nodeType&&(~b.sourceIndex||D)-(~a.sourceIndex||D);if(d)return d;if(c)while(c=c.nextSibling)if(c===b)return-1;return a?1:-1}function lb(a){return function(b){var c=b.nodeName.toLowerCase();return\"input\"===c&&b.type===a}}function mb(a){return function(b){var c=b.nodeName.toLowerCase();return(\"input\"===c||\"button\"===c)&&b.type===a}}function nb(a){return hb(function(b){return b=+b,hb(function(c,d){var e,f=a([],c.length,b),g=f.length;while(g--)c[e=f[g]]&&(c[e]=!(d[e]=c[e]))})})}function ob(a){return a&&typeof a.getElementsByTagName!==C&&a}c=fb.support={},f=fb.isXML=function(a){var b=a&&(a.ownerDocument||a).documentElement;return b?\"HTML\"!==b.nodeName:!1},m=fb.setDocument=function(a){var b,e=a?a.ownerDocument||a:v,g=e.defaultView;return e!==n&&9===e.nodeType&&e.documentElement?(n=e,o=e.documentElement,p=!f(e),g&&g!==g.top&&(g.addEventListener?g.addEventListener(\"unload\",function(){m()},!1):g.attachEvent&&g.attachEvent(\"onunload\",function(){m()})),c.attributes=ib(function(a){return a.className=\"i\",!a.getAttribute(\"className\")}),c.getElementsByTagName=ib(function(a){return a.appendChild(e.createComment(\"\")),!a.getElementsByTagName(\"*\").length}),c.getElementsByClassName=$.test(e.getElementsByClassName)&&ib(function(a){return a.innerHTML=\"<div class='a'></div><div class='a i'></div>\",a.firstChild.className=\"i\",2===a.getElementsByClassName(\"i\").length}),c.getById=ib(function(a){return o.appendChild(a).id=u,!e.getElementsByName||!e.getElementsByName(u).length}),c.getById?(d.find.ID=function(a,b){if(typeof b.getElementById!==C&&p){var c=b.getElementById(a);return c&&c.parentNode?[c]:[]}},d.filter.ID=function(a){var b=a.replace(cb,db);return function(a){return a.getAttribute(\"id\")===b}}):(delete d.find.ID,d.filter.ID=function(a){var b=a.replace(cb,db);return function(a){var c=typeof a.getAttributeNode!==C&&a.getAttributeNode(\"id\");return c&&c.value===b}}),d.find.TAG=c.getElementsByTagName?function(a,b){return typeof b.getElementsByTagName!==C?b.getElementsByTagName(a):void 0}:function(a,b){var c,d=[],e=0,f=b.getElementsByTagName(a);if(\"*\"===a){while(c=f[e++])1===c.nodeType&&d.push(c);return d}return f},d.find.CLASS=c.getElementsByClassName&&function(a,b){return typeof b.getElementsByClassName!==C&&p?b.getElementsByClassName(a):void 0},r=[],q=[],(c.qsa=$.test(e.querySelectorAll))&&(ib(function(a){a.innerHTML=\"<select msallowclip=''><option selected=''></option></select>\",a.querySelectorAll(\"[msallowclip^='']\").length&&q.push(\"[*^$]=\"+M+\"*(?:''|\\\"\\\")\"),a.querySelectorAll(\"[selected]\").length||q.push(\"\\\\[\"+M+\"*(?:value|\"+L+\")\"),a.querySelectorAll(\":checked\").length||q.push(\":checked\")}),ib(function(a){var b=e.createElement(\"input\");b.setAttribute(\"type\",\"hidden\"),a.appendChild(b).setAttribute(\"name\",\"D\"),a.querySelectorAll(\"[name=d]\").length&&q.push(\"name\"+M+\"*[*^$|!~]?=\"),a.querySelectorAll(\":enabled\").length||q.push(\":enabled\",\":disabled\"),a.querySelectorAll(\"*,:x\"),q.push(\",.*:\")})),(c.matchesSelector=$.test(s=o.matches||o.webkitMatchesSelector||o.mozMatchesSelector||o.oMatchesSelector||o.msMatchesSelector))&&ib(function(a){c.disconnectedMatch=s.call(a,\"div\"),s.call(a,\"[s!='']:x\"),r.push(\"!=\",Q)}),q=q.length&&new RegExp(q.join(\"|\")),r=r.length&&new RegExp(r.join(\"|\")),b=$.test(o.compareDocumentPosition),t=b||$.test(o.contains)?function(a,b){var c=9===a.nodeType?a.documentElement:a,d=b&&b.parentNode;return a===d||!(!d||1!==d.nodeType||!(c.contains?c.contains(d):a.compareDocumentPosition&&16&a.compareDocumentPosition(d)))}:function(a,b){if(b)while(b=b.parentNode)if(b===a)return!0;return!1},B=b?function(a,b){if(a===b)return l=!0,0;var d=!a.compareDocumentPosition-!b.compareDocumentPosition;return d?d:(d=(a.ownerDocument||a)===(b.ownerDocument||b)?a.compareDocumentPosition(b):1,1&d||!c.sortDetached&&b.compareDocumentPosition(a)===d?a===e||a.ownerDocument===v&&t(v,a)?-1:b===e||b.ownerDocument===v&&t(v,b)?1:k?K.call(k,a)-K.call(k,b):0:4&d?-1:1)}:function(a,b){if(a===b)return l=!0,0;var c,d=0,f=a.parentNode,g=b.parentNode,h=[a],i=[b];if(!f||!g)return a===e?-1:b===e?1:f?-1:g?1:k?K.call(k,a)-K.call(k,b):0;if(f===g)return kb(a,b);c=a;while(c=c.parentNode)h.unshift(c);c=b;while(c=c.parentNode)i.unshift(c);while(h[d]===i[d])d++;return d?kb(h[d],i[d]):h[d]===v?-1:i[d]===v?1:0},e):n},fb.matches=function(a,b){return fb(a,null,null,b)},fb.matchesSelector=function(a,b){if((a.ownerDocument||a)!==n&&m(a),b=b.replace(U,\"='$1']\"),!(!c.matchesSelector||!p||r&&r.test(b)||q&&q.test(b)))try{var d=s.call(a,b);if(d||c.disconnectedMatch||a.document&&11!==a.document.nodeType)return d}catch(e){}return fb(b,n,null,[a]).length>0},fb.contains=function(a,b){return(a.ownerDocument||a)!==n&&m(a),t(a,b)},fb.attr=function(a,b){(a.ownerDocument||a)!==n&&m(a);var e=d.attrHandle[b.toLowerCase()],f=e&&E.call(d.attrHandle,b.toLowerCase())?e(a,b,!p):void 0;return void 0!==f?f:c.attributes||!p?a.getAttribute(b):(f=a.getAttributeNode(b))&&f.specified?f.value:null},fb.error=function(a){throw new Error(\"Syntax error, unrecognized expression: \"+a)},fb.uniqueSort=function(a){var b,d=[],e=0,f=0;if(l=!c.detectDuplicates,k=!c.sortStable&&a.slice(0),a.sort(B),l){while(b=a[f++])b===a[f]&&(e=d.push(f));while(e--)a.splice(d[e],1)}return k=null,a},e=fb.getText=function(a){var b,c=\"\",d=0,f=a.nodeType;if(f){if(1===f||9===f||11===f){if(\"string\"==typeof a.textContent)return a.textContent;for(a=a.firstChild;a;a=a.nextSibling)c+=e(a)}else if(3===f||4===f)return a.nodeValue}else while(b=a[d++])c+=e(b);return c},d=fb.selectors={cacheLength:50,createPseudo:hb,match:X,attrHandle:{},find:{},relative:{\">\":{dir:\"parentNode\",first:!0},\" \":{dir:\"parentNode\"},\"+\":{dir:\"previousSibling\",first:!0},\"~\":{dir:\"previousSibling\"}},preFilter:{ATTR:function(a){return a[1]=a[1].replace(cb,db),a[3]=(a[3]||a[4]||a[5]||\"\").replace(cb,db),\"~=\"===a[2]&&(a[3]=\" \"+a[3]+\" \"),a.slice(0,4)},CHILD:function(a){return a[1]=a[1].toLowerCase(),\"nth\"===a[1].slice(0,3)?(a[3]||fb.error(a[0]),a[4]=+(a[4]?a[5]+(a[6]||1):2*(\"even\"===a[3]||\"odd\"===a[3])),a[5]=+(a[7]+a[8]||\"odd\"===a[3])):a[3]&&fb.error(a[0]),a},PSEUDO:function(a){var b,c=!a[6]&&a[2];return X.CHILD.test(a[0])?null:(a[3]?a[2]=a[4]||a[5]||\"\":c&&V.test(c)&&(b=g(c,!0))&&(b=c.indexOf(\")\",c.length-b)-c.length)&&(a[0]=a[0].slice(0,b),a[2]=c.slice(0,b)),a.slice(0,3))}},filter:{TAG:function(a){var b=a.replace(cb,db).toLowerCase();return\"*\"===a?function(){return!0}:function(a){return a.nodeName&&a.nodeName.toLowerCase()===b}},CLASS:function(a){var b=y[a+\" \"];return b||(b=new RegExp(\"(^|\"+M+\")\"+a+\"(\"+M+\"|$)\"))&&y(a,function(a){return b.test(\"string\"==typeof a.className&&a.className||typeof a.getAttribute!==C&&a.getAttribute(\"class\")||\"\")})},ATTR:function(a,b,c){return function(d){var e=fb.attr(d,a);return null==e?\"!=\"===b:b?(e+=\"\",\"=\"===b?e===c:\"!=\"===b?e!==c:\"^=\"===b?c&&0===e.indexOf(c):\"*=\"===b?c&&e.indexOf(c)>-1:\"$=\"===b?c&&e.slice(-c.length)===c:\"~=\"===b?(\" \"+e+\" \").indexOf(c)>-1:\"|=\"===b?e===c||e.slice(0,c.length+1)===c+\"-\":!1):!0}},CHILD:function(a,b,c,d,e){var f=\"nth\"!==a.slice(0,3),g=\"last\"!==a.slice(-4),h=\"of-type\"===b;return 1===d&&0===e?function(a){return!!a.parentNode}:function(b,c,i){var j,k,l,m,n,o,p=f!==g?\"nextSibling\":\"previousSibling\",q=b.parentNode,r=h&&b.nodeName.toLowerCase(),s=!i&&!h;if(q){if(f){while(p){l=b;while(l=l[p])if(h?l.nodeName.toLowerCase()===r:1===l.nodeType)return!1;o=p=\"only\"===a&&!o&&\"nextSibling\"}return!0}if(o=[g?q.firstChild:q.lastChild],g&&s){k=q[u]||(q[u]={}),j=k[a]||[],n=j[0]===w&&j[1],m=j[0]===w&&j[2],l=n&&q.childNodes[n];while(l=++n&&l&&l[p]||(m=n=0)||o.pop())if(1===l.nodeType&&++m&&l===b){k[a]=[w,n,m];break}}else if(s&&(j=(b[u]||(b[u]={}))[a])&&j[0]===w)m=j[1];else while(l=++n&&l&&l[p]||(m=n=0)||o.pop())if((h?l.nodeName.toLowerCase()===r:1===l.nodeType)&&++m&&(s&&((l[u]||(l[u]={}))[a]=[w,m]),l===b))break;return m-=e,m===d||m%d===0&&m/d>=0}}},PSEUDO:function(a,b){var c,e=d.pseudos[a]||d.setFilters[a.toLowerCase()]||fb.error(\"unsupported pseudo: \"+a);return e[u]?e(b):e.length>1?(c=[a,a,\"\",b],d.setFilters.hasOwnProperty(a.toLowerCase())?hb(function(a,c){var d,f=e(a,b),g=f.length;while(g--)d=K.call(a,f[g]),a[d]=!(c[d]=f[g])}):function(a){return e(a,0,c)}):e}},pseudos:{not:hb(function(a){var b=[],c=[],d=h(a.replace(R,\"$1\"));return d[u]?hb(function(a,b,c,e){var f,g=d(a,null,e,[]),h=a.length;while(h--)(f=g[h])&&(a[h]=!(b[h]=f))}):function(a,e,f){return b[0]=a,d(b,null,f,c),!c.pop()}}),has:hb(function(a){return function(b){return fb(a,b).length>0}}),contains:hb(function(a){return function(b){return(b.textContent||b.innerText||e(b)).indexOf(a)>-1}}),lang:hb(function(a){return W.test(a||\"\")||fb.error(\"unsupported lang: \"+a),a=a.replace(cb,db).toLowerCase(),function(b){var c;do if(c=p?b.lang:b.getAttribute(\"xml:lang\")||b.getAttribute(\"lang\"))return c=c.toLowerCase(),c===a||0===c.indexOf(a+\"-\");while((b=b.parentNode)&&1===b.nodeType);return!1}}),target:function(b){var c=a.location&&a.location.hash;return c&&c.slice(1)===b.id},root:function(a){return a===o},focus:function(a){return a===n.activeElement&&(!n.hasFocus||n.hasFocus())&&!!(a.type||a.href||~a.tabIndex)},enabled:function(a){return a.disabled===!1},disabled:function(a){return a.disabled===!0},checked:function(a){var b=a.nodeName.toLowerCase();return\"input\"===b&&!!a.checked||\"option\"===b&&!!a.selected},selected:function(a){return a.parentNode&&a.parentNode.selectedIndex,a.selected===!0},empty:function(a){for(a=a.firstChild;a;a=a.nextSibling)if(a.nodeType<6)return!1;return!0},parent:function(a){return!d.pseudos.empty(a)},header:function(a){return Z.test(a.nodeName)},input:function(a){return Y.test(a.nodeName)},button:function(a){var b=a.nodeName.toLowerCase();return\"input\"===b&&\"button\"===a.type||\"button\"===b},text:function(a){var b;return\"input\"===a.nodeName.toLowerCase()&&\"text\"===a.type&&(null==(b=a.getAttribute(\"type\"))||\"text\"===b.toLowerCase())},first:nb(function(){return[0]}),last:nb(function(a,b){return[b-1]}),eq:nb(function(a,b,c){return[0>c?c+b:c]}),even:nb(function(a,b){for(var c=0;b>c;c+=2)a.push(c);return a}),odd:nb(function(a,b){for(var c=1;b>c;c+=2)a.push(c);return a}),lt:nb(function(a,b,c){for(var d=0>c?c+b:c;--d>=0;)a.push(d);return a}),gt:nb(function(a,b,c){for(var d=0>c?c+b:c;++d<b;)a.push(d);return a})}},d.pseudos.nth=d.pseudos.eq;for(b in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})d.pseudos[b]=lb(b);for(b in{submit:!0,reset:!0})d.pseudos[b]=mb(b);function pb(){}pb.prototype=d.filters=d.pseudos,d.setFilters=new pb,g=fb.tokenize=function(a,b){var c,e,f,g,h,i,j,k=z[a+\" \"];if(k)return b?0:k.slice(0);h=a,i=[],j=d.preFilter;while(h){(!c||(e=S.exec(h)))&&(e&&(h=h.slice(e[0].length)||h),i.push(f=[])),c=!1,(e=T.exec(h))&&(c=e.shift(),f.push({value:c,type:e[0].replace(R,\" \")}),h=h.slice(c.length));for(g in d.filter)!(e=X[g].exec(h))||j[g]&&!(e=j[g](e))||(c=e.shift(),f.push({value:c,type:g,matches:e}),h=h.slice(c.length));if(!c)break}return b?h.length:h?fb.error(a):z(a,i).slice(0)};function qb(a){for(var b=0,c=a.length,d=\"\";c>b;b++)d+=a[b].value;return d}function rb(a,b,c){var d=b.dir,e=c&&\"parentNode\"===d,f=x++;return b.first?function(b,c,f){while(b=b[d])if(1===b.nodeType||e)return a(b,c,f)}:function(b,c,g){var h,i,j=[w,f];if(g){while(b=b[d])if((1===b.nodeType||e)&&a(b,c,g))return!0}else while(b=b[d])if(1===b.nodeType||e){if(i=b[u]||(b[u]={}),(h=i[d])&&h[0]===w&&h[1]===f)return j[2]=h[2];if(i[d]=j,j[2]=a(b,c,g))return!0}}}function sb(a){return a.length>1?function(b,c,d){var e=a.length;while(e--)if(!a[e](b,c,d))return!1;return!0}:a[0]}function tb(a,b,c){for(var d=0,e=b.length;e>d;d++)fb(a,b[d],c);return c}function ub(a,b,c,d,e){for(var f,g=[],h=0,i=a.length,j=null!=b;i>h;h++)(f=a[h])&&(!c||c(f,d,e))&&(g.push(f),j&&b.push(h));return g}function vb(a,b,c,d,e,f){return d&&!d[u]&&(d=vb(d)),e&&!e[u]&&(e=vb(e,f)),hb(function(f,g,h,i){var j,k,l,m=[],n=[],o=g.length,p=f||tb(b||\"*\",h.nodeType?[h]:h,[]),q=!a||!f&&b?p:ub(p,m,a,h,i),r=c?e||(f?a:o||d)?[]:g:q;if(c&&c(q,r,h,i),d){j=ub(r,n),d(j,[],h,i),k=j.length;while(k--)(l=j[k])&&(r[n[k]]=!(q[n[k]]=l))}if(f){if(e||a){if(e){j=[],k=r.length;while(k--)(l=r[k])&&j.push(q[k]=l);e(null,r=[],j,i)}k=r.length;while(k--)(l=r[k])&&(j=e?K.call(f,l):m[k])>-1&&(f[j]=!(g[j]=l))}}else r=ub(r===g?r.splice(o,r.length):r),e?e(null,g,r,i):I.apply(g,r)})}function wb(a){for(var b,c,e,f=a.length,g=d.relative[a[0].type],h=g||d.relative[\" \"],i=g?1:0,k=rb(function(a){return a===b},h,!0),l=rb(function(a){return K.call(b,a)>-1},h,!0),m=[function(a,c,d){return!g&&(d||c!==j)||((b=c).nodeType?k(a,c,d):l(a,c,d))}];f>i;i++)if(c=d.relative[a[i].type])m=[rb(sb(m),c)];else{if(c=d.filter[a[i].type].apply(null,a[i].matches),c[u]){for(e=++i;f>e;e++)if(d.relative[a[e].type])break;return vb(i>1&&sb(m),i>1&&qb(a.slice(0,i-1).concat({value:\" \"===a[i-2].type?\"*\":\"\"})).replace(R,\"$1\"),c,e>i&&wb(a.slice(i,e)),f>e&&wb(a=a.slice(e)),f>e&&qb(a))}m.push(c)}return sb(m)}function xb(a,b){var c=b.length>0,e=a.length>0,f=function(f,g,h,i,k){var l,m,o,p=0,q=\"0\",r=f&&[],s=[],t=j,u=f||e&&d.find.TAG(\"*\",k),v=w+=null==t?1:Math.random()||.1,x=u.length;for(k&&(j=g!==n&&g);q!==x&&null!=(l=u[q]);q++){if(e&&l){m=0;while(o=a[m++])if(o(l,g,h)){i.push(l);break}k&&(w=v)}c&&((l=!o&&l)&&p--,f&&r.push(l))}if(p+=q,c&&q!==p){m=0;while(o=b[m++])o(r,s,g,h);if(f){if(p>0)while(q--)r[q]||s[q]||(s[q]=G.call(i));s=ub(s)}I.apply(i,s),k&&!f&&s.length>0&&p+b.length>1&&fb.uniqueSort(i)}return k&&(w=v,j=t),r};return c?hb(f):f}return h=fb.compile=function(a,b){var c,d=[],e=[],f=A[a+\" \"];if(!f){b||(b=g(a)),c=b.length;while(c--)f=wb(b[c]),f[u]?d.push(f):e.push(f);f=A(a,xb(e,d)),f.selector=a}return f},i=fb.select=function(a,b,e,f){var i,j,k,l,m,n=\"function\"==typeof a&&a,o=!f&&g(a=n.selector||a);if(e=e||[],1===o.length){if(j=o[0]=o[0].slice(0),j.length>2&&\"ID\"===(k=j[0]).type&&c.getById&&9===b.nodeType&&p&&d.relative[j[1].type]){if(b=(d.find.ID(k.matches[0].replace(cb,db),b)||[])[0],!b)return e;n&&(b=b.parentNode),a=a.slice(j.shift().value.length)}i=X.needsContext.test(a)?0:j.length;while(i--){if(k=j[i],d.relative[l=k.type])break;if((m=d.find[l])&&(f=m(k.matches[0].replace(cb,db),ab.test(j[0].type)&&ob(b.parentNode)||b))){if(j.splice(i,1),a=f.length&&qb(j),!a)return I.apply(e,f),e;break}}}return(n||h(a,o))(f,b,!p,e,ab.test(a)&&ob(b.parentNode)||b),e},c.sortStable=u.split(\"\").sort(B).join(\"\")===u,c.detectDuplicates=!!l,m(),c.sortDetached=ib(function(a){return 1&a.compareDocumentPosition(n.createElement(\"div\"))}),ib(function(a){return a.innerHTML=\"<a href='#'></a>\",\"#\"===a.firstChild.getAttribute(\"href\")})||jb(\"type|href|height|width\",function(a,b,c){return c?void 0:a.getAttribute(b,\"type\"===b.toLowerCase()?1:2)}),c.attributes&&ib(function(a){return a.innerHTML=\"<input/>\",a.firstChild.setAttribute(\"value\",\"\"),\"\"===a.firstChild.getAttribute(\"value\")})||jb(\"value\",function(a,b,c){return c||\"input\"!==a.nodeName.toLowerCase()?void 0:a.defaultValue}),ib(function(a){return null==a.getAttribute(\"disabled\")})||jb(L,function(a,b,c){var d;return c?void 0:a[b]===!0?b.toLowerCase():(d=a.getAttributeNode(b))&&d.specified?d.value:null}),fb}(a);n.find=t,n.expr=t.selectors,n.expr[\":\"]=n.expr.pseudos,n.unique=t.uniqueSort,n.text=t.getText,n.isXMLDoc=t.isXML,n.contains=t.contains;var u=n.expr.match.needsContext,v=/^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,w=/^.[^:#\\[\\.,]*$/;function x(a,b,c){if(n.isFunction(b))return n.grep(a,function(a,d){return!!b.call(a,d,a)!==c});if(b.nodeType)return n.grep(a,function(a){return a===b!==c});if(\"string\"==typeof b){if(w.test(b))return n.filter(b,a,c);b=n.filter(b,a)}return n.grep(a,function(a){return g.call(b,a)>=0!==c})}n.filter=function(a,b,c){var d=b[0];return c&&(a=\":not(\"+a+\")\"),1===b.length&&1===d.nodeType?n.find.matchesSelector(d,a)?[d]:[]:n.find.matches(a,n.grep(b,function(a){return 1===a.nodeType}))},n.fn.extend({find:function(a){var b,c=this.length,d=[],e=this;if(\"string\"!=typeof a)return this.pushStack(n(a).filter(function(){for(b=0;c>b;b++)if(n.contains(e[b],this))return!0}));for(b=0;c>b;b++)n.find(a,e[b],d);return d=this.pushStack(c>1?n.unique(d):d),d.selector=this.selector?this.selector+\" \"+a:a,d},filter:function(a){return this.pushStack(x(this,a||[],!1))},not:function(a){return this.pushStack(x(this,a||[],!0))},is:function(a){return!!x(this,\"string\"==typeof a&&u.test(a)?n(a):a||[],!1).length}});var y,z=/^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]*))$/,A=n.fn.init=function(a,b){var c,d;if(!a)return this;if(\"string\"==typeof a){if(c=\"<\"===a[0]&&\">\"===a[a.length-1]&&a.length>=3?[null,a,null]:z.exec(a),!c||!c[1]&&b)return!b||b.jquery?(b||y).find(a):this.constructor(b).find(a);if(c[1]){if(b=b instanceof n?b[0]:b,n.merge(this,n.parseHTML(c[1],b&&b.nodeType?b.ownerDocument||b:l,!0)),v.test(c[1])&&n.isPlainObject(b))for(c in b)n.isFunction(this[c])?this[c](b[c]):this.attr(c,b[c]);return this}return d=l.getElementById(c[2]),d&&d.parentNode&&(this.length=1,this[0]=d),this.context=l,this.selector=a,this}return a.nodeType?(this.context=this[0]=a,this.length=1,this):n.isFunction(a)?\"undefined\"!=typeof y.ready?y.ready(a):a(n):(void 0!==a.selector&&(this.selector=a.selector,this.context=a.context),n.makeArray(a,this))};A.prototype=n.fn,y=n(l);var B=/^(?:parents|prev(?:Until|All))/,C={children:!0,contents:!0,next:!0,prev:!0};n.extend({dir:function(a,b,c){var d=[],e=void 0!==c;while((a=a[b])&&9!==a.nodeType)if(1===a.nodeType){if(e&&n(a).is(c))break;d.push(a)}return d},sibling:function(a,b){for(var c=[];a;a=a.nextSibling)1===a.nodeType&&a!==b&&c.push(a);return c}}),n.fn.extend({has:function(a){var b=n(a,this),c=b.length;return this.filter(function(){for(var a=0;c>a;a++)if(n.contains(this,b[a]))return!0})},closest:function(a,b){for(var c,d=0,e=this.length,f=[],g=u.test(a)||\"string\"!=typeof a?n(a,b||this.context):0;e>d;d++)for(c=this[d];c&&c!==b;c=c.parentNode)if(c.nodeType<11&&(g?g.index(c)>-1:1===c.nodeType&&n.find.matchesSelector(c,a))){f.push(c);break}return this.pushStack(f.length>1?n.unique(f):f)},index:function(a){return a?\"string\"==typeof a?g.call(n(a),this[0]):g.call(this,a.jquery?a[0]:a):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(a,b){return this.pushStack(n.unique(n.merge(this.get(),n(a,b))))},addBack:function(a){return this.add(null==a?this.prevObject:this.prevObject.filter(a))}});function D(a,b){while((a=a[b])&&1!==a.nodeType);return a}n.each({parent:function(a){var b=a.parentNode;return b&&11!==b.nodeType?b:null},parents:function(a){return n.dir(a,\"parentNode\")},parentsUntil:function(a,b,c){return n.dir(a,\"parentNode\",c)},next:function(a){return D(a,\"nextSibling\")},prev:function(a){return D(a,\"previousSibling\")},nextAll:function(a){return n.dir(a,\"nextSibling\")},prevAll:function(a){return n.dir(a,\"previousSibling\")},nextUntil:function(a,b,c){return n.dir(a,\"nextSibling\",c)},prevUntil:function(a,b,c){return n.dir(a,\"previousSibling\",c)},siblings:function(a){return n.sibling((a.parentNode||{}).firstChild,a)},children:function(a){return n.sibling(a.firstChild)},contents:function(a){return a.contentDocument||n.merge([],a.childNodes)}},function(a,b){n.fn[a]=function(c,d){var e=n.map(this,b,c);return\"Until\"!==a.slice(-5)&&(d=c),d&&\"string\"==typeof d&&(e=n.filter(d,e)),this.length>1&&(C[a]||n.unique(e),B.test(a)&&e.reverse()),this.pushStack(e)}});var E=/\\S+/g,F={};function G(a){var b=F[a]={};return n.each(a.match(E)||[],function(a,c){b[c]=!0}),b}n.Callbacks=function(a){a=\"string\"==typeof a?F[a]||G(a):n.extend({},a);var b,c,d,e,f,g,h=[],i=!a.once&&[],j=function(l){for(b=a.memory&&l,c=!0,g=e||0,e=0,f=h.length,d=!0;h&&f>g;g++)if(h[g].apply(l[0],l[1])===!1&&a.stopOnFalse){b=!1;break}d=!1,h&&(i?i.length&&j(i.shift()):b?h=[]:k.disable())},k={add:function(){if(h){var c=h.length;!function g(b){n.each(b,function(b,c){var d=n.type(c);\"function\"===d?a.unique&&k.has(c)||h.push(c):c&&c.length&&\"string\"!==d&&g(c)})}(arguments),d?f=h.length:b&&(e=c,j(b))}return this},remove:function(){return h&&n.each(arguments,function(a,b){var c;while((c=n.inArray(b,h,c))>-1)h.splice(c,1),d&&(f>=c&&f--,g>=c&&g--)}),this},has:function(a){return a?n.inArray(a,h)>-1:!(!h||!h.length)},empty:function(){return h=[],f=0,this},disable:function(){return h=i=b=void 0,this},disabled:function(){return!h},lock:function(){return i=void 0,b||k.disable(),this},locked:function(){return!i},fireWith:function(a,b){return!h||c&&!i||(b=b||[],b=[a,b.slice?b.slice():b],d?i.push(b):j(b)),this},fire:function(){return k.fireWith(this,arguments),this},fired:function(){return!!c}};return k},n.extend({Deferred:function(a){var b=[[\"resolve\",\"done\",n.Callbacks(\"once memory\"),\"resolved\"],[\"reject\",\"fail\",n.Callbacks(\"once memory\"),\"rejected\"],[\"notify\",\"progress\",n.Callbacks(\"memory\")]],c=\"pending\",d={state:function(){return c},always:function(){return e.done(arguments).fail(arguments),this},then:function(){var a=arguments;return n.Deferred(function(c){n.each(b,function(b,f){var g=n.isFunction(a[b])&&a[b];e[f[1]](function(){var a=g&&g.apply(this,arguments);a&&n.isFunction(a.promise)?a.promise().done(c.resolve).fail(c.reject).progress(c.notify):c[f[0]+\"With\"](this===d?c.promise():this,g?[a]:arguments)})}),a=null}).promise()},promise:function(a){return null!=a?n.extend(a,d):d}},e={};return d.pipe=d.then,n.each(b,function(a,f){var g=f[2],h=f[3];d[f[1]]=g.add,h&&g.add(function(){c=h},b[1^a][2].disable,b[2][2].lock),e[f[0]]=function(){return e[f[0]+\"With\"](this===e?d:this,arguments),this},e[f[0]+\"With\"]=g.fireWith}),d.promise(e),a&&a.call(e,e),e},when:function(a){var b=0,c=d.call(arguments),e=c.length,f=1!==e||a&&n.isFunction(a.promise)?e:0,g=1===f?a:n.Deferred(),h=function(a,b,c){return function(e){b[a]=this,c[a]=arguments.length>1?d.call(arguments):e,c===i?g.notifyWith(b,c):--f||g.resolveWith(b,c)}},i,j,k;if(e>1)for(i=new Array(e),j=new Array(e),k=new Array(e);e>b;b++)c[b]&&n.isFunction(c[b].promise)?c[b].promise().done(h(b,k,c)).fail(g.reject).progress(h(b,j,i)):--f;return f||g.resolveWith(k,c),g.promise()}});var H;n.fn.ready=function(a){return n.ready.promise().done(a),this},n.extend({isReady:!1,readyWait:1,holdReady:function(a){a?n.readyWait++:n.ready(!0)},ready:function(a){(a===!0?--n.readyWait:n.isReady)||(n.isReady=!0,a!==!0&&--n.readyWait>0||(H.resolveWith(l,[n]),n.fn.triggerHandler&&(n(l).triggerHandler(\"ready\"),n(l).off(\"ready\"))))}});function I(){l.removeEventListener(\"DOMContentLoaded\",I,!1),a.removeEventListener(\"load\",I,!1),n.ready()}n.ready.promise=function(b){return H||(H=n.Deferred(),\"complete\"===l.readyState?setTimeout(n.ready):(l.addEventListener(\"DOMContentLoaded\",I,!1),a.addEventListener(\"load\",I,!1))),H.promise(b)},n.ready.promise();var J=n.access=function(a,b,c,d,e,f,g){var h=0,i=a.length,j=null==c;if(\"object\"===n.type(c)){e=!0;for(h in c)n.access(a,b,h,c[h],!0,f,g)}else if(void 0!==d&&(e=!0,n.isFunction(d)||(g=!0),j&&(g?(b.call(a,d),b=null):(j=b,b=function(a,b,c){return j.call(n(a),c)})),b))for(;i>h;h++)b(a[h],c,g?d:d.call(a[h],h,b(a[h],c)));return e?a:j?b.call(a):i?b(a[0],c):f};n.acceptData=function(a){return 1===a.nodeType||9===a.nodeType||!+a.nodeType};function K(){Object.defineProperty(this.cache={},0,{get:function(){return{}}}),this.expando=n.expando+Math.random()}K.uid=1,K.accepts=n.acceptData,K.prototype={key:function(a){if(!K.accepts(a))return 0;var b={},c=a[this.expando];if(!c){c=K.uid++;try{b[this.expando]={value:c},Object.defineProperties(a,b)}catch(d){b[this.expando]=c,n.extend(a,b)}}return this.cache[c]||(this.cache[c]={}),c},set:function(a,b,c){var d,e=this.key(a),f=this.cache[e];if(\"string\"==typeof b)f[b]=c;else if(n.isEmptyObject(f))n.extend(this.cache[e],b);else for(d in b)f[d]=b[d];return f},get:function(a,b){var c=this.cache[this.key(a)];return void 0===b?c:c[b]},access:function(a,b,c){var d;return void 0===b||b&&\"string\"==typeof b&&void 0===c?(d=this.get(a,b),void 0!==d?d:this.get(a,n.camelCase(b))):(this.set(a,b,c),void 0!==c?c:b)},remove:function(a,b){var c,d,e,f=this.key(a),g=this.cache[f];if(void 0===b)this.cache[f]={};else{n.isArray(b)?d=b.concat(b.map(n.camelCase)):(e=n.camelCase(b),b in g?d=[b,e]:(d=e,d=d in g?[d]:d.match(E)||[])),c=d.length;while(c--)delete g[d[c]]}},hasData:function(a){return!n.isEmptyObject(this.cache[a[this.expando]]||{})},discard:function(a){a[this.expando]&&delete this.cache[a[this.expando]]}};var L=new K,M=new K,N=/^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,O=/([A-Z])/g;function P(a,b,c){var d;if(void 0===c&&1===a.nodeType)if(d=\"data-\"+b.replace(O,\"-$1\").toLowerCase(),c=a.getAttribute(d),\"string\"==typeof c){try{c=\"true\"===c?!0:\"false\"===c?!1:\"null\"===c?null:+c+\"\"===c?+c:N.test(c)?n.parseJSON(c):c}catch(e){}M.set(a,b,c)}else c=void 0;return c}n.extend({hasData:function(a){return M.hasData(a)||L.hasData(a)},data:function(a,b,c){return M.access(a,b,c)},removeData:function(a,b){M.remove(a,b)\n    3  },_data:function(a,b,c){return L.access(a,b,c)},_removeData:function(a,b){L.remove(a,b)}}),n.fn.extend({data:function(a,b){var c,d,e,f=this[0],g=f&&f.attributes;if(void 0===a){if(this.length&&(e=M.get(f),1===f.nodeType&&!L.get(f,\"hasDataAttrs\"))){c=g.length;while(c--)g[c]&&(d=g[c].name,0===d.indexOf(\"data-\")&&(d=n.camelCase(d.slice(5)),P(f,d,e[d])));L.set(f,\"hasDataAttrs\",!0)}return e}return\"object\"==typeof a?this.each(function(){M.set(this,a)}):J(this,function(b){var c,d=n.camelCase(a);if(f&&void 0===b){if(c=M.get(f,a),void 0!==c)return c;if(c=M.get(f,d),void 0!==c)return c;if(c=P(f,d,void 0),void 0!==c)return c}else this.each(function(){var c=M.get(this,d);M.set(this,d,b),-1!==a.indexOf(\"-\")&&void 0!==c&&M.set(this,a,b)})},null,b,arguments.length>1,null,!0)},removeData:function(a){return this.each(function(){M.remove(this,a)})}}),n.extend({queue:function(a,b,c){var d;return a?(b=(b||\"fx\")+\"queue\",d=L.get(a,b),c&&(!d||n.isArray(c)?d=L.access(a,b,n.makeArray(c)):d.push(c)),d||[]):void 0},dequeue:function(a,b){b=b||\"fx\";var c=n.queue(a,b),d=c.length,e=c.shift(),f=n._queueHooks(a,b),g=function(){n.dequeue(a,b)};\"inprogress\"===e&&(e=c.shift(),d--),e&&(\"fx\"===b&&c.unshift(\"inprogress\"),delete f.stop,e.call(a,g,f)),!d&&f&&f.empty.fire()},_queueHooks:function(a,b){var c=b+\"queueHooks\";return L.get(a,c)||L.access(a,c,{empty:n.Callbacks(\"once memory\").add(function(){L.remove(a,[b+\"queue\",c])})})}}),n.fn.extend({queue:function(a,b){var c=2;return\"string\"!=typeof a&&(b=a,a=\"fx\",c--),arguments.length<c?n.queue(this[0],a):void 0===b?this:this.each(function(){var c=n.queue(this,a,b);n._queueHooks(this,a),\"fx\"===a&&\"inprogress\"!==c[0]&&n.dequeue(this,a)})},dequeue:function(a){return this.each(function(){n.dequeue(this,a)})},clearQueue:function(a){return this.queue(a||\"fx\",[])},promise:function(a,b){var c,d=1,e=n.Deferred(),f=this,g=this.length,h=function(){--d||e.resolveWith(f,[f])};\"string\"!=typeof a&&(b=a,a=void 0),a=a||\"fx\";while(g--)c=L.get(f[g],a+\"queueHooks\"),c&&c.empty&&(d++,c.empty.add(h));return h(),e.promise(b)}});var Q=/[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/.source,R=[\"Top\",\"Right\",\"Bottom\",\"Left\"],S=function(a,b){return a=b||a,\"none\"===n.css(a,\"display\")||!n.contains(a.ownerDocument,a)},T=/^(?:checkbox|radio)$/i;!function(){var a=l.createDocumentFragment(),b=a.appendChild(l.createElement(\"div\")),c=l.createElement(\"input\");c.setAttribute(\"type\",\"radio\"),c.setAttribute(\"checked\",\"checked\"),c.setAttribute(\"name\",\"t\"),b.appendChild(c),k.checkClone=b.cloneNode(!0).cloneNode(!0).lastChild.checked,b.innerHTML=\"<textarea>x</textarea>\",k.noCloneChecked=!!b.cloneNode(!0).lastChild.defaultValue}();var U=\"undefined\";k.focusinBubbles=\"onfocusin\"in a;var V=/^key/,W=/^(?:mouse|pointer|contextmenu)|click/,X=/^(?:focusinfocus|focusoutblur)$/,Y=/^([^.]*)(?:\\.(.+)|)$/;function Z(){return!0}function $(){return!1}function _(){try{return l.activeElement}catch(a){}}n.event={global:{},add:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,o,p,q,r=L.get(a);if(r){c.handler&&(f=c,c=f.handler,e=f.selector),c.guid||(c.guid=n.guid++),(i=r.events)||(i=r.events={}),(g=r.handle)||(g=r.handle=function(b){return typeof n!==U&&n.event.triggered!==b.type?n.event.dispatch.apply(a,arguments):void 0}),b=(b||\"\").match(E)||[\"\"],j=b.length;while(j--)h=Y.exec(b[j])||[],o=q=h[1],p=(h[2]||\"\").split(\".\").sort(),o&&(l=n.event.special[o]||{},o=(e?l.delegateType:l.bindType)||o,l=n.event.special[o]||{},k=n.extend({type:o,origType:q,data:d,handler:c,guid:c.guid,selector:e,needsContext:e&&n.expr.match.needsContext.test(e),namespace:p.join(\".\")},f),(m=i[o])||(m=i[o]=[],m.delegateCount=0,l.setup&&l.setup.call(a,d,p,g)!==!1||a.addEventListener&&a.addEventListener(o,g,!1)),l.add&&(l.add.call(a,k),k.handler.guid||(k.handler.guid=c.guid)),e?m.splice(m.delegateCount++,0,k):m.push(k),n.event.global[o]=!0)}},remove:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,o,p,q,r=L.hasData(a)&&L.get(a);if(r&&(i=r.events)){b=(b||\"\").match(E)||[\"\"],j=b.length;while(j--)if(h=Y.exec(b[j])||[],o=q=h[1],p=(h[2]||\"\").split(\".\").sort(),o){l=n.event.special[o]||{},o=(d?l.delegateType:l.bindType)||o,m=i[o]||[],h=h[2]&&new RegExp(\"(^|\\\\.)\"+p.join(\"\\\\.(?:.*\\\\.|)\")+\"(\\\\.|$)\"),g=f=m.length;while(f--)k=m[f],!e&&q!==k.origType||c&&c.guid!==k.guid||h&&!h.test(k.namespace)||d&&d!==k.selector&&(\"**\"!==d||!k.selector)||(m.splice(f,1),k.selector&&m.delegateCount--,l.remove&&l.remove.call(a,k));g&&!m.length&&(l.teardown&&l.teardown.call(a,p,r.handle)!==!1||n.removeEvent(a,o,r.handle),delete i[o])}else for(o in i)n.event.remove(a,o+b[j],c,d,!0);n.isEmptyObject(i)&&(delete r.handle,L.remove(a,\"events\"))}},trigger:function(b,c,d,e){var f,g,h,i,k,m,o,p=[d||l],q=j.call(b,\"type\")?b.type:b,r=j.call(b,\"namespace\")?b.namespace.split(\".\"):[];if(g=h=d=d||l,3!==d.nodeType&&8!==d.nodeType&&!X.test(q+n.event.triggered)&&(q.indexOf(\".\")>=0&&(r=q.split(\".\"),q=r.shift(),r.sort()),k=q.indexOf(\":\")<0&&\"on\"+q,b=b[n.expando]?b:new n.Event(q,\"object\"==typeof b&&b),b.isTrigger=e?2:3,b.namespace=r.join(\".\"),b.namespace_re=b.namespace?new RegExp(\"(^|\\\\.)\"+r.join(\"\\\\.(?:.*\\\\.|)\")+\"(\\\\.|$)\"):null,b.result=void 0,b.target||(b.target=d),c=null==c?[b]:n.makeArray(c,[b]),o=n.event.special[q]||{},e||!o.trigger||o.trigger.apply(d,c)!==!1)){if(!e&&!o.noBubble&&!n.isWindow(d)){for(i=o.delegateType||q,X.test(i+q)||(g=g.parentNode);g;g=g.parentNode)p.push(g),h=g;h===(d.ownerDocument||l)&&p.push(h.defaultView||h.parentWindow||a)}f=0;while((g=p[f++])&&!b.isPropagationStopped())b.type=f>1?i:o.bindType||q,m=(L.get(g,\"events\")||{})[b.type]&&L.get(g,\"handle\"),m&&m.apply(g,c),m=k&&g[k],m&&m.apply&&n.acceptData(g)&&(b.result=m.apply(g,c),b.result===!1&&b.preventDefault());return b.type=q,e||b.isDefaultPrevented()||o._default&&o._default.apply(p.pop(),c)!==!1||!n.acceptData(d)||k&&n.isFunction(d[q])&&!n.isWindow(d)&&(h=d[k],h&&(d[k]=null),n.event.triggered=q,d[q](),n.event.triggered=void 0,h&&(d[k]=h)),b.result}},dispatch:function(a){a=n.event.fix(a);var b,c,e,f,g,h=[],i=d.call(arguments),j=(L.get(this,\"events\")||{})[a.type]||[],k=n.event.special[a.type]||{};if(i[0]=a,a.delegateTarget=this,!k.preDispatch||k.preDispatch.call(this,a)!==!1){h=n.event.handlers.call(this,a,j),b=0;while((f=h[b++])&&!a.isPropagationStopped()){a.currentTarget=f.elem,c=0;while((g=f.handlers[c++])&&!a.isImmediatePropagationStopped())(!a.namespace_re||a.namespace_re.test(g.namespace))&&(a.handleObj=g,a.data=g.data,e=((n.event.special[g.origType]||{}).handle||g.handler).apply(f.elem,i),void 0!==e&&(a.result=e)===!1&&(a.preventDefault(),a.stopPropagation()))}return k.postDispatch&&k.postDispatch.call(this,a),a.result}},handlers:function(a,b){var c,d,e,f,g=[],h=b.delegateCount,i=a.target;if(h&&i.nodeType&&(!a.button||\"click\"!==a.type))for(;i!==this;i=i.parentNode||this)if(i.disabled!==!0||\"click\"!==a.type){for(d=[],c=0;h>c;c++)f=b[c],e=f.selector+\" \",void 0===d[e]&&(d[e]=f.needsContext?n(e,this).index(i)>=0:n.find(e,this,null,[i]).length),d[e]&&d.push(f);d.length&&g.push({elem:i,handlers:d})}return h<b.length&&g.push({elem:this,handlers:b.slice(h)}),g},props:\"altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which\".split(\" \"),fixHooks:{},keyHooks:{props:\"char charCode key keyCode\".split(\" \"),filter:function(a,b){return null==a.which&&(a.which=null!=b.charCode?b.charCode:b.keyCode),a}},mouseHooks:{props:\"button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement\".split(\" \"),filter:function(a,b){var c,d,e,f=b.button;return null==a.pageX&&null!=b.clientX&&(c=a.target.ownerDocument||l,d=c.documentElement,e=c.body,a.pageX=b.clientX+(d&&d.scrollLeft||e&&e.scrollLeft||0)-(d&&d.clientLeft||e&&e.clientLeft||0),a.pageY=b.clientY+(d&&d.scrollTop||e&&e.scrollTop||0)-(d&&d.clientTop||e&&e.clientTop||0)),a.which||void 0===f||(a.which=1&f?1:2&f?3:4&f?2:0),a}},fix:function(a){if(a[n.expando])return a;var b,c,d,e=a.type,f=a,g=this.fixHooks[e];g||(this.fixHooks[e]=g=W.test(e)?this.mouseHooks:V.test(e)?this.keyHooks:{}),d=g.props?this.props.concat(g.props):this.props,a=new n.Event(f),b=d.length;while(b--)c=d[b],a[c]=f[c];return a.target||(a.target=l),3===a.target.nodeType&&(a.target=a.target.parentNode),g.filter?g.filter(a,f):a},special:{load:{noBubble:!0},focus:{trigger:function(){return this!==_()&&this.focus?(this.focus(),!1):void 0},delegateType:\"focusin\"},blur:{trigger:function(){return this===_()&&this.blur?(this.blur(),!1):void 0},delegateType:\"focusout\"},click:{trigger:function(){return\"checkbox\"===this.type&&this.click&&n.nodeName(this,\"input\")?(this.click(),!1):void 0},_default:function(a){return n.nodeName(a.target,\"a\")}},beforeunload:{postDispatch:function(a){void 0!==a.result&&a.originalEvent&&(a.originalEvent.returnValue=a.result)}}},simulate:function(a,b,c,d){var e=n.extend(new n.Event,c,{type:a,isSimulated:!0,originalEvent:{}});d?n.event.trigger(e,null,b):n.event.dispatch.call(b,e),e.isDefaultPrevented()&&c.preventDefault()}},n.removeEvent=function(a,b,c){a.removeEventListener&&a.removeEventListener(b,c,!1)},n.Event=function(a,b){return this instanceof n.Event?(a&&a.type?(this.originalEvent=a,this.type=a.type,this.isDefaultPrevented=a.defaultPrevented||void 0===a.defaultPrevented&&a.returnValue===!1?Z:$):this.type=a,b&&n.extend(this,b),this.timeStamp=a&&a.timeStamp||n.now(),void(this[n.expando]=!0)):new n.Event(a,b)},n.Event.prototype={isDefaultPrevented:$,isPropagationStopped:$,isImmediatePropagationStopped:$,preventDefault:function(){var a=this.originalEvent;this.isDefaultPrevented=Z,a&&a.preventDefault&&a.preventDefault()},stopPropagation:function(){var a=this.originalEvent;this.isPropagationStopped=Z,a&&a.stopPropagation&&a.stopPropagation()},stopImmediatePropagation:function(){var a=this.originalEvent;this.isImmediatePropagationStopped=Z,a&&a.stopImmediatePropagation&&a.stopImmediatePropagation(),this.stopPropagation()}},n.each({mouseenter:\"mouseover\",mouseleave:\"mouseout\",pointerenter:\"pointerover\",pointerleave:\"pointerout\"},function(a,b){n.event.special[a]={delegateType:b,bindType:b,handle:function(a){var c,d=this,e=a.relatedTarget,f=a.handleObj;return(!e||e!==d&&!n.contains(d,e))&&(a.type=f.origType,c=f.handler.apply(this,arguments),a.type=b),c}}}),k.focusinBubbles||n.each({focus:\"focusin\",blur:\"focusout\"},function(a,b){var c=function(a){n.event.simulate(b,a.target,n.event.fix(a),!0)};n.event.special[b]={setup:function(){var d=this.ownerDocument||this,e=L.access(d,b);e||d.addEventListener(a,c,!0),L.access(d,b,(e||0)+1)},teardown:function(){var d=this.ownerDocument||this,e=L.access(d,b)-1;e?L.access(d,b,e):(d.removeEventListener(a,c,!0),L.remove(d,b))}}}),n.fn.extend({on:function(a,b,c,d,e){var f,g;if(\"object\"==typeof a){\"string\"!=typeof b&&(c=c||b,b=void 0);for(g in a)this.on(g,b,c,a[g],e);return this}if(null==c&&null==d?(d=b,c=b=void 0):null==d&&(\"string\"==typeof b?(d=c,c=void 0):(d=c,c=b,b=void 0)),d===!1)d=$;else if(!d)return this;return 1===e&&(f=d,d=function(a){return n().off(a),f.apply(this,arguments)},d.guid=f.guid||(f.guid=n.guid++)),this.each(function(){n.event.add(this,a,d,c,b)})},one:function(a,b,c,d){return this.on(a,b,c,d,1)},off:function(a,b,c){var d,e;if(a&&a.preventDefault&&a.handleObj)return d=a.handleObj,n(a.delegateTarget).off(d.namespace?d.origType+\".\"+d.namespace:d.origType,d.selector,d.handler),this;if(\"object\"==typeof a){for(e in a)this.off(e,b,a[e]);return this}return(b===!1||\"function\"==typeof b)&&(c=b,b=void 0),c===!1&&(c=$),this.each(function(){n.event.remove(this,a,c,b)})},trigger:function(a,b){return this.each(function(){n.event.trigger(a,b,this)})},triggerHandler:function(a,b){var c=this[0];return c?n.event.trigger(a,b,c,!0):void 0}});var ab=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi,bb=/<([\\w:]+)/,cb=/<|&#?\\w+;/,db=/<(?:script|style|link)/i,eb=/checked\\s*(?:[^=]|=\\s*.checked.)/i,fb=/^$|\\/(?:java|ecma)script/i,gb=/^true\\/(.*)/,hb=/^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g,ib={option:[1,\"<select multiple='multiple'>\",\"</select>\"],thead:[1,\"<table>\",\"</table>\"],col:[2,\"<table><colgroup>\",\"</colgroup></table>\"],tr:[2,\"<table><tbody>\",\"</tbody></table>\"],td:[3,\"<table><tbody><tr>\",\"</tr></tbody></table>\"],_default:[0,\"\",\"\"]};ib.optgroup=ib.option,ib.tbody=ib.tfoot=ib.colgroup=ib.caption=ib.thead,ib.th=ib.td;function jb(a,b){return n.nodeName(a,\"table\")&&n.nodeName(11!==b.nodeType?b:b.firstChild,\"tr\")?a.getElementsByTagName(\"tbody\")[0]||a.appendChild(a.ownerDocument.createElement(\"tbody\")):a}function kb(a){return a.type=(null!==a.getAttribute(\"type\"))+\"/\"+a.type,a}function lb(a){var b=gb.exec(a.type);return b?a.type=b[1]:a.removeAttribute(\"type\"),a}function mb(a,b){for(var c=0,d=a.length;d>c;c++)L.set(a[c],\"globalEval\",!b||L.get(b[c],\"globalEval\"))}function nb(a,b){var c,d,e,f,g,h,i,j;if(1===b.nodeType){if(L.hasData(a)&&(f=L.access(a),g=L.set(b,f),j=f.events)){delete g.handle,g.events={};for(e in j)for(c=0,d=j[e].length;d>c;c++)n.event.add(b,e,j[e][c])}M.hasData(a)&&(h=M.access(a),i=n.extend({},h),M.set(b,i))}}function ob(a,b){var c=a.getElementsByTagName?a.getElementsByTagName(b||\"*\"):a.querySelectorAll?a.querySelectorAll(b||\"*\"):[];return void 0===b||b&&n.nodeName(a,b)?n.merge([a],c):c}function pb(a,b){var c=b.nodeName.toLowerCase();\"input\"===c&&T.test(a.type)?b.checked=a.checked:(\"input\"===c||\"textarea\"===c)&&(b.defaultValue=a.defaultValue)}n.extend({clone:function(a,b,c){var d,e,f,g,h=a.cloneNode(!0),i=n.contains(a.ownerDocument,a);if(!(k.noCloneChecked||1!==a.nodeType&&11!==a.nodeType||n.isXMLDoc(a)))for(g=ob(h),f=ob(a),d=0,e=f.length;e>d;d++)pb(f[d],g[d]);if(b)if(c)for(f=f||ob(a),g=g||ob(h),d=0,e=f.length;e>d;d++)nb(f[d],g[d]);else nb(a,h);return g=ob(h,\"script\"),g.length>0&&mb(g,!i&&ob(a,\"script\")),h},buildFragment:function(a,b,c,d){for(var e,f,g,h,i,j,k=b.createDocumentFragment(),l=[],m=0,o=a.length;o>m;m++)if(e=a[m],e||0===e)if(\"object\"===n.type(e))n.merge(l,e.nodeType?[e]:e);else if(cb.test(e)){f=f||k.appendChild(b.createElement(\"div\")),g=(bb.exec(e)||[\"\",\"\"])[1].toLowerCase(),h=ib[g]||ib._default,f.innerHTML=h[1]+e.replace(ab,\"<$1></$2>\")+h[2],j=h[0];while(j--)f=f.lastChild;n.merge(l,f.childNodes),f=k.firstChild,f.textContent=\"\"}else l.push(b.createTextNode(e));k.textContent=\"\",m=0;while(e=l[m++])if((!d||-1===n.inArray(e,d))&&(i=n.contains(e.ownerDocument,e),f=ob(k.appendChild(e),\"script\"),i&&mb(f),c)){j=0;while(e=f[j++])fb.test(e.type||\"\")&&c.push(e)}return k},cleanData:function(a){for(var b,c,d,e,f=n.event.special,g=0;void 0!==(c=a[g]);g++){if(n.acceptData(c)&&(e=c[L.expando],e&&(b=L.cache[e]))){if(b.events)for(d in b.events)f[d]?n.event.remove(c,d):n.removeEvent(c,d,b.handle);L.cache[e]&&delete L.cache[e]}delete M.cache[c[M.expando]]}}}),n.fn.extend({text:function(a){return J(this,function(a){return void 0===a?n.text(this):this.empty().each(function(){(1===this.nodeType||11===this.nodeType||9===this.nodeType)&&(this.textContent=a)})},null,a,arguments.length)},append:function(){return this.domManip(arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=jb(this,a);b.appendChild(a)}})},prepend:function(){return this.domManip(arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=jb(this,a);b.insertBefore(a,b.firstChild)}})},before:function(){return this.domManip(arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this)})},after:function(){return this.domManip(arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this.nextSibling)})},remove:function(a,b){for(var c,d=a?n.filter(a,this):this,e=0;null!=(c=d[e]);e++)b||1!==c.nodeType||n.cleanData(ob(c)),c.parentNode&&(b&&n.contains(c.ownerDocument,c)&&mb(ob(c,\"script\")),c.parentNode.removeChild(c));return this},empty:function(){for(var a,b=0;null!=(a=this[b]);b++)1===a.nodeType&&(n.cleanData(ob(a,!1)),a.textContent=\"\");return this},clone:function(a,b){return a=null==a?!1:a,b=null==b?a:b,this.map(function(){return n.clone(this,a,b)})},html:function(a){return J(this,function(a){var b=this[0]||{},c=0,d=this.length;if(void 0===a&&1===b.nodeType)return b.innerHTML;if(\"string\"==typeof a&&!db.test(a)&&!ib[(bb.exec(a)||[\"\",\"\"])[1].toLowerCase()]){a=a.replace(ab,\"<$1></$2>\");try{for(;d>c;c++)b=this[c]||{},1===b.nodeType&&(n.cleanData(ob(b,!1)),b.innerHTML=a);b=0}catch(e){}}b&&this.empty().append(a)},null,a,arguments.length)},replaceWith:function(){var a=arguments[0];return this.domManip(arguments,function(b){a=this.parentNode,n.cleanData(ob(this)),a&&a.replaceChild(b,this)}),a&&(a.length||a.nodeType)?this:this.remove()},detach:function(a){return this.remove(a,!0)},domManip:function(a,b){a=e.apply([],a);var c,d,f,g,h,i,j=0,l=this.length,m=this,o=l-1,p=a[0],q=n.isFunction(p);if(q||l>1&&\"string\"==typeof p&&!k.checkClone&&eb.test(p))return this.each(function(c){var d=m.eq(c);q&&(a[0]=p.call(this,c,d.html())),d.domManip(a,b)});if(l&&(c=n.buildFragment(a,this[0].ownerDocument,!1,this),d=c.firstChild,1===c.childNodes.length&&(c=d),d)){for(f=n.map(ob(c,\"script\"),kb),g=f.length;l>j;j++)h=c,j!==o&&(h=n.clone(h,!0,!0),g&&n.merge(f,ob(h,\"script\"))),b.call(this[j],h,j);if(g)for(i=f[f.length-1].ownerDocument,n.map(f,lb),j=0;g>j;j++)h=f[j],fb.test(h.type||\"\")&&!L.access(h,\"globalEval\")&&n.contains(i,h)&&(h.src?n._evalUrl&&n._evalUrl(h.src):n.globalEval(h.textContent.replace(hb,\"\")))}return this}}),n.each({appendTo:\"append\",prependTo:\"prepend\",insertBefore:\"before\",insertAfter:\"after\",replaceAll:\"replaceWith\"},function(a,b){n.fn[a]=function(a){for(var c,d=[],e=n(a),g=e.length-1,h=0;g>=h;h++)c=h===g?this:this.clone(!0),n(e[h])[b](c),f.apply(d,c.get());return this.pushStack(d)}});var qb,rb={};function sb(b,c){var d,e=n(c.createElement(b)).appendTo(c.body),f=a.getDefaultComputedStyle&&(d=a.getDefaultComputedStyle(e[0]))?d.display:n.css(e[0],\"display\");return e.detach(),f}function tb(a){var b=l,c=rb[a];return c||(c=sb(a,b),\"none\"!==c&&c||(qb=(qb||n(\"<iframe frameborder='0' width='0' height='0'/>\")).appendTo(b.documentElement),b=qb[0].contentDocument,b.write(),b.close(),c=sb(a,b),qb.detach()),rb[a]=c),c}var ub=/^margin/,vb=new RegExp(\"^(\"+Q+\")(?!px)[a-z%]+$\",\"i\"),wb=function(a){return a.ownerDocument.defaultView.getComputedStyle(a,null)};function xb(a,b,c){var d,e,f,g,h=a.style;return c=c||wb(a),c&&(g=c.getPropertyValue(b)||c[b]),c&&(\"\"!==g||n.contains(a.ownerDocument,a)||(g=n.style(a,b)),vb.test(g)&&ub.test(b)&&(d=h.width,e=h.minWidth,f=h.maxWidth,h.minWidth=h.maxWidth=h.width=g,g=c.width,h.width=d,h.minWidth=e,h.maxWidth=f)),void 0!==g?g+\"\":g}function yb(a,b){return{get:function(){return a()?void delete this.get:(this.get=b).apply(this,arguments)}}}!function(){var b,c,d=l.documentElement,e=l.createElement(\"div\"),f=l.createElement(\"div\");if(f.style){f.style.backgroundClip=\"content-box\",f.cloneNode(!0).style.backgroundClip=\"\",k.clearCloneStyle=\"content-box\"===f.style.backgroundClip,e.style.cssText=\"border:0;width:0;height:0;top:0;left:-9999px;margin-top:1px;position:absolute\",e.appendChild(f);function g(){f.style.cssText=\"-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;display:block;margin-top:1%;top:1%;border:1px;padding:1px;width:4px;position:absolute\",f.innerHTML=\"\",d.appendChild(e);var g=a.getComputedStyle(f,null);b=\"1%\"!==g.top,c=\"4px\"===g.width,d.removeChild(e)}a.getComputedStyle&&n.extend(k,{pixelPosition:function(){return g(),b},boxSizingReliable:function(){return null==c&&g(),c},reliableMarginRight:function(){var b,c=f.appendChild(l.createElement(\"div\"));return c.style.cssText=f.style.cssText=\"-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0\",c.style.marginRight=c.style.width=\"0\",f.style.width=\"1px\",d.appendChild(e),b=!parseFloat(a.getComputedStyle(c,null).marginRight),d.removeChild(e),b}})}}(),n.swap=function(a,b,c,d){var e,f,g={};for(f in b)g[f]=a.style[f],a.style[f]=b[f];e=c.apply(a,d||[]);for(f in b)a.style[f]=g[f];return e};var zb=/^(none|table(?!-c[ea]).+)/,Ab=new RegExp(\"^(\"+Q+\")(.*)$\",\"i\"),Bb=new RegExp(\"^([+-])=(\"+Q+\")\",\"i\"),Cb={position:\"absolute\",visibility:\"hidden\",display:\"block\"},Db={letterSpacing:\"0\",fontWeight:\"400\"},Eb=[\"Webkit\",\"O\",\"Moz\",\"ms\"];function Fb(a,b){if(b in a)return b;var c=b[0].toUpperCase()+b.slice(1),d=b,e=Eb.length;while(e--)if(b=Eb[e]+c,b in a)return b;return d}function Gb(a,b,c){var d=Ab.exec(b);return d?Math.max(0,d[1]-(c||0))+(d[2]||\"px\"):b}function Hb(a,b,c,d,e){for(var f=c===(d?\"border\":\"content\")?4:\"width\"===b?1:0,g=0;4>f;f+=2)\"margin\"===c&&(g+=n.css(a,c+R[f],!0,e)),d?(\"content\"===c&&(g-=n.css(a,\"padding\"+R[f],!0,e)),\"margin\"!==c&&(g-=n.css(a,\"border\"+R[f]+\"Width\",!0,e))):(g+=n.css(a,\"padding\"+R[f],!0,e),\"padding\"!==c&&(g+=n.css(a,\"border\"+R[f]+\"Width\",!0,e)));return g}function Ib(a,b,c){var d=!0,e=\"width\"===b?a.offsetWidth:a.offsetHeight,f=wb(a),g=\"border-box\"===n.css(a,\"boxSizing\",!1,f);if(0>=e||null==e){if(e=xb(a,b,f),(0>e||null==e)&&(e=a.style[b]),vb.test(e))return e;d=g&&(k.boxSizingReliable()||e===a.style[b]),e=parseFloat(e)||0}return e+Hb(a,b,c||(g?\"border\":\"content\"),d,f)+\"px\"}function Jb(a,b){for(var c,d,e,f=[],g=0,h=a.length;h>g;g++)d=a[g],d.style&&(f[g]=L.get(d,\"olddisplay\"),c=d.style.display,b?(f[g]||\"none\"!==c||(d.style.display=\"\"),\"\"===d.style.display&&S(d)&&(f[g]=L.access(d,\"olddisplay\",tb(d.nodeName)))):(e=S(d),\"none\"===c&&e||L.set(d,\"olddisplay\",e?c:n.css(d,\"display\"))));for(g=0;h>g;g++)d=a[g],d.style&&(b&&\"none\"!==d.style.display&&\"\"!==d.style.display||(d.style.display=b?f[g]||\"\":\"none\"));return a}n.extend({cssHooks:{opacity:{get:function(a,b){if(b){var c=xb(a,\"opacity\");return\"\"===c?\"1\":c}}}},cssNumber:{columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{\"float\":\"cssFloat\"},style:function(a,b,c,d){if(a&&3!==a.nodeType&&8!==a.nodeType&&a.style){var e,f,g,h=n.camelCase(b),i=a.style;return b=n.cssProps[h]||(n.cssProps[h]=Fb(i,h)),g=n.cssHooks[b]||n.cssHooks[h],void 0===c?g&&\"get\"in g&&void 0!==(e=g.get(a,!1,d))?e:i[b]:(f=typeof c,\"string\"===f&&(e=Bb.exec(c))&&(c=(e[1]+1)*e[2]+parseFloat(n.css(a,b)),f=\"number\"),null!=c&&c===c&&(\"number\"!==f||n.cssNumber[h]||(c+=\"px\"),k.clearCloneStyle||\"\"!==c||0!==b.indexOf(\"background\")||(i[b]=\"inherit\"),g&&\"set\"in g&&void 0===(c=g.set(a,c,d))||(i[b]=c)),void 0)}},css:function(a,b,c,d){var e,f,g,h=n.camelCase(b);return b=n.cssProps[h]||(n.cssProps[h]=Fb(a.style,h)),g=n.cssHooks[b]||n.cssHooks[h],g&&\"get\"in g&&(e=g.get(a,!0,c)),void 0===e&&(e=xb(a,b,d)),\"normal\"===e&&b in Db&&(e=Db[b]),\"\"===c||c?(f=parseFloat(e),c===!0||n.isNumeric(f)?f||0:e):e}}),n.each([\"height\",\"width\"],function(a,b){n.cssHooks[b]={get:function(a,c,d){return c?zb.test(n.css(a,\"display\"))&&0===a.offsetWidth?n.swap(a,Cb,function(){return Ib(a,b,d)}):Ib(a,b,d):void 0},set:function(a,c,d){var e=d&&wb(a);return Gb(a,c,d?Hb(a,b,d,\"border-box\"===n.css(a,\"boxSizing\",!1,e),e):0)}}}),n.cssHooks.marginRight=yb(k.reliableMarginRight,function(a,b){return b?n.swap(a,{display:\"inline-block\"},xb,[a,\"marginRight\"]):void 0}),n.each({margin:\"\",padding:\"\",border:\"Width\"},function(a,b){n.cssHooks[a+b]={expand:function(c){for(var d=0,e={},f=\"string\"==typeof c?c.split(\" \"):[c];4>d;d++)e[a+R[d]+b]=f[d]||f[d-2]||f[0];return e}},ub.test(a)||(n.cssHooks[a+b].set=Gb)}),n.fn.extend({css:function(a,b){return J(this,function(a,b,c){var d,e,f={},g=0;if(n.isArray(b)){for(d=wb(a),e=b.length;e>g;g++)f[b[g]]=n.css(a,b[g],!1,d);return f}return void 0!==c?n.style(a,b,c):n.css(a,b)},a,b,arguments.length>1)},show:function(){return Jb(this,!0)},hide:function(){return Jb(this)},toggle:function(a){return\"boolean\"==typeof a?a?this.show():this.hide():this.each(function(){S(this)?n(this).show():n(this).hide()})}});function Kb(a,b,c,d,e){return new Kb.prototype.init(a,b,c,d,e)}n.Tween=Kb,Kb.prototype={constructor:Kb,init:function(a,b,c,d,e,f){this.elem=a,this.prop=c,this.easing=e||\"swing\",this.options=b,this.start=this.now=this.cur(),this.end=d,this.unit=f||(n.cssNumber[c]?\"\":\"px\")},cur:function(){var a=Kb.propHooks[this.prop];return a&&a.get?a.get(this):Kb.propHooks._default.get(this)},run:function(a){var b,c=Kb.propHooks[this.prop];return this.pos=b=this.options.duration?n.easing[this.easing](a,this.options.duration*a,0,1,this.options.duration):a,this.now=(this.end-this.start)*b+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),c&&c.set?c.set(this):Kb.propHooks._default.set(this),this}},Kb.prototype.init.prototype=Kb.prototype,Kb.propHooks={_default:{get:function(a){var b;return null==a.elem[a.prop]||a.elem.style&&null!=a.elem.style[a.prop]?(b=n.css(a.elem,a.prop,\"\"),b&&\"auto\"!==b?b:0):a.elem[a.prop]},set:function(a){n.fx.step[a.prop]?n.fx.step[a.prop](a):a.elem.style&&(null!=a.elem.style[n.cssProps[a.prop]]||n.cssHooks[a.prop])?n.style(a.elem,a.prop,a.now+a.unit):a.elem[a.prop]=a.now}}},Kb.propHooks.scrollTop=Kb.propHooks.scrollLeft={set:function(a){a.elem.nodeType&&a.elem.parentNode&&(a.elem[a.prop]=a.now)}},n.easing={linear:function(a){return a},swing:function(a){return.5-Math.cos(a*Math.PI)/2}},n.fx=Kb.prototype.init,n.fx.step={};var Lb,Mb,Nb=/^(?:toggle|show|hide)$/,Ob=new RegExp(\"^(?:([+-])=|)(\"+Q+\")([a-z%]*)$\",\"i\"),Pb=/queueHooks$/,Qb=[Vb],Rb={\"*\":[function(a,b){var c=this.createTween(a,b),d=c.cur(),e=Ob.exec(b),f=e&&e[3]||(n.cssNumber[a]?\"\":\"px\"),g=(n.cssNumber[a]||\"px\"!==f&&+d)&&Ob.exec(n.css(c.elem,a)),h=1,i=20;if(g&&g[3]!==f){f=f||g[3],e=e||[],g=+d||1;do h=h||\".5\",g/=h,n.style(c.elem,a,g+f);while(h!==(h=c.cur()/d)&&1!==h&&--i)}return e&&(g=c.start=+g||+d||0,c.unit=f,c.end=e[1]?g+(e[1]+1)*e[2]:+e[2]),c}]};function Sb(){return setTimeout(function(){Lb=void 0}),Lb=n.now()}function Tb(a,b){var c,d=0,e={height:a};for(b=b?1:0;4>d;d+=2-b)c=R[d],e[\"margin\"+c]=e[\"padding\"+c]=a;return b&&(e.opacity=e.width=a),e}function Ub(a,b,c){for(var d,e=(Rb[b]||[]).concat(Rb[\"*\"]),f=0,g=e.length;g>f;f++)if(d=e[f].call(c,b,a))return d}function Vb(a,b,c){var d,e,f,g,h,i,j,k,l=this,m={},o=a.style,p=a.nodeType&&S(a),q=L.get(a,\"fxshow\");c.queue||(h=n._queueHooks(a,\"fx\"),null==h.unqueued&&(h.unqueued=0,i=h.empty.fire,h.empty.fire=function(){h.unqueued||i()}),h.unqueued++,l.always(function(){l.always(function(){h.unqueued--,n.queue(a,\"fx\").length||h.empty.fire()})})),1===a.nodeType&&(\"height\"in b||\"width\"in b)&&(c.overflow=[o.overflow,o.overflowX,o.overflowY],j=n.css(a,\"display\"),k=\"none\"===j?L.get(a,\"olddisplay\")||tb(a.nodeName):j,\"inline\"===k&&\"none\"===n.css(a,\"float\")&&(o.display=\"inline-block\")),c.overflow&&(o.overflow=\"hidden\",l.always(function(){o.overflow=c.overflow[0],o.overflowX=c.overflow[1],o.overflowY=c.overflow[2]}));for(d in b)if(e=b[d],Nb.exec(e)){if(delete b[d],f=f||\"toggle\"===e,e===(p?\"hide\":\"show\")){if(\"show\"!==e||!q||void 0===q[d])continue;p=!0}m[d]=q&&q[d]||n.style(a,d)}else j=void 0;if(n.isEmptyObject(m))\"inline\"===(\"none\"===j?tb(a.nodeName):j)&&(o.display=j);else{q?\"hidden\"in q&&(p=q.hidden):q=L.access(a,\"fxshow\",{}),f&&(q.hidden=!p),p?n(a).show():l.done(function(){n(a).hide()}),l.done(function(){var b;L.remove(a,\"fxshow\");for(b in m)n.style(a,b,m[b])});for(d in m)g=Ub(p?q[d]:0,d,l),d in q||(q[d]=g.start,p&&(g.end=g.start,g.start=\"width\"===d||\"height\"===d?1:0))}}function Wb(a,b){var c,d,e,f,g;for(c in a)if(d=n.camelCase(c),e=b[d],f=a[c],n.isArray(f)&&(e=f[1],f=a[c]=f[0]),c!==d&&(a[d]=f,delete a[c]),g=n.cssHooks[d],g&&\"expand\"in g){f=g.expand(f),delete a[d];for(c in f)c in a||(a[c]=f[c],b[c]=e)}else b[d]=e}function Xb(a,b,c){var d,e,f=0,g=Qb.length,h=n.Deferred().always(function(){delete i.elem}),i=function(){if(e)return!1;for(var b=Lb||Sb(),c=Math.max(0,j.startTime+j.duration-b),d=c/j.duration||0,f=1-d,g=0,i=j.tweens.length;i>g;g++)j.tweens[g].run(f);return h.notifyWith(a,[j,f,c]),1>f&&i?c:(h.resolveWith(a,[j]),!1)},j=h.promise({elem:a,props:n.extend({},b),opts:n.extend(!0,{specialEasing:{}},c),originalProperties:b,originalOptions:c,startTime:Lb||Sb(),duration:c.duration,tweens:[],createTween:function(b,c){var d=n.Tween(a,j.opts,b,c,j.opts.specialEasing[b]||j.opts.easing);return j.tweens.push(d),d},stop:function(b){var c=0,d=b?j.tweens.length:0;if(e)return this;for(e=!0;d>c;c++)j.tweens[c].run(1);return b?h.resolveWith(a,[j,b]):h.rejectWith(a,[j,b]),this}}),k=j.props;for(Wb(k,j.opts.specialEasing);g>f;f++)if(d=Qb[f].call(j,a,k,j.opts))return d;return n.map(k,Ub,j),n.isFunction(j.opts.start)&&j.opts.start.call(a,j),n.fx.timer(n.extend(i,{elem:a,anim:j,queue:j.opts.queue})),j.progress(j.opts.progress).done(j.opts.done,j.opts.complete).fail(j.opts.fail).always(j.opts.always)}n.Animation=n.extend(Xb,{tweener:function(a,b){n.isFunction(a)?(b=a,a=[\"*\"]):a=a.split(\" \");for(var c,d=0,e=a.length;e>d;d++)c=a[d],Rb[c]=Rb[c]||[],Rb[c].unshift(b)},prefilter:function(a,b){b?Qb.unshift(a):Qb.push(a)}}),n.speed=function(a,b,c){var d=a&&\"object\"==typeof a?n.extend({},a):{complete:c||!c&&b||n.isFunction(a)&&a,duration:a,easing:c&&b||b&&!n.isFunction(b)&&b};return d.duration=n.fx.off?0:\"number\"==typeof d.duration?d.duration:d.duration in n.fx.speeds?n.fx.speeds[d.duration]:n.fx.speeds._default,(null==d.queue||d.queue===!0)&&(d.queue=\"fx\"),d.old=d.complete,d.complete=function(){n.isFunction(d.old)&&d.old.call(this),d.queue&&n.dequeue(this,d.queue)},d},n.fn.extend({fadeTo:function(a,b,c,d){return this.filter(S).css(\"opacity\",0).show().end().animate({opacity:b},a,c,d)},animate:function(a,b,c,d){var e=n.isEmptyObject(a),f=n.speed(b,c,d),g=function(){var b=Xb(this,n.extend({},a),f);(e||L.get(this,\"finish\"))&&b.stop(!0)};return g.finish=g,e||f.queue===!1?this.each(g):this.queue(f.queue,g)},stop:function(a,b,c){var d=function(a){var b=a.stop;delete a.stop,b(c)};return\"string\"!=typeof a&&(c=b,b=a,a=void 0),b&&a!==!1&&this.queue(a||\"fx\",[]),this.each(function(){var b=!0,e=null!=a&&a+\"queueHooks\",f=n.timers,g=L.get(this);if(e)g[e]&&g[e].stop&&d(g[e]);else for(e in g)g[e]&&g[e].stop&&Pb.test(e)&&d(g[e]);for(e=f.length;e--;)f[e].elem!==this||null!=a&&f[e].queue!==a||(f[e].anim.stop(c),b=!1,f.splice(e,1));(b||!c)&&n.dequeue(this,a)})},finish:function(a){return a!==!1&&(a=a||\"fx\"),this.each(function(){var b,c=L.get(this),d=c[a+\"queue\"],e=c[a+\"queueHooks\"],f=n.timers,g=d?d.length:0;for(c.finish=!0,n.queue(this,a,[]),e&&e.stop&&e.stop.call(this,!0),b=f.length;b--;)f[b].elem===this&&f[b].queue===a&&(f[b].anim.stop(!0),f.splice(b,1));for(b=0;g>b;b++)d[b]&&d[b].finish&&d[b].finish.call(this);delete c.finish})}}),n.each([\"toggle\",\"show\",\"hide\"],function(a,b){var c=n.fn[b];n.fn[b]=function(a,d,e){return null==a||\"boolean\"==typeof a?c.apply(this,arguments):this.animate(Tb(b,!0),a,d,e)}}),n.each({slideDown:Tb(\"show\"),slideUp:Tb(\"hide\"),slideToggle:Tb(\"toggle\"),fadeIn:{opacity:\"show\"},fadeOut:{opacity:\"hide\"},fadeToggle:{opacity:\"toggle\"}},function(a,b){n.fn[a]=function(a,c,d){return this.animate(b,a,c,d)}}),n.timers=[],n.fx.tick=function(){var a,b=0,c=n.timers;for(Lb=n.now();b<c.length;b++)a=c[b],a()||c[b]!==a||c.splice(b--,1);c.length||n.fx.stop(),Lb=void 0},n.fx.timer=function(a){n.timers.push(a),a()?n.fx.start():n.timers.pop()},n.fx.interval=13,n.fx.start=function(){Mb||(Mb=setInterval(n.fx.tick,n.fx.interval))},n.fx.stop=function(){clearInterval(Mb),Mb=null},n.fx.speeds={slow:600,fast:200,_default:400},n.fn.delay=function(a,b){return a=n.fx?n.fx.speeds[a]||a:a,b=b||\"fx\",this.queue(b,function(b,c){var d=setTimeout(b,a);c.stop=function(){clearTimeout(d)}})},function(){var a=l.createElement(\"input\"),b=l.createElement(\"select\"),c=b.appendChild(l.createElement(\"option\"));a.type=\"checkbox\",k.checkOn=\"\"!==a.value,k.optSelected=c.selected,b.disabled=!0,k.optDisabled=!c.disabled,a=l.createElement(\"input\"),a.value=\"t\",a.type=\"radio\",k.radioValue=\"t\"===a.value}();var Yb,Zb,$b=n.expr.attrHandle;n.fn.extend({attr:function(a,b){return J(this,n.attr,a,b,arguments.length>1)},removeAttr:function(a){return this.each(function(){n.removeAttr(this,a)})}}),n.extend({attr:function(a,b,c){var d,e,f=a.nodeType;if(a&&3!==f&&8!==f&&2!==f)return typeof a.getAttribute===U?n.prop(a,b,c):(1===f&&n.isXMLDoc(a)||(b=b.toLowerCase(),d=n.attrHooks[b]||(n.expr.match.bool.test(b)?Zb:Yb)),void 0===c?d&&\"get\"in d&&null!==(e=d.get(a,b))?e:(e=n.find.attr(a,b),null==e?void 0:e):null!==c?d&&\"set\"in d&&void 0!==(e=d.set(a,c,b))?e:(a.setAttribute(b,c+\"\"),c):void n.removeAttr(a,b))\n    4: },removeAttr:function(a,b){var c,d,e=0,f=b&&b.match(E);if(f&&1===a.nodeType)while(c=f[e++])d=n.propFix[c]||c,n.expr.match.bool.test(c)&&(a[d]=!1),a.removeAttribute(c)},attrHooks:{type:{set:function(a,b){if(!k.radioValue&&\"radio\"===b&&n.nodeName(a,\"input\")){var c=a.value;return a.setAttribute(\"type\",b),c&&(a.value=c),b}}}}}),Zb={set:function(a,b,c){return b===!1?n.removeAttr(a,c):a.setAttribute(c,c),c}},n.each(n.expr.match.bool.source.match(/\\w+/g),function(a,b){var c=$b[b]||n.find.attr;$b[b]=function(a,b,d){var e,f;return d||(f=$b[b],$b[b]=e,e=null!=c(a,b,d)?b.toLowerCase():null,$b[b]=f),e}});var _b=/^(?:input|select|textarea|button)$/i;n.fn.extend({prop:function(a,b){return J(this,n.prop,a,b,arguments.length>1)},removeProp:function(a){return this.each(function(){delete this[n.propFix[a]||a]})}}),n.extend({propFix:{\"for\":\"htmlFor\",\"class\":\"className\"},prop:function(a,b,c){var d,e,f,g=a.nodeType;if(a&&3!==g&&8!==g&&2!==g)return f=1!==g||!n.isXMLDoc(a),f&&(b=n.propFix[b]||b,e=n.propHooks[b]),void 0!==c?e&&\"set\"in e&&void 0!==(d=e.set(a,c,b))?d:a[b]=c:e&&\"get\"in e&&null!==(d=e.get(a,b))?d:a[b]},propHooks:{tabIndex:{get:function(a){return a.hasAttribute(\"tabindex\")||_b.test(a.nodeName)||a.href?a.tabIndex:-1}}}}),k.optSelected||(n.propHooks.selected={get:function(a){var b=a.parentNode;return b&&b.parentNode&&b.parentNode.selectedIndex,null}}),n.each([\"tabIndex\",\"readOnly\",\"maxLength\",\"cellSpacing\",\"cellPadding\",\"rowSpan\",\"colSpan\",\"useMap\",\"frameBorder\",\"contentEditable\"],function(){n.propFix[this.toLowerCase()]=this});var ac=/[\\t\\r\\n\\f]/g;n.fn.extend({addClass:function(a){var b,c,d,e,f,g,h=\"string\"==typeof a&&a,i=0,j=this.length;if(n.isFunction(a))return this.each(function(b){n(this).addClass(a.call(this,b,this.className))});if(h)for(b=(a||\"\").match(E)||[];j>i;i++)if(c=this[i],d=1===c.nodeType&&(c.className?(\" \"+c.className+\" \").replace(ac,\" \"):\" \")){f=0;while(e=b[f++])d.indexOf(\" \"+e+\" \")<0&&(d+=e+\" \");g=n.trim(d),c.className!==g&&(c.className=g)}return this},removeClass:function(a){var b,c,d,e,f,g,h=0===arguments.length||\"string\"==typeof a&&a,i=0,j=this.length;if(n.isFunction(a))return this.each(function(b){n(this).removeClass(a.call(this,b,this.className))});if(h)for(b=(a||\"\").match(E)||[];j>i;i++)if(c=this[i],d=1===c.nodeType&&(c.className?(\" \"+c.className+\" \").replace(ac,\" \"):\"\")){f=0;while(e=b[f++])while(d.indexOf(\" \"+e+\" \")>=0)d=d.replace(\" \"+e+\" \",\" \");g=a?n.trim(d):\"\",c.className!==g&&(c.className=g)}return this},toggleClass:function(a,b){var c=typeof a;return\"boolean\"==typeof b&&\"string\"===c?b?this.addClass(a):this.removeClass(a):this.each(n.isFunction(a)?function(c){n(this).toggleClass(a.call(this,c,this.className,b),b)}:function(){if(\"string\"===c){var b,d=0,e=n(this),f=a.match(E)||[];while(b=f[d++])e.hasClass(b)?e.removeClass(b):e.addClass(b)}else(c===U||\"boolean\"===c)&&(this.className&&L.set(this,\"__className__\",this.className),this.className=this.className||a===!1?\"\":L.get(this,\"__className__\")||\"\")})},hasClass:function(a){for(var b=\" \"+a+\" \",c=0,d=this.length;d>c;c++)if(1===this[c].nodeType&&(\" \"+this[c].className+\" \").replace(ac,\" \").indexOf(b)>=0)return!0;return!1}});var bc=/\\r/g;n.fn.extend({val:function(a){var b,c,d,e=this[0];{if(arguments.length)return d=n.isFunction(a),this.each(function(c){var e;1===this.nodeType&&(e=d?a.call(this,c,n(this).val()):a,null==e?e=\"\":\"number\"==typeof e?e+=\"\":n.isArray(e)&&(e=n.map(e,function(a){return null==a?\"\":a+\"\"})),b=n.valHooks[this.type]||n.valHooks[this.nodeName.toLowerCase()],b&&\"set\"in b&&void 0!==b.set(this,e,\"value\")||(this.value=e))});if(e)return b=n.valHooks[e.type]||n.valHooks[e.nodeName.toLowerCase()],b&&\"get\"in b&&void 0!==(c=b.get(e,\"value\"))?c:(c=e.value,\"string\"==typeof c?c.replace(bc,\"\"):null==c?\"\":c)}}}),n.extend({valHooks:{option:{get:function(a){var b=n.find.attr(a,\"value\");return null!=b?b:n.trim(n.text(a))}},select:{get:function(a){for(var b,c,d=a.options,e=a.selectedIndex,f=\"select-one\"===a.type||0>e,g=f?null:[],h=f?e+1:d.length,i=0>e?h:f?e:0;h>i;i++)if(c=d[i],!(!c.selected&&i!==e||(k.optDisabled?c.disabled:null!==c.getAttribute(\"disabled\"))||c.parentNode.disabled&&n.nodeName(c.parentNode,\"optgroup\"))){if(b=n(c).val(),f)return b;g.push(b)}return g},set:function(a,b){var c,d,e=a.options,f=n.makeArray(b),g=e.length;while(g--)d=e[g],(d.selected=n.inArray(d.value,f)>=0)&&(c=!0);return c||(a.selectedIndex=-1),f}}}}),n.each([\"radio\",\"checkbox\"],function(){n.valHooks[this]={set:function(a,b){return n.isArray(b)?a.checked=n.inArray(n(a).val(),b)>=0:void 0}},k.checkOn||(n.valHooks[this].get=function(a){return null===a.getAttribute(\"value\")?\"on\":a.value})}),n.each(\"blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu\".split(\" \"),function(a,b){n.fn[b]=function(a,c){return arguments.length>0?this.on(b,null,a,c):this.trigger(b)}}),n.fn.extend({hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)},bind:function(a,b,c){return this.on(a,null,b,c)},unbind:function(a,b){return this.off(a,null,b)},delegate:function(a,b,c,d){return this.on(b,a,c,d)},undelegate:function(a,b,c){return 1===arguments.length?this.off(a,\"**\"):this.off(b,a||\"**\",c)}});var cc=n.now(),dc=/\\?/;n.parseJSON=function(a){return JSON.parse(a+\"\")},n.parseXML=function(a){var b,c;if(!a||\"string\"!=typeof a)return null;try{c=new DOMParser,b=c.parseFromString(a,\"text/xml\")}catch(d){b=void 0}return(!b||b.getElementsByTagName(\"parsererror\").length)&&n.error(\"Invalid XML: \"+a),b};var ec,fc,gc=/#.*$/,hc=/([?&])_=[^&]*/,ic=/^(.*?):[ \\t]*([^\\r\\n]*)$/gm,jc=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,kc=/^(?:GET|HEAD)$/,lc=/^\\/\\//,mc=/^([\\w.+-]+:)(?:\\/\\/(?:[^\\/?#]*@|)([^\\/?#:]*)(?::(\\d+)|)|)/,nc={},oc={},pc=\"*/\".concat(\"*\");try{fc=location.href}catch(qc){fc=l.createElement(\"a\"),fc.href=\"\",fc=fc.href}ec=mc.exec(fc.toLowerCase())||[];function rc(a){return function(b,c){\"string\"!=typeof b&&(c=b,b=\"*\");var d,e=0,f=b.toLowerCase().match(E)||[];if(n.isFunction(c))while(d=f[e++])\"+\"===d[0]?(d=d.slice(1)||\"*\",(a[d]=a[d]||[]).unshift(c)):(a[d]=a[d]||[]).push(c)}}function sc(a,b,c,d){var e={},f=a===oc;function g(h){var i;return e[h]=!0,n.each(a[h]||[],function(a,h){var j=h(b,c,d);return\"string\"!=typeof j||f||e[j]?f?!(i=j):void 0:(b.dataTypes.unshift(j),g(j),!1)}),i}return g(b.dataTypes[0])||!e[\"*\"]&&g(\"*\")}function tc(a,b){var c,d,e=n.ajaxSettings.flatOptions||{};for(c in b)void 0!==b[c]&&((e[c]?a:d||(d={}))[c]=b[c]);return d&&n.extend(!0,a,d),a}function uc(a,b,c){var d,e,f,g,h=a.contents,i=a.dataTypes;while(\"*\"===i[0])i.shift(),void 0===d&&(d=a.mimeType||b.getResponseHeader(\"Content-Type\"));if(d)for(e in h)if(h[e]&&h[e].test(d)){i.unshift(e);break}if(i[0]in c)f=i[0];else{for(e in c){if(!i[0]||a.converters[e+\" \"+i[0]]){f=e;break}g||(g=e)}f=f||g}return f?(f!==i[0]&&i.unshift(f),c[f]):void 0}function vc(a,b,c,d){var e,f,g,h,i,j={},k=a.dataTypes.slice();if(k[1])for(g in a.converters)j[g.toLowerCase()]=a.converters[g];f=k.shift();while(f)if(a.responseFields[f]&&(c[a.responseFields[f]]=b),!i&&d&&a.dataFilter&&(b=a.dataFilter(b,a.dataType)),i=f,f=k.shift())if(\"*\"===f)f=i;else if(\"*\"!==i&&i!==f){if(g=j[i+\" \"+f]||j[\"* \"+f],!g)for(e in j)if(h=e.split(\" \"),h[1]===f&&(g=j[i+\" \"+h[0]]||j[\"* \"+h[0]])){g===!0?g=j[e]:j[e]!==!0&&(f=h[0],k.unshift(h[1]));break}if(g!==!0)if(g&&a[\"throws\"])b=g(b);else try{b=g(b)}catch(l){return{state:\"parsererror\",error:g?l:\"No conversion from \"+i+\" to \"+f}}}return{state:\"success\",data:b}}n.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:fc,type:\"GET\",isLocal:jc.test(ec[1]),global:!0,processData:!0,async:!0,contentType:\"application/x-www-form-urlencoded; charset=UTF-8\",accepts:{\"*\":pc,text:\"text/plain\",html:\"text/html\",xml:\"application/xml, text/xml\",json:\"application/json, text/javascript\"},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:\"responseXML\",text:\"responseText\",json:\"responseJSON\"},converters:{\"* text\":String,\"text html\":!0,\"text json\":n.parseJSON,\"text xml\":n.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(a,b){return b?tc(tc(a,n.ajaxSettings),b):tc(n.ajaxSettings,a)},ajaxPrefilter:rc(nc),ajaxTransport:rc(oc),ajax:function(a,b){\"object\"==typeof a&&(b=a,a=void 0),b=b||{};var c,d,e,f,g,h,i,j,k=n.ajaxSetup({},b),l=k.context||k,m=k.context&&(l.nodeType||l.jquery)?n(l):n.event,o=n.Deferred(),p=n.Callbacks(\"once memory\"),q=k.statusCode||{},r={},s={},t=0,u=\"canceled\",v={readyState:0,getResponseHeader:function(a){var b;if(2===t){if(!f){f={};while(b=ic.exec(e))f[b[1].toLowerCase()]=b[2]}b=f[a.toLowerCase()]}return null==b?null:b},getAllResponseHeaders:function(){return 2===t?e:null},setRequestHeader:function(a,b){var c=a.toLowerCase();return t||(a=s[c]=s[c]||a,r[a]=b),this},overrideMimeType:function(a){return t||(k.mimeType=a),this},statusCode:function(a){var b;if(a)if(2>t)for(b in a)q[b]=[q[b],a[b]];else v.always(a[v.status]);return this},abort:function(a){var b=a||u;return c&&c.abort(b),x(0,b),this}};if(o.promise(v).complete=p.add,v.success=v.done,v.error=v.fail,k.url=((a||k.url||fc)+\"\").replace(gc,\"\").replace(lc,ec[1]+\"//\"),k.type=b.method||b.type||k.method||k.type,k.dataTypes=n.trim(k.dataType||\"*\").toLowerCase().match(E)||[\"\"],null==k.crossDomain&&(h=mc.exec(k.url.toLowerCase()),k.crossDomain=!(!h||h[1]===ec[1]&&h[2]===ec[2]&&(h[3]||(\"http:\"===h[1]?\"80\":\"443\"))===(ec[3]||(\"http:\"===ec[1]?\"80\":\"443\")))),k.data&&k.processData&&\"string\"!=typeof k.data&&(k.data=n.param(k.data,k.traditional)),sc(nc,k,b,v),2===t)return v;i=k.global,i&&0===n.active++&&n.event.trigger(\"ajaxStart\"),k.type=k.type.toUpperCase(),k.hasContent=!kc.test(k.type),d=k.url,k.hasContent||(k.data&&(d=k.url+=(dc.test(d)?\"&\":\"?\")+k.data,delete k.data),k.cache===!1&&(k.url=hc.test(d)?d.replace(hc,\"$1_=\"+cc++):d+(dc.test(d)?\"&\":\"?\")+\"_=\"+cc++)),k.ifModified&&(n.lastModified[d]&&v.setRequestHeader(\"If-Modified-Since\",n.lastModified[d]),n.etag[d]&&v.setRequestHeader(\"If-None-Match\",n.etag[d])),(k.data&&k.hasContent&&k.contentType!==!1||b.contentType)&&v.setRequestHeader(\"Content-Type\",k.contentType),v.setRequestHeader(\"Accept\",k.dataTypes[0]&&k.accepts[k.dataTypes[0]]?k.accepts[k.dataTypes[0]]+(\"*\"!==k.dataTypes[0]?\", \"+pc+\"; q=0.01\":\"\"):k.accepts[\"*\"]);for(j in k.headers)v.setRequestHeader(j,k.headers[j]);if(k.beforeSend&&(k.beforeSend.call(l,v,k)===!1||2===t))return v.abort();u=\"abort\";for(j in{success:1,error:1,complete:1})v[j](k[j]);if(c=sc(oc,k,b,v)){v.readyState=1,i&&m.trigger(\"ajaxSend\",[v,k]),k.async&&k.timeout>0&&(g=setTimeout(function(){v.abort(\"timeout\")},k.timeout));try{t=1,c.send(r,x)}catch(w){if(!(2>t))throw w;x(-1,w)}}else x(-1,\"No Transport\");function x(a,b,f,h){var j,r,s,u,w,x=b;2!==t&&(t=2,g&&clearTimeout(g),c=void 0,e=h||\"\",v.readyState=a>0?4:0,j=a>=200&&300>a||304===a,f&&(u=uc(k,v,f)),u=vc(k,u,v,j),j?(k.ifModified&&(w=v.getResponseHeader(\"Last-Modified\"),w&&(n.lastModified[d]=w),w=v.getResponseHeader(\"etag\"),w&&(n.etag[d]=w)),204===a||\"HEAD\"===k.type?x=\"nocontent\":304===a?x=\"notmodified\":(x=u.state,r=u.data,s=u.error,j=!s)):(s=x,(a||!x)&&(x=\"error\",0>a&&(a=0))),v.status=a,v.statusText=(b||x)+\"\",j?o.resolveWith(l,[r,x,v]):o.rejectWith(l,[v,x,s]),v.statusCode(q),q=void 0,i&&m.trigger(j?\"ajaxSuccess\":\"ajaxError\",[v,k,j?r:s]),p.fireWith(l,[v,x]),i&&(m.trigger(\"ajaxComplete\",[v,k]),--n.active||n.event.trigger(\"ajaxStop\")))}return v},getJSON:function(a,b,c){return n.get(a,b,c,\"json\")},getScript:function(a,b){return n.get(a,void 0,b,\"script\")}}),n.each([\"get\",\"post\"],function(a,b){n[b]=function(a,c,d,e){return n.isFunction(c)&&(e=e||d,d=c,c=void 0),n.ajax({url:a,type:b,dataType:e,data:c,success:d})}}),n.each([\"ajaxStart\",\"ajaxStop\",\"ajaxComplete\",\"ajaxError\",\"ajaxSuccess\",\"ajaxSend\"],function(a,b){n.fn[b]=function(a){return this.on(b,a)}}),n._evalUrl=function(a){return n.ajax({url:a,type:\"GET\",dataType:\"script\",async:!1,global:!1,\"throws\":!0})},n.fn.extend({wrapAll:function(a){var b;return n.isFunction(a)?this.each(function(b){n(this).wrapAll(a.call(this,b))}):(this[0]&&(b=n(a,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&b.insertBefore(this[0]),b.map(function(){var a=this;while(a.firstElementChild)a=a.firstElementChild;return a}).append(this)),this)},wrapInner:function(a){return this.each(n.isFunction(a)?function(b){n(this).wrapInner(a.call(this,b))}:function(){var b=n(this),c=b.contents();c.length?c.wrapAll(a):b.append(a)})},wrap:function(a){var b=n.isFunction(a);return this.each(function(c){n(this).wrapAll(b?a.call(this,c):a)})},unwrap:function(){return this.parent().each(function(){n.nodeName(this,\"body\")||n(this).replaceWith(this.childNodes)}).end()}}),n.expr.filters.hidden=function(a){return a.offsetWidth<=0&&a.offsetHeight<=0},n.expr.filters.visible=function(a){return!n.expr.filters.hidden(a)};var wc=/%20/g,xc=/\\[\\]$/,yc=/\\r?\\n/g,zc=/^(?:submit|button|image|reset|file)$/i,Ac=/^(?:input|select|textarea|keygen)/i;function Bc(a,b,c,d){var e;if(n.isArray(b))n.each(b,function(b,e){c||xc.test(a)?d(a,e):Bc(a+\"[\"+(\"object\"==typeof e?b:\"\")+\"]\",e,c,d)});else if(c||\"object\"!==n.type(b))d(a,b);else for(e in b)Bc(a+\"[\"+e+\"]\",b[e],c,d)}n.param=function(a,b){var c,d=[],e=function(a,b){b=n.isFunction(b)?b():null==b?\"\":b,d[d.length]=encodeURIComponent(a)+\"=\"+encodeURIComponent(b)};if(void 0===b&&(b=n.ajaxSettings&&n.ajaxSettings.traditional),n.isArray(a)||a.jquery&&!n.isPlainObject(a))n.each(a,function(){e(this.name,this.value)});else for(c in a)Bc(c,a[c],b,e);return d.join(\"&\").replace(wc,\"+\")},n.fn.extend({serialize:function(){return n.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var a=n.prop(this,\"elements\");return a?n.makeArray(a):this}).filter(function(){var a=this.type;return this.name&&!n(this).is(\":disabled\")&&Ac.test(this.nodeName)&&!zc.test(a)&&(this.checked||!T.test(a))}).map(function(a,b){var c=n(this).val();return null==c?null:n.isArray(c)?n.map(c,function(a){return{name:b.name,value:a.replace(yc,\"\\r\\n\")}}):{name:b.name,value:c.replace(yc,\"\\r\\n\")}}).get()}}),n.ajaxSettings.xhr=function(){try{return new XMLHttpRequest}catch(a){}};var Cc=0,Dc={},Ec={0:200,1223:204},Fc=n.ajaxSettings.xhr();a.ActiveXObject&&n(a).on(\"unload\",function(){for(var a in Dc)Dc[a]()}),k.cors=!!Fc&&\"withCredentials\"in Fc,k.ajax=Fc=!!Fc,n.ajaxTransport(function(a){var b;return k.cors||Fc&&!a.crossDomain?{send:function(c,d){var e,f=a.xhr(),g=++Cc;if(f.open(a.type,a.url,a.async,a.username,a.password),a.xhrFields)for(e in a.xhrFields)f[e]=a.xhrFields[e];a.mimeType&&f.overrideMimeType&&f.overrideMimeType(a.mimeType),a.crossDomain||c[\"X-Requested-With\"]||(c[\"X-Requested-With\"]=\"XMLHttpRequest\");for(e in c)f.setRequestHeader(e,c[e]);b=function(a){return function(){b&&(delete Dc[g],b=f.onload=f.onerror=null,\"abort\"===a?f.abort():\"error\"===a?d(f.status,f.statusText):d(Ec[f.status]||f.status,f.statusText,\"string\"==typeof f.responseText?{text:f.responseText}:void 0,f.getAllResponseHeaders()))}},f.onload=b(),f.onerror=b(\"error\"),b=Dc[g]=b(\"abort\");try{f.send(a.hasContent&&a.data||null)}catch(h){if(b)throw h}},abort:function(){b&&b()}}:void 0}),n.ajaxSetup({accepts:{script:\"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript\"},contents:{script:/(?:java|ecma)script/},converters:{\"text script\":function(a){return n.globalEval(a),a}}}),n.ajaxPrefilter(\"script\",function(a){void 0===a.cache&&(a.cache=!1),a.crossDomain&&(a.type=\"GET\")}),n.ajaxTransport(\"script\",function(a){if(a.crossDomain){var b,c;return{send:function(d,e){b=n(\"<script>\").prop({async:!0,charset:a.scriptCharset,src:a.url}).on(\"load error\",c=function(a){b.remove(),c=null,a&&e(\"error\"===a.type?404:200,a.type)}),l.head.appendChild(b[0])},abort:function(){c&&c()}}}});var Gc=[],Hc=/(=)\\?(?=&|$)|\\?\\?/;n.ajaxSetup({jsonp:\"callback\",jsonpCallback:function(){var a=Gc.pop()||n.expando+\"_\"+cc++;return this[a]=!0,a}}),n.ajaxPrefilter(\"json jsonp\",function(b,c,d){var e,f,g,h=b.jsonp!==!1&&(Hc.test(b.url)?\"url\":\"string\"==typeof b.data&&!(b.contentType||\"\").indexOf(\"application/x-www-form-urlencoded\")&&Hc.test(b.data)&&\"data\");return h||\"jsonp\"===b.dataTypes[0]?(e=b.jsonpCallback=n.isFunction(b.jsonpCallback)?b.jsonpCallback():b.jsonpCallback,h?b[h]=b[h].replace(Hc,\"$1\"+e):b.jsonp!==!1&&(b.url+=(dc.test(b.url)?\"&\":\"?\")+b.jsonp+\"=\"+e),b.converters[\"script json\"]=function(){return g||n.error(e+\" was not called\"),g[0]},b.dataTypes[0]=\"json\",f=a[e],a[e]=function(){g=arguments},d.always(function(){a[e]=f,b[e]&&(b.jsonpCallback=c.jsonpCallback,Gc.push(e)),g&&n.isFunction(f)&&f(g[0]),g=f=void 0}),\"script\"):void 0}),n.parseHTML=function(a,b,c){if(!a||\"string\"!=typeof a)return null;\"boolean\"==typeof b&&(c=b,b=!1),b=b||l;var d=v.exec(a),e=!c&&[];return d?[b.createElement(d[1])]:(d=n.buildFragment([a],b,e),e&&e.length&&n(e).remove(),n.merge([],d.childNodes))};var Ic=n.fn.load;n.fn.load=function(a,b,c){if(\"string\"!=typeof a&&Ic)return Ic.apply(this,arguments);var d,e,f,g=this,h=a.indexOf(\" \");return h>=0&&(d=n.trim(a.slice(h)),a=a.slice(0,h)),n.isFunction(b)?(c=b,b=void 0):b&&\"object\"==typeof b&&(e=\"POST\"),g.length>0&&n.ajax({url:a,type:e,dataType:\"html\",data:b}).done(function(a){f=arguments,g.html(d?n(\"<div>\").append(n.parseHTML(a)).find(d):a)}).complete(c&&function(a,b){g.each(c,f||[a.responseText,b,a])}),this},n.expr.filters.animated=function(a){return n.grep(n.timers,function(b){return a===b.elem}).length};var Jc=a.document.documentElement;function Kc(a){return n.isWindow(a)?a:9===a.nodeType&&a.defaultView}n.offset={setOffset:function(a,b,c){var d,e,f,g,h,i,j,k=n.css(a,\"position\"),l=n(a),m={};\"static\"===k&&(a.style.position=\"relative\"),h=l.offset(),f=n.css(a,\"top\"),i=n.css(a,\"left\"),j=(\"absolute\"===k||\"fixed\"===k)&&(f+i).indexOf(\"auto\")>-1,j?(d=l.position(),g=d.top,e=d.left):(g=parseFloat(f)||0,e=parseFloat(i)||0),n.isFunction(b)&&(b=b.call(a,c,h)),null!=b.top&&(m.top=b.top-h.top+g),null!=b.left&&(m.left=b.left-h.left+e),\"using\"in b?b.using.call(a,m):l.css(m)}},n.fn.extend({offset:function(a){if(arguments.length)return void 0===a?this:this.each(function(b){n.offset.setOffset(this,a,b)});var b,c,d=this[0],e={top:0,left:0},f=d&&d.ownerDocument;if(f)return b=f.documentElement,n.contains(b,d)?(typeof d.getBoundingClientRect!==U&&(e=d.getBoundingClientRect()),c=Kc(f),{top:e.top+c.pageYOffset-b.clientTop,left:e.left+c.pageXOffset-b.clientLeft}):e},position:function(){if(this[0]){var a,b,c=this[0],d={top:0,left:0};return\"fixed\"===n.css(c,\"position\")?b=c.getBoundingClientRect():(a=this.offsetParent(),b=this.offset(),n.nodeName(a[0],\"html\")||(d=a.offset()),d.top+=n.css(a[0],\"borderTopWidth\",!0),d.left+=n.css(a[0],\"borderLeftWidth\",!0)),{top:b.top-d.top-n.css(c,\"marginTop\",!0),left:b.left-d.left-n.css(c,\"marginLeft\",!0)}}},offsetParent:function(){return this.map(function(){var a=this.offsetParent||Jc;while(a&&!n.nodeName(a,\"html\")&&\"static\"===n.css(a,\"position\"))a=a.offsetParent;return a||Jc})}}),n.each({scrollLeft:\"pageXOffset\",scrollTop:\"pageYOffset\"},function(b,c){var d=\"pageYOffset\"===c;n.fn[b]=function(e){return J(this,function(b,e,f){var g=Kc(b);return void 0===f?g?g[c]:b[e]:void(g?g.scrollTo(d?a.pageXOffset:f,d?f:a.pageYOffset):b[e]=f)},b,e,arguments.length,null)}}),n.each([\"top\",\"left\"],function(a,b){n.cssHooks[b]=yb(k.pixelPosition,function(a,c){return c?(c=xb(a,b),vb.test(c)?n(a).position()[b]+\"px\":c):void 0})}),n.each({Height:\"height\",Width:\"width\"},function(a,b){n.each({padding:\"inner\"+a,content:b,\"\":\"outer\"+a},function(c,d){n.fn[d]=function(d,e){var f=arguments.length&&(c||\"boolean\"!=typeof d),g=c||(d===!0||e===!0?\"margin\":\"border\");return J(this,function(b,c,d){var e;return n.isWindow(b)?b.document.documentElement[\"client\"+a]:9===b.nodeType?(e=b.documentElement,Math.max(b.body[\"scroll\"+a],e[\"scroll\"+a],b.body[\"offset\"+a],e[\"offset\"+a],e[\"client\"+a])):void 0===d?n.css(b,c,g):n.style(b,c,d,g)},b,f?d:void 0,f,null)}})}),n.fn.size=function(){return this.length},n.fn.andSelf=n.fn.addBack,\"function\"==typeof define&&define.amd&&define(\"jquery\",[],function(){return n});var Lc=a.jQuery,Mc=a.$;return n.noConflict=function(b){return a.$===n&&(a.$=Mc),b&&a.jQuery===n&&(a.jQuery=Lc),n},typeof b===U&&(a.jQuery=a.$=n),n});\n    5  //# sourceMappingURL=jquery.min.map\n\n/Users/kirkcp/Documents/node_play/slatemail/node_modules/jquery/dist/cdn/jquery-2.1.1.js:\n 8538  }\n 8539  \n 8540: support.cors = !!xhrSupported && ( \"withCredentials\" in xhrSupported );\n 8541  support.ajax = xhrSupported = !!xhrSupported;\n 8542  \n\n/Users/kirkcp/Documents/node_play/slatemail/node_modules/jquery/dist/cdn/jquery-2.1.1.min.js:\n    2  !function(a,b){\"object\"==typeof module&&\"object\"==typeof module.exports?module.exports=a.document?b(a,!0):function(a){if(!a.document)throw new Error(\"jQuery requires a window with a document\");return b(a)}:b(a)}(\"undefined\"!=typeof window?window:this,function(a,b){var c=[],d=c.slice,e=c.concat,f=c.push,g=c.indexOf,h={},i=h.toString,j=h.hasOwnProperty,k={},l=a.document,m=\"2.1.1\",n=function(a,b){return new n.fn.init(a,b)},o=/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,p=/^-ms-/,q=/-([\\da-z])/gi,r=function(a,b){return b.toUpperCase()};n.fn=n.prototype={jquery:m,constructor:n,selector:\"\",length:0,toArray:function(){return d.call(this)},get:function(a){return null!=a?0>a?this[a+this.length]:this[a]:d.call(this)},pushStack:function(a){var b=n.merge(this.constructor(),a);return b.prevObject=this,b.context=this.context,b},each:function(a,b){return n.each(this,a,b)},map:function(a){return this.pushStack(n.map(this,function(b,c){return a.call(b,c,b)}))},slice:function(){return this.pushStack(d.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(a){var b=this.length,c=+a+(0>a?b:0);return this.pushStack(c>=0&&b>c?[this[c]]:[])},end:function(){return this.prevObject||this.constructor(null)},push:f,sort:c.sort,splice:c.splice},n.extend=n.fn.extend=function(){var a,b,c,d,e,f,g=arguments[0]||{},h=1,i=arguments.length,j=!1;for(\"boolean\"==typeof g&&(j=g,g=arguments[h]||{},h++),\"object\"==typeof g||n.isFunction(g)||(g={}),h===i&&(g=this,h--);i>h;h++)if(null!=(a=arguments[h]))for(b in a)c=g[b],d=a[b],g!==d&&(j&&d&&(n.isPlainObject(d)||(e=n.isArray(d)))?(e?(e=!1,f=c&&n.isArray(c)?c:[]):f=c&&n.isPlainObject(c)?c:{},g[b]=n.extend(j,f,d)):void 0!==d&&(g[b]=d));return g},n.extend({expando:\"jQuery\"+(m+Math.random()).replace(/\\D/g,\"\"),isReady:!0,error:function(a){throw new Error(a)},noop:function(){},isFunction:function(a){return\"function\"===n.type(a)},isArray:Array.isArray,isWindow:function(a){return null!=a&&a===a.window},isNumeric:function(a){return!n.isArray(a)&&a-parseFloat(a)>=0},isPlainObject:function(a){return\"object\"!==n.type(a)||a.nodeType||n.isWindow(a)?!1:a.constructor&&!j.call(a.constructor.prototype,\"isPrototypeOf\")?!1:!0},isEmptyObject:function(a){var b;for(b in a)return!1;return!0},type:function(a){return null==a?a+\"\":\"object\"==typeof a||\"function\"==typeof a?h[i.call(a)]||\"object\":typeof a},globalEval:function(a){var b,c=eval;a=n.trim(a),a&&(1===a.indexOf(\"use strict\")?(b=l.createElement(\"script\"),b.text=a,l.head.appendChild(b).parentNode.removeChild(b)):c(a))},camelCase:function(a){return a.replace(p,\"ms-\").replace(q,r)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toLowerCase()===b.toLowerCase()},each:function(a,b,c){var d,e=0,f=a.length,g=s(a);if(c){if(g){for(;f>e;e++)if(d=b.apply(a[e],c),d===!1)break}else for(e in a)if(d=b.apply(a[e],c),d===!1)break}else if(g){for(;f>e;e++)if(d=b.call(a[e],e,a[e]),d===!1)break}else for(e in a)if(d=b.call(a[e],e,a[e]),d===!1)break;return a},trim:function(a){return null==a?\"\":(a+\"\").replace(o,\"\")},makeArray:function(a,b){var c=b||[];return null!=a&&(s(Object(a))?n.merge(c,\"string\"==typeof a?[a]:a):f.call(c,a)),c},inArray:function(a,b,c){return null==b?-1:g.call(b,a,c)},merge:function(a,b){for(var c=+b.length,d=0,e=a.length;c>d;d++)a[e++]=b[d];return a.length=e,a},grep:function(a,b,c){for(var d,e=[],f=0,g=a.length,h=!c;g>f;f++)d=!b(a[f],f),d!==h&&e.push(a[f]);return e},map:function(a,b,c){var d,f=0,g=a.length,h=s(a),i=[];if(h)for(;g>f;f++)d=b(a[f],f,c),null!=d&&i.push(d);else for(f in a)d=b(a[f],f,c),null!=d&&i.push(d);return e.apply([],i)},guid:1,proxy:function(a,b){var c,e,f;return\"string\"==typeof b&&(c=a[b],b=a,a=c),n.isFunction(a)?(e=d.call(arguments,2),f=function(){return a.apply(b||this,e.concat(d.call(arguments)))},f.guid=a.guid=a.guid||n.guid++,f):void 0},now:Date.now,support:k}),n.each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"),function(a,b){h[\"[object \"+b+\"]\"]=b.toLowerCase()});function s(a){var b=a.length,c=n.type(a);return\"function\"===c||n.isWindow(a)?!1:1===a.nodeType&&b?!0:\"array\"===c||0===b||\"number\"==typeof b&&b>0&&b-1 in a}var t=function(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u=\"sizzle\"+-new Date,v=a.document,w=0,x=0,y=gb(),z=gb(),A=gb(),B=function(a,b){return a===b&&(l=!0),0},C=\"undefined\",D=1<<31,E={}.hasOwnProperty,F=[],G=F.pop,H=F.push,I=F.push,J=F.slice,K=F.indexOf||function(a){for(var b=0,c=this.length;c>b;b++)if(this[b]===a)return b;return-1},L=\"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",M=\"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",N=\"(?:\\\\\\\\.|[\\\\w-]|[^\\\\x00-\\\\xa0])+\",O=N.replace(\"w\",\"w#\"),P=\"\\\\[\"+M+\"*(\"+N+\")(?:\"+M+\"*([*^$|!~]?=)\"+M+\"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\"+O+\"))|)\"+M+\"*\\\\]\",Q=\":(\"+N+\")(?:\\\\((('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\"+P+\")*)|.*)\\\\)|)\",R=new RegExp(\"^\"+M+\"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\"+M+\"+$\",\"g\"),S=new RegExp(\"^\"+M+\"*,\"+M+\"*\"),T=new RegExp(\"^\"+M+\"*([>+~]|\"+M+\")\"+M+\"*\"),U=new RegExp(\"=\"+M+\"*([^\\\\]'\\\"]*?)\"+M+\"*\\\\]\",\"g\"),V=new RegExp(Q),W=new RegExp(\"^\"+O+\"$\"),X={ID:new RegExp(\"^#(\"+N+\")\"),CLASS:new RegExp(\"^\\\\.(\"+N+\")\"),TAG:new RegExp(\"^(\"+N.replace(\"w\",\"w*\")+\")\"),ATTR:new RegExp(\"^\"+P),PSEUDO:new RegExp(\"^\"+Q),CHILD:new RegExp(\"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\"+M+\"*(even|odd|(([+-]|)(\\\\d*)n|)\"+M+\"*(?:([+-]|)\"+M+\"*(\\\\d+)|))\"+M+\"*\\\\)|)\",\"i\"),bool:new RegExp(\"^(?:\"+L+\")$\",\"i\"),needsContext:new RegExp(\"^\"+M+\"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\"+M+\"*((?:-\\\\d)?\\\\d*)\"+M+\"*\\\\)|)(?=[^-]|$)\",\"i\")},Y=/^(?:input|select|textarea|button)$/i,Z=/^h\\d$/i,$=/^[^{]+\\{\\s*\\[native \\w/,_=/^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,ab=/[+~]/,bb=/'|\\\\/g,cb=new RegExp(\"\\\\\\\\([\\\\da-f]{1,6}\"+M+\"?|(\"+M+\")|.)\",\"ig\"),db=function(a,b,c){var d=\"0x\"+b-65536;return d!==d||c?b:0>d?String.fromCharCode(d+65536):String.fromCharCode(d>>10|55296,1023&d|56320)};try{I.apply(F=J.call(v.childNodes),v.childNodes),F[v.childNodes.length].nodeType}catch(eb){I={apply:F.length?function(a,b){H.apply(a,J.call(b))}:function(a,b){var c=a.length,d=0;while(a[c++]=b[d++]);a.length=c-1}}}function fb(a,b,d,e){var f,h,j,k,l,o,r,s,w,x;if((b?b.ownerDocument||b:v)!==n&&m(b),b=b||n,d=d||[],!a||\"string\"!=typeof a)return d;if(1!==(k=b.nodeType)&&9!==k)return[];if(p&&!e){if(f=_.exec(a))if(j=f[1]){if(9===k){if(h=b.getElementById(j),!h||!h.parentNode)return d;if(h.id===j)return d.push(h),d}else if(b.ownerDocument&&(h=b.ownerDocument.getElementById(j))&&t(b,h)&&h.id===j)return d.push(h),d}else{if(f[2])return I.apply(d,b.getElementsByTagName(a)),d;if((j=f[3])&&c.getElementsByClassName&&b.getElementsByClassName)return I.apply(d,b.getElementsByClassName(j)),d}if(c.qsa&&(!q||!q.test(a))){if(s=r=u,w=b,x=9===k&&a,1===k&&\"object\"!==b.nodeName.toLowerCase()){o=g(a),(r=b.getAttribute(\"id\"))?s=r.replace(bb,\"\\\\$&\"):b.setAttribute(\"id\",s),s=\"[id='\"+s+\"'] \",l=o.length;while(l--)o[l]=s+qb(o[l]);w=ab.test(a)&&ob(b.parentNode)||b,x=o.join(\",\")}if(x)try{return I.apply(d,w.querySelectorAll(x)),d}catch(y){}finally{r||b.removeAttribute(\"id\")}}}return i(a.replace(R,\"$1\"),b,d,e)}function gb(){var a=[];function b(c,e){return a.push(c+\" \")>d.cacheLength&&delete b[a.shift()],b[c+\" \"]=e}return b}function hb(a){return a[u]=!0,a}function ib(a){var b=n.createElement(\"div\");try{return!!a(b)}catch(c){return!1}finally{b.parentNode&&b.parentNode.removeChild(b),b=null}}function jb(a,b){var c=a.split(\"|\"),e=a.length;while(e--)d.attrHandle[c[e]]=b}function kb(a,b){var c=b&&a,d=c&&1===a.nodeType&&1===b.nodeType&&(~b.sourceIndex||D)-(~a.sourceIndex||D);if(d)return d;if(c)while(c=c.nextSibling)if(c===b)return-1;return a?1:-1}function lb(a){return function(b){var c=b.nodeName.toLowerCase();return\"input\"===c&&b.type===a}}function mb(a){return function(b){var c=b.nodeName.toLowerCase();return(\"input\"===c||\"button\"===c)&&b.type===a}}function nb(a){return hb(function(b){return b=+b,hb(function(c,d){var e,f=a([],c.length,b),g=f.length;while(g--)c[e=f[g]]&&(c[e]=!(d[e]=c[e]))})})}function ob(a){return a&&typeof a.getElementsByTagName!==C&&a}c=fb.support={},f=fb.isXML=function(a){var b=a&&(a.ownerDocument||a).documentElement;return b?\"HTML\"!==b.nodeName:!1},m=fb.setDocument=function(a){var b,e=a?a.ownerDocument||a:v,g=e.defaultView;return e!==n&&9===e.nodeType&&e.documentElement?(n=e,o=e.documentElement,p=!f(e),g&&g!==g.top&&(g.addEventListener?g.addEventListener(\"unload\",function(){m()},!1):g.attachEvent&&g.attachEvent(\"onunload\",function(){m()})),c.attributes=ib(function(a){return a.className=\"i\",!a.getAttribute(\"className\")}),c.getElementsByTagName=ib(function(a){return a.appendChild(e.createComment(\"\")),!a.getElementsByTagName(\"*\").length}),c.getElementsByClassName=$.test(e.getElementsByClassName)&&ib(function(a){return a.innerHTML=\"<div class='a'></div><div class='a i'></div>\",a.firstChild.className=\"i\",2===a.getElementsByClassName(\"i\").length}),c.getById=ib(function(a){return o.appendChild(a).id=u,!e.getElementsByName||!e.getElementsByName(u).length}),c.getById?(d.find.ID=function(a,b){if(typeof b.getElementById!==C&&p){var c=b.getElementById(a);return c&&c.parentNode?[c]:[]}},d.filter.ID=function(a){var b=a.replace(cb,db);return function(a){return a.getAttribute(\"id\")===b}}):(delete d.find.ID,d.filter.ID=function(a){var b=a.replace(cb,db);return function(a){var c=typeof a.getAttributeNode!==C&&a.getAttributeNode(\"id\");return c&&c.value===b}}),d.find.TAG=c.getElementsByTagName?function(a,b){return typeof b.getElementsByTagName!==C?b.getElementsByTagName(a):void 0}:function(a,b){var c,d=[],e=0,f=b.getElementsByTagName(a);if(\"*\"===a){while(c=f[e++])1===c.nodeType&&d.push(c);return d}return f},d.find.CLASS=c.getElementsByClassName&&function(a,b){return typeof b.getElementsByClassName!==C&&p?b.getElementsByClassName(a):void 0},r=[],q=[],(c.qsa=$.test(e.querySelectorAll))&&(ib(function(a){a.innerHTML=\"<select msallowclip=''><option selected=''></option></select>\",a.querySelectorAll(\"[msallowclip^='']\").length&&q.push(\"[*^$]=\"+M+\"*(?:''|\\\"\\\")\"),a.querySelectorAll(\"[selected]\").length||q.push(\"\\\\[\"+M+\"*(?:value|\"+L+\")\"),a.querySelectorAll(\":checked\").length||q.push(\":checked\")}),ib(function(a){var b=e.createElement(\"input\");b.setAttribute(\"type\",\"hidden\"),a.appendChild(b).setAttribute(\"name\",\"D\"),a.querySelectorAll(\"[name=d]\").length&&q.push(\"name\"+M+\"*[*^$|!~]?=\"),a.querySelectorAll(\":enabled\").length||q.push(\":enabled\",\":disabled\"),a.querySelectorAll(\"*,:x\"),q.push(\",.*:\")})),(c.matchesSelector=$.test(s=o.matches||o.webkitMatchesSelector||o.mozMatchesSelector||o.oMatchesSelector||o.msMatchesSelector))&&ib(function(a){c.disconnectedMatch=s.call(a,\"div\"),s.call(a,\"[s!='']:x\"),r.push(\"!=\",Q)}),q=q.length&&new RegExp(q.join(\"|\")),r=r.length&&new RegExp(r.join(\"|\")),b=$.test(o.compareDocumentPosition),t=b||$.test(o.contains)?function(a,b){var c=9===a.nodeType?a.documentElement:a,d=b&&b.parentNode;return a===d||!(!d||1!==d.nodeType||!(c.contains?c.contains(d):a.compareDocumentPosition&&16&a.compareDocumentPosition(d)))}:function(a,b){if(b)while(b=b.parentNode)if(b===a)return!0;return!1},B=b?function(a,b){if(a===b)return l=!0,0;var d=!a.compareDocumentPosition-!b.compareDocumentPosition;return d?d:(d=(a.ownerDocument||a)===(b.ownerDocument||b)?a.compareDocumentPosition(b):1,1&d||!c.sortDetached&&b.compareDocumentPosition(a)===d?a===e||a.ownerDocument===v&&t(v,a)?-1:b===e||b.ownerDocument===v&&t(v,b)?1:k?K.call(k,a)-K.call(k,b):0:4&d?-1:1)}:function(a,b){if(a===b)return l=!0,0;var c,d=0,f=a.parentNode,g=b.parentNode,h=[a],i=[b];if(!f||!g)return a===e?-1:b===e?1:f?-1:g?1:k?K.call(k,a)-K.call(k,b):0;if(f===g)return kb(a,b);c=a;while(c=c.parentNode)h.unshift(c);c=b;while(c=c.parentNode)i.unshift(c);while(h[d]===i[d])d++;return d?kb(h[d],i[d]):h[d]===v?-1:i[d]===v?1:0},e):n},fb.matches=function(a,b){return fb(a,null,null,b)},fb.matchesSelector=function(a,b){if((a.ownerDocument||a)!==n&&m(a),b=b.replace(U,\"='$1']\"),!(!c.matchesSelector||!p||r&&r.test(b)||q&&q.test(b)))try{var d=s.call(a,b);if(d||c.disconnectedMatch||a.document&&11!==a.document.nodeType)return d}catch(e){}return fb(b,n,null,[a]).length>0},fb.contains=function(a,b){return(a.ownerDocument||a)!==n&&m(a),t(a,b)},fb.attr=function(a,b){(a.ownerDocument||a)!==n&&m(a);var e=d.attrHandle[b.toLowerCase()],f=e&&E.call(d.attrHandle,b.toLowerCase())?e(a,b,!p):void 0;return void 0!==f?f:c.attributes||!p?a.getAttribute(b):(f=a.getAttributeNode(b))&&f.specified?f.value:null},fb.error=function(a){throw new Error(\"Syntax error, unrecognized expression: \"+a)},fb.uniqueSort=function(a){var b,d=[],e=0,f=0;if(l=!c.detectDuplicates,k=!c.sortStable&&a.slice(0),a.sort(B),l){while(b=a[f++])b===a[f]&&(e=d.push(f));while(e--)a.splice(d[e],1)}return k=null,a},e=fb.getText=function(a){var b,c=\"\",d=0,f=a.nodeType;if(f){if(1===f||9===f||11===f){if(\"string\"==typeof a.textContent)return a.textContent;for(a=a.firstChild;a;a=a.nextSibling)c+=e(a)}else if(3===f||4===f)return a.nodeValue}else while(b=a[d++])c+=e(b);return c},d=fb.selectors={cacheLength:50,createPseudo:hb,match:X,attrHandle:{},find:{},relative:{\">\":{dir:\"parentNode\",first:!0},\" \":{dir:\"parentNode\"},\"+\":{dir:\"previousSibling\",first:!0},\"~\":{dir:\"previousSibling\"}},preFilter:{ATTR:function(a){return a[1]=a[1].replace(cb,db),a[3]=(a[3]||a[4]||a[5]||\"\").replace(cb,db),\"~=\"===a[2]&&(a[3]=\" \"+a[3]+\" \"),a.slice(0,4)},CHILD:function(a){return a[1]=a[1].toLowerCase(),\"nth\"===a[1].slice(0,3)?(a[3]||fb.error(a[0]),a[4]=+(a[4]?a[5]+(a[6]||1):2*(\"even\"===a[3]||\"odd\"===a[3])),a[5]=+(a[7]+a[8]||\"odd\"===a[3])):a[3]&&fb.error(a[0]),a},PSEUDO:function(a){var b,c=!a[6]&&a[2];return X.CHILD.test(a[0])?null:(a[3]?a[2]=a[4]||a[5]||\"\":c&&V.test(c)&&(b=g(c,!0))&&(b=c.indexOf(\")\",c.length-b)-c.length)&&(a[0]=a[0].slice(0,b),a[2]=c.slice(0,b)),a.slice(0,3))}},filter:{TAG:function(a){var b=a.replace(cb,db).toLowerCase();return\"*\"===a?function(){return!0}:function(a){return a.nodeName&&a.nodeName.toLowerCase()===b}},CLASS:function(a){var b=y[a+\" \"];return b||(b=new RegExp(\"(^|\"+M+\")\"+a+\"(\"+M+\"|$)\"))&&y(a,function(a){return b.test(\"string\"==typeof a.className&&a.className||typeof a.getAttribute!==C&&a.getAttribute(\"class\")||\"\")})},ATTR:function(a,b,c){return function(d){var e=fb.attr(d,a);return null==e?\"!=\"===b:b?(e+=\"\",\"=\"===b?e===c:\"!=\"===b?e!==c:\"^=\"===b?c&&0===e.indexOf(c):\"*=\"===b?c&&e.indexOf(c)>-1:\"$=\"===b?c&&e.slice(-c.length)===c:\"~=\"===b?(\" \"+e+\" \").indexOf(c)>-1:\"|=\"===b?e===c||e.slice(0,c.length+1)===c+\"-\":!1):!0}},CHILD:function(a,b,c,d,e){var f=\"nth\"!==a.slice(0,3),g=\"last\"!==a.slice(-4),h=\"of-type\"===b;return 1===d&&0===e?function(a){return!!a.parentNode}:function(b,c,i){var j,k,l,m,n,o,p=f!==g?\"nextSibling\":\"previousSibling\",q=b.parentNode,r=h&&b.nodeName.toLowerCase(),s=!i&&!h;if(q){if(f){while(p){l=b;while(l=l[p])if(h?l.nodeName.toLowerCase()===r:1===l.nodeType)return!1;o=p=\"only\"===a&&!o&&\"nextSibling\"}return!0}if(o=[g?q.firstChild:q.lastChild],g&&s){k=q[u]||(q[u]={}),j=k[a]||[],n=j[0]===w&&j[1],m=j[0]===w&&j[2],l=n&&q.childNodes[n];while(l=++n&&l&&l[p]||(m=n=0)||o.pop())if(1===l.nodeType&&++m&&l===b){k[a]=[w,n,m];break}}else if(s&&(j=(b[u]||(b[u]={}))[a])&&j[0]===w)m=j[1];else while(l=++n&&l&&l[p]||(m=n=0)||o.pop())if((h?l.nodeName.toLowerCase()===r:1===l.nodeType)&&++m&&(s&&((l[u]||(l[u]={}))[a]=[w,m]),l===b))break;return m-=e,m===d||m%d===0&&m/d>=0}}},PSEUDO:function(a,b){var c,e=d.pseudos[a]||d.setFilters[a.toLowerCase()]||fb.error(\"unsupported pseudo: \"+a);return e[u]?e(b):e.length>1?(c=[a,a,\"\",b],d.setFilters.hasOwnProperty(a.toLowerCase())?hb(function(a,c){var d,f=e(a,b),g=f.length;while(g--)d=K.call(a,f[g]),a[d]=!(c[d]=f[g])}):function(a){return e(a,0,c)}):e}},pseudos:{not:hb(function(a){var b=[],c=[],d=h(a.replace(R,\"$1\"));return d[u]?hb(function(a,b,c,e){var f,g=d(a,null,e,[]),h=a.length;while(h--)(f=g[h])&&(a[h]=!(b[h]=f))}):function(a,e,f){return b[0]=a,d(b,null,f,c),!c.pop()}}),has:hb(function(a){return function(b){return fb(a,b).length>0}}),contains:hb(function(a){return function(b){return(b.textContent||b.innerText||e(b)).indexOf(a)>-1}}),lang:hb(function(a){return W.test(a||\"\")||fb.error(\"unsupported lang: \"+a),a=a.replace(cb,db).toLowerCase(),function(b){var c;do if(c=p?b.lang:b.getAttribute(\"xml:lang\")||b.getAttribute(\"lang\"))return c=c.toLowerCase(),c===a||0===c.indexOf(a+\"-\");while((b=b.parentNode)&&1===b.nodeType);return!1}}),target:function(b){var c=a.location&&a.location.hash;return c&&c.slice(1)===b.id},root:function(a){return a===o},focus:function(a){return a===n.activeElement&&(!n.hasFocus||n.hasFocus())&&!!(a.type||a.href||~a.tabIndex)},enabled:function(a){return a.disabled===!1},disabled:function(a){return a.disabled===!0},checked:function(a){var b=a.nodeName.toLowerCase();return\"input\"===b&&!!a.checked||\"option\"===b&&!!a.selected},selected:function(a){return a.parentNode&&a.parentNode.selectedIndex,a.selected===!0},empty:function(a){for(a=a.firstChild;a;a=a.nextSibling)if(a.nodeType<6)return!1;return!0},parent:function(a){return!d.pseudos.empty(a)},header:function(a){return Z.test(a.nodeName)},input:function(a){return Y.test(a.nodeName)},button:function(a){var b=a.nodeName.toLowerCase();return\"input\"===b&&\"button\"===a.type||\"button\"===b},text:function(a){var b;return\"input\"===a.nodeName.toLowerCase()&&\"text\"===a.type&&(null==(b=a.getAttribute(\"type\"))||\"text\"===b.toLowerCase())},first:nb(function(){return[0]}),last:nb(function(a,b){return[b-1]}),eq:nb(function(a,b,c){return[0>c?c+b:c]}),even:nb(function(a,b){for(var c=0;b>c;c+=2)a.push(c);return a}),odd:nb(function(a,b){for(var c=1;b>c;c+=2)a.push(c);return a}),lt:nb(function(a,b,c){for(var d=0>c?c+b:c;--d>=0;)a.push(d);return a}),gt:nb(function(a,b,c){for(var d=0>c?c+b:c;++d<b;)a.push(d);return a})}},d.pseudos.nth=d.pseudos.eq;for(b in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})d.pseudos[b]=lb(b);for(b in{submit:!0,reset:!0})d.pseudos[b]=mb(b);function pb(){}pb.prototype=d.filters=d.pseudos,d.setFilters=new pb,g=fb.tokenize=function(a,b){var c,e,f,g,h,i,j,k=z[a+\" \"];if(k)return b?0:k.slice(0);h=a,i=[],j=d.preFilter;while(h){(!c||(e=S.exec(h)))&&(e&&(h=h.slice(e[0].length)||h),i.push(f=[])),c=!1,(e=T.exec(h))&&(c=e.shift(),f.push({value:c,type:e[0].replace(R,\" \")}),h=h.slice(c.length));for(g in d.filter)!(e=X[g].exec(h))||j[g]&&!(e=j[g](e))||(c=e.shift(),f.push({value:c,type:g,matches:e}),h=h.slice(c.length));if(!c)break}return b?h.length:h?fb.error(a):z(a,i).slice(0)};function qb(a){for(var b=0,c=a.length,d=\"\";c>b;b++)d+=a[b].value;return d}function rb(a,b,c){var d=b.dir,e=c&&\"parentNode\"===d,f=x++;return b.first?function(b,c,f){while(b=b[d])if(1===b.nodeType||e)return a(b,c,f)}:function(b,c,g){var h,i,j=[w,f];if(g){while(b=b[d])if((1===b.nodeType||e)&&a(b,c,g))return!0}else while(b=b[d])if(1===b.nodeType||e){if(i=b[u]||(b[u]={}),(h=i[d])&&h[0]===w&&h[1]===f)return j[2]=h[2];if(i[d]=j,j[2]=a(b,c,g))return!0}}}function sb(a){return a.length>1?function(b,c,d){var e=a.length;while(e--)if(!a[e](b,c,d))return!1;return!0}:a[0]}function tb(a,b,c){for(var d=0,e=b.length;e>d;d++)fb(a,b[d],c);return c}function ub(a,b,c,d,e){for(var f,g=[],h=0,i=a.length,j=null!=b;i>h;h++)(f=a[h])&&(!c||c(f,d,e))&&(g.push(f),j&&b.push(h));return g}function vb(a,b,c,d,e,f){return d&&!d[u]&&(d=vb(d)),e&&!e[u]&&(e=vb(e,f)),hb(function(f,g,h,i){var j,k,l,m=[],n=[],o=g.length,p=f||tb(b||\"*\",h.nodeType?[h]:h,[]),q=!a||!f&&b?p:ub(p,m,a,h,i),r=c?e||(f?a:o||d)?[]:g:q;if(c&&c(q,r,h,i),d){j=ub(r,n),d(j,[],h,i),k=j.length;while(k--)(l=j[k])&&(r[n[k]]=!(q[n[k]]=l))}if(f){if(e||a){if(e){j=[],k=r.length;while(k--)(l=r[k])&&j.push(q[k]=l);e(null,r=[],j,i)}k=r.length;while(k--)(l=r[k])&&(j=e?K.call(f,l):m[k])>-1&&(f[j]=!(g[j]=l))}}else r=ub(r===g?r.splice(o,r.length):r),e?e(null,g,r,i):I.apply(g,r)})}function wb(a){for(var b,c,e,f=a.length,g=d.relative[a[0].type],h=g||d.relative[\" \"],i=g?1:0,k=rb(function(a){return a===b},h,!0),l=rb(function(a){return K.call(b,a)>-1},h,!0),m=[function(a,c,d){return!g&&(d||c!==j)||((b=c).nodeType?k(a,c,d):l(a,c,d))}];f>i;i++)if(c=d.relative[a[i].type])m=[rb(sb(m),c)];else{if(c=d.filter[a[i].type].apply(null,a[i].matches),c[u]){for(e=++i;f>e;e++)if(d.relative[a[e].type])break;return vb(i>1&&sb(m),i>1&&qb(a.slice(0,i-1).concat({value:\" \"===a[i-2].type?\"*\":\"\"})).replace(R,\"$1\"),c,e>i&&wb(a.slice(i,e)),f>e&&wb(a=a.slice(e)),f>e&&qb(a))}m.push(c)}return sb(m)}function xb(a,b){var c=b.length>0,e=a.length>0,f=function(f,g,h,i,k){var l,m,o,p=0,q=\"0\",r=f&&[],s=[],t=j,u=f||e&&d.find.TAG(\"*\",k),v=w+=null==t?1:Math.random()||.1,x=u.length;for(k&&(j=g!==n&&g);q!==x&&null!=(l=u[q]);q++){if(e&&l){m=0;while(o=a[m++])if(o(l,g,h)){i.push(l);break}k&&(w=v)}c&&((l=!o&&l)&&p--,f&&r.push(l))}if(p+=q,c&&q!==p){m=0;while(o=b[m++])o(r,s,g,h);if(f){if(p>0)while(q--)r[q]||s[q]||(s[q]=G.call(i));s=ub(s)}I.apply(i,s),k&&!f&&s.length>0&&p+b.length>1&&fb.uniqueSort(i)}return k&&(w=v,j=t),r};return c?hb(f):f}return h=fb.compile=function(a,b){var c,d=[],e=[],f=A[a+\" \"];if(!f){b||(b=g(a)),c=b.length;while(c--)f=wb(b[c]),f[u]?d.push(f):e.push(f);f=A(a,xb(e,d)),f.selector=a}return f},i=fb.select=function(a,b,e,f){var i,j,k,l,m,n=\"function\"==typeof a&&a,o=!f&&g(a=n.selector||a);if(e=e||[],1===o.length){if(j=o[0]=o[0].slice(0),j.length>2&&\"ID\"===(k=j[0]).type&&c.getById&&9===b.nodeType&&p&&d.relative[j[1].type]){if(b=(d.find.ID(k.matches[0].replace(cb,db),b)||[])[0],!b)return e;n&&(b=b.parentNode),a=a.slice(j.shift().value.length)}i=X.needsContext.test(a)?0:j.length;while(i--){if(k=j[i],d.relative[l=k.type])break;if((m=d.find[l])&&(f=m(k.matches[0].replace(cb,db),ab.test(j[0].type)&&ob(b.parentNode)||b))){if(j.splice(i,1),a=f.length&&qb(j),!a)return I.apply(e,f),e;break}}}return(n||h(a,o))(f,b,!p,e,ab.test(a)&&ob(b.parentNode)||b),e},c.sortStable=u.split(\"\").sort(B).join(\"\")===u,c.detectDuplicates=!!l,m(),c.sortDetached=ib(function(a){return 1&a.compareDocumentPosition(n.createElement(\"div\"))}),ib(function(a){return a.innerHTML=\"<a href='#'></a>\",\"#\"===a.firstChild.getAttribute(\"href\")})||jb(\"type|href|height|width\",function(a,b,c){return c?void 0:a.getAttribute(b,\"type\"===b.toLowerCase()?1:2)}),c.attributes&&ib(function(a){return a.innerHTML=\"<input/>\",a.firstChild.setAttribute(\"value\",\"\"),\"\"===a.firstChild.getAttribute(\"value\")})||jb(\"value\",function(a,b,c){return c||\"input\"!==a.nodeName.toLowerCase()?void 0:a.defaultValue}),ib(function(a){return null==a.getAttribute(\"disabled\")})||jb(L,function(a,b,c){var d;return c?void 0:a[b]===!0?b.toLowerCase():(d=a.getAttributeNode(b))&&d.specified?d.value:null}),fb}(a);n.find=t,n.expr=t.selectors,n.expr[\":\"]=n.expr.pseudos,n.unique=t.uniqueSort,n.text=t.getText,n.isXMLDoc=t.isXML,n.contains=t.contains;var u=n.expr.match.needsContext,v=/^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,w=/^.[^:#\\[\\.,]*$/;function x(a,b,c){if(n.isFunction(b))return n.grep(a,function(a,d){return!!b.call(a,d,a)!==c});if(b.nodeType)return n.grep(a,function(a){return a===b!==c});if(\"string\"==typeof b){if(w.test(b))return n.filter(b,a,c);b=n.filter(b,a)}return n.grep(a,function(a){return g.call(b,a)>=0!==c})}n.filter=function(a,b,c){var d=b[0];return c&&(a=\":not(\"+a+\")\"),1===b.length&&1===d.nodeType?n.find.matchesSelector(d,a)?[d]:[]:n.find.matches(a,n.grep(b,function(a){return 1===a.nodeType}))},n.fn.extend({find:function(a){var b,c=this.length,d=[],e=this;if(\"string\"!=typeof a)return this.pushStack(n(a).filter(function(){for(b=0;c>b;b++)if(n.contains(e[b],this))return!0}));for(b=0;c>b;b++)n.find(a,e[b],d);return d=this.pushStack(c>1?n.unique(d):d),d.selector=this.selector?this.selector+\" \"+a:a,d},filter:function(a){return this.pushStack(x(this,a||[],!1))},not:function(a){return this.pushStack(x(this,a||[],!0))},is:function(a){return!!x(this,\"string\"==typeof a&&u.test(a)?n(a):a||[],!1).length}});var y,z=/^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]*))$/,A=n.fn.init=function(a,b){var c,d;if(!a)return this;if(\"string\"==typeof a){if(c=\"<\"===a[0]&&\">\"===a[a.length-1]&&a.length>=3?[null,a,null]:z.exec(a),!c||!c[1]&&b)return!b||b.jquery?(b||y).find(a):this.constructor(b).find(a);if(c[1]){if(b=b instanceof n?b[0]:b,n.merge(this,n.parseHTML(c[1],b&&b.nodeType?b.ownerDocument||b:l,!0)),v.test(c[1])&&n.isPlainObject(b))for(c in b)n.isFunction(this[c])?this[c](b[c]):this.attr(c,b[c]);return this}return d=l.getElementById(c[2]),d&&d.parentNode&&(this.length=1,this[0]=d),this.context=l,this.selector=a,this}return a.nodeType?(this.context=this[0]=a,this.length=1,this):n.isFunction(a)?\"undefined\"!=typeof y.ready?y.ready(a):a(n):(void 0!==a.selector&&(this.selector=a.selector,this.context=a.context),n.makeArray(a,this))};A.prototype=n.fn,y=n(l);var B=/^(?:parents|prev(?:Until|All))/,C={children:!0,contents:!0,next:!0,prev:!0};n.extend({dir:function(a,b,c){var d=[],e=void 0!==c;while((a=a[b])&&9!==a.nodeType)if(1===a.nodeType){if(e&&n(a).is(c))break;d.push(a)}return d},sibling:function(a,b){for(var c=[];a;a=a.nextSibling)1===a.nodeType&&a!==b&&c.push(a);return c}}),n.fn.extend({has:function(a){var b=n(a,this),c=b.length;return this.filter(function(){for(var a=0;c>a;a++)if(n.contains(this,b[a]))return!0})},closest:function(a,b){for(var c,d=0,e=this.length,f=[],g=u.test(a)||\"string\"!=typeof a?n(a,b||this.context):0;e>d;d++)for(c=this[d];c&&c!==b;c=c.parentNode)if(c.nodeType<11&&(g?g.index(c)>-1:1===c.nodeType&&n.find.matchesSelector(c,a))){f.push(c);break}return this.pushStack(f.length>1?n.unique(f):f)},index:function(a){return a?\"string\"==typeof a?g.call(n(a),this[0]):g.call(this,a.jquery?a[0]:a):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(a,b){return this.pushStack(n.unique(n.merge(this.get(),n(a,b))))},addBack:function(a){return this.add(null==a?this.prevObject:this.prevObject.filter(a))}});function D(a,b){while((a=a[b])&&1!==a.nodeType);return a}n.each({parent:function(a){var b=a.parentNode;return b&&11!==b.nodeType?b:null},parents:function(a){return n.dir(a,\"parentNode\")},parentsUntil:function(a,b,c){return n.dir(a,\"parentNode\",c)},next:function(a){return D(a,\"nextSibling\")},prev:function(a){return D(a,\"previousSibling\")},nextAll:function(a){return n.dir(a,\"nextSibling\")},prevAll:function(a){return n.dir(a,\"previousSibling\")},nextUntil:function(a,b,c){return n.dir(a,\"nextSibling\",c)},prevUntil:function(a,b,c){return n.dir(a,\"previousSibling\",c)},siblings:function(a){return n.sibling((a.parentNode||{}).firstChild,a)},children:function(a){return n.sibling(a.firstChild)},contents:function(a){return a.contentDocument||n.merge([],a.childNodes)}},function(a,b){n.fn[a]=function(c,d){var e=n.map(this,b,c);return\"Until\"!==a.slice(-5)&&(d=c),d&&\"string\"==typeof d&&(e=n.filter(d,e)),this.length>1&&(C[a]||n.unique(e),B.test(a)&&e.reverse()),this.pushStack(e)}});var E=/\\S+/g,F={};function G(a){var b=F[a]={};return n.each(a.match(E)||[],function(a,c){b[c]=!0}),b}n.Callbacks=function(a){a=\"string\"==typeof a?F[a]||G(a):n.extend({},a);var b,c,d,e,f,g,h=[],i=!a.once&&[],j=function(l){for(b=a.memory&&l,c=!0,g=e||0,e=0,f=h.length,d=!0;h&&f>g;g++)if(h[g].apply(l[0],l[1])===!1&&a.stopOnFalse){b=!1;break}d=!1,h&&(i?i.length&&j(i.shift()):b?h=[]:k.disable())},k={add:function(){if(h){var c=h.length;!function g(b){n.each(b,function(b,c){var d=n.type(c);\"function\"===d?a.unique&&k.has(c)||h.push(c):c&&c.length&&\"string\"!==d&&g(c)})}(arguments),d?f=h.length:b&&(e=c,j(b))}return this},remove:function(){return h&&n.each(arguments,function(a,b){var c;while((c=n.inArray(b,h,c))>-1)h.splice(c,1),d&&(f>=c&&f--,g>=c&&g--)}),this},has:function(a){return a?n.inArray(a,h)>-1:!(!h||!h.length)},empty:function(){return h=[],f=0,this},disable:function(){return h=i=b=void 0,this},disabled:function(){return!h},lock:function(){return i=void 0,b||k.disable(),this},locked:function(){return!i},fireWith:function(a,b){return!h||c&&!i||(b=b||[],b=[a,b.slice?b.slice():b],d?i.push(b):j(b)),this},fire:function(){return k.fireWith(this,arguments),this},fired:function(){return!!c}};return k},n.extend({Deferred:function(a){var b=[[\"resolve\",\"done\",n.Callbacks(\"once memory\"),\"resolved\"],[\"reject\",\"fail\",n.Callbacks(\"once memory\"),\"rejected\"],[\"notify\",\"progress\",n.Callbacks(\"memory\")]],c=\"pending\",d={state:function(){return c},always:function(){return e.done(arguments).fail(arguments),this},then:function(){var a=arguments;return n.Deferred(function(c){n.each(b,function(b,f){var g=n.isFunction(a[b])&&a[b];e[f[1]](function(){var a=g&&g.apply(this,arguments);a&&n.isFunction(a.promise)?a.promise().done(c.resolve).fail(c.reject).progress(c.notify):c[f[0]+\"With\"](this===d?c.promise():this,g?[a]:arguments)})}),a=null}).promise()},promise:function(a){return null!=a?n.extend(a,d):d}},e={};return d.pipe=d.then,n.each(b,function(a,f){var g=f[2],h=f[3];d[f[1]]=g.add,h&&g.add(function(){c=h},b[1^a][2].disable,b[2][2].lock),e[f[0]]=function(){return e[f[0]+\"With\"](this===e?d:this,arguments),this},e[f[0]+\"With\"]=g.fireWith}),d.promise(e),a&&a.call(e,e),e},when:function(a){var b=0,c=d.call(arguments),e=c.length,f=1!==e||a&&n.isFunction(a.promise)?e:0,g=1===f?a:n.Deferred(),h=function(a,b,c){return function(e){b[a]=this,c[a]=arguments.length>1?d.call(arguments):e,c===i?g.notifyWith(b,c):--f||g.resolveWith(b,c)}},i,j,k;if(e>1)for(i=new Array(e),j=new Array(e),k=new Array(e);e>b;b++)c[b]&&n.isFunction(c[b].promise)?c[b].promise().done(h(b,k,c)).fail(g.reject).progress(h(b,j,i)):--f;return f||g.resolveWith(k,c),g.promise()}});var H;n.fn.ready=function(a){return n.ready.promise().done(a),this},n.extend({isReady:!1,readyWait:1,holdReady:function(a){a?n.readyWait++:n.ready(!0)},ready:function(a){(a===!0?--n.readyWait:n.isReady)||(n.isReady=!0,a!==!0&&--n.readyWait>0||(H.resolveWith(l,[n]),n.fn.triggerHandler&&(n(l).triggerHandler(\"ready\"),n(l).off(\"ready\"))))}});function I(){l.removeEventListener(\"DOMContentLoaded\",I,!1),a.removeEventListener(\"load\",I,!1),n.ready()}n.ready.promise=function(b){return H||(H=n.Deferred(),\"complete\"===l.readyState?setTimeout(n.ready):(l.addEventListener(\"DOMContentLoaded\",I,!1),a.addEventListener(\"load\",I,!1))),H.promise(b)},n.ready.promise();var J=n.access=function(a,b,c,d,e,f,g){var h=0,i=a.length,j=null==c;if(\"object\"===n.type(c)){e=!0;for(h in c)n.access(a,b,h,c[h],!0,f,g)}else if(void 0!==d&&(e=!0,n.isFunction(d)||(g=!0),j&&(g?(b.call(a,d),b=null):(j=b,b=function(a,b,c){return j.call(n(a),c)})),b))for(;i>h;h++)b(a[h],c,g?d:d.call(a[h],h,b(a[h],c)));return e?a:j?b.call(a):i?b(a[0],c):f};n.acceptData=function(a){return 1===a.nodeType||9===a.nodeType||!+a.nodeType};function K(){Object.defineProperty(this.cache={},0,{get:function(){return{}}}),this.expando=n.expando+Math.random()}K.uid=1,K.accepts=n.acceptData,K.prototype={key:function(a){if(!K.accepts(a))return 0;var b={},c=a[this.expando];if(!c){c=K.uid++;try{b[this.expando]={value:c},Object.defineProperties(a,b)}catch(d){b[this.expando]=c,n.extend(a,b)}}return this.cache[c]||(this.cache[c]={}),c},set:function(a,b,c){var d,e=this.key(a),f=this.cache[e];if(\"string\"==typeof b)f[b]=c;else if(n.isEmptyObject(f))n.extend(this.cache[e],b);else for(d in b)f[d]=b[d];return f},get:function(a,b){var c=this.cache[this.key(a)];return void 0===b?c:c[b]},access:function(a,b,c){var d;return void 0===b||b&&\"string\"==typeof b&&void 0===c?(d=this.get(a,b),void 0!==d?d:this.get(a,n.camelCase(b))):(this.set(a,b,c),void 0!==c?c:b)},remove:function(a,b){var c,d,e,f=this.key(a),g=this.cache[f];if(void 0===b)this.cache[f]={};else{n.isArray(b)?d=b.concat(b.map(n.camelCase)):(e=n.camelCase(b),b in g?d=[b,e]:(d=e,d=d in g?[d]:d.match(E)||[])),c=d.length;while(c--)delete g[d[c]]}},hasData:function(a){return!n.isEmptyObject(this.cache[a[this.expando]]||{})},discard:function(a){a[this.expando]&&delete this.cache[a[this.expando]]}};var L=new K,M=new K,N=/^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,O=/([A-Z])/g;function P(a,b,c){var d;if(void 0===c&&1===a.nodeType)if(d=\"data-\"+b.replace(O,\"-$1\").toLowerCase(),c=a.getAttribute(d),\"string\"==typeof c){try{c=\"true\"===c?!0:\"false\"===c?!1:\"null\"===c?null:+c+\"\"===c?+c:N.test(c)?n.parseJSON(c):c}catch(e){}M.set(a,b,c)}else c=void 0;return c}n.extend({hasData:function(a){return M.hasData(a)||L.hasData(a)},data:function(a,b,c){return M.access(a,b,c)},removeData:function(a,b){M.remove(a,b)\n    3  },_data:function(a,b,c){return L.access(a,b,c)},_removeData:function(a,b){L.remove(a,b)}}),n.fn.extend({data:function(a,b){var c,d,e,f=this[0],g=f&&f.attributes;if(void 0===a){if(this.length&&(e=M.get(f),1===f.nodeType&&!L.get(f,\"hasDataAttrs\"))){c=g.length;while(c--)g[c]&&(d=g[c].name,0===d.indexOf(\"data-\")&&(d=n.camelCase(d.slice(5)),P(f,d,e[d])));L.set(f,\"hasDataAttrs\",!0)}return e}return\"object\"==typeof a?this.each(function(){M.set(this,a)}):J(this,function(b){var c,d=n.camelCase(a);if(f&&void 0===b){if(c=M.get(f,a),void 0!==c)return c;if(c=M.get(f,d),void 0!==c)return c;if(c=P(f,d,void 0),void 0!==c)return c}else this.each(function(){var c=M.get(this,d);M.set(this,d,b),-1!==a.indexOf(\"-\")&&void 0!==c&&M.set(this,a,b)})},null,b,arguments.length>1,null,!0)},removeData:function(a){return this.each(function(){M.remove(this,a)})}}),n.extend({queue:function(a,b,c){var d;return a?(b=(b||\"fx\")+\"queue\",d=L.get(a,b),c&&(!d||n.isArray(c)?d=L.access(a,b,n.makeArray(c)):d.push(c)),d||[]):void 0},dequeue:function(a,b){b=b||\"fx\";var c=n.queue(a,b),d=c.length,e=c.shift(),f=n._queueHooks(a,b),g=function(){n.dequeue(a,b)};\"inprogress\"===e&&(e=c.shift(),d--),e&&(\"fx\"===b&&c.unshift(\"inprogress\"),delete f.stop,e.call(a,g,f)),!d&&f&&f.empty.fire()},_queueHooks:function(a,b){var c=b+\"queueHooks\";return L.get(a,c)||L.access(a,c,{empty:n.Callbacks(\"once memory\").add(function(){L.remove(a,[b+\"queue\",c])})})}}),n.fn.extend({queue:function(a,b){var c=2;return\"string\"!=typeof a&&(b=a,a=\"fx\",c--),arguments.length<c?n.queue(this[0],a):void 0===b?this:this.each(function(){var c=n.queue(this,a,b);n._queueHooks(this,a),\"fx\"===a&&\"inprogress\"!==c[0]&&n.dequeue(this,a)})},dequeue:function(a){return this.each(function(){n.dequeue(this,a)})},clearQueue:function(a){return this.queue(a||\"fx\",[])},promise:function(a,b){var c,d=1,e=n.Deferred(),f=this,g=this.length,h=function(){--d||e.resolveWith(f,[f])};\"string\"!=typeof a&&(b=a,a=void 0),a=a||\"fx\";while(g--)c=L.get(f[g],a+\"queueHooks\"),c&&c.empty&&(d++,c.empty.add(h));return h(),e.promise(b)}});var Q=/[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/.source,R=[\"Top\",\"Right\",\"Bottom\",\"Left\"],S=function(a,b){return a=b||a,\"none\"===n.css(a,\"display\")||!n.contains(a.ownerDocument,a)},T=/^(?:checkbox|radio)$/i;!function(){var a=l.createDocumentFragment(),b=a.appendChild(l.createElement(\"div\")),c=l.createElement(\"input\");c.setAttribute(\"type\",\"radio\"),c.setAttribute(\"checked\",\"checked\"),c.setAttribute(\"name\",\"t\"),b.appendChild(c),k.checkClone=b.cloneNode(!0).cloneNode(!0).lastChild.checked,b.innerHTML=\"<textarea>x</textarea>\",k.noCloneChecked=!!b.cloneNode(!0).lastChild.defaultValue}();var U=\"undefined\";k.focusinBubbles=\"onfocusin\"in a;var V=/^key/,W=/^(?:mouse|pointer|contextmenu)|click/,X=/^(?:focusinfocus|focusoutblur)$/,Y=/^([^.]*)(?:\\.(.+)|)$/;function Z(){return!0}function $(){return!1}function _(){try{return l.activeElement}catch(a){}}n.event={global:{},add:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,o,p,q,r=L.get(a);if(r){c.handler&&(f=c,c=f.handler,e=f.selector),c.guid||(c.guid=n.guid++),(i=r.events)||(i=r.events={}),(g=r.handle)||(g=r.handle=function(b){return typeof n!==U&&n.event.triggered!==b.type?n.event.dispatch.apply(a,arguments):void 0}),b=(b||\"\").match(E)||[\"\"],j=b.length;while(j--)h=Y.exec(b[j])||[],o=q=h[1],p=(h[2]||\"\").split(\".\").sort(),o&&(l=n.event.special[o]||{},o=(e?l.delegateType:l.bindType)||o,l=n.event.special[o]||{},k=n.extend({type:o,origType:q,data:d,handler:c,guid:c.guid,selector:e,needsContext:e&&n.expr.match.needsContext.test(e),namespace:p.join(\".\")},f),(m=i[o])||(m=i[o]=[],m.delegateCount=0,l.setup&&l.setup.call(a,d,p,g)!==!1||a.addEventListener&&a.addEventListener(o,g,!1)),l.add&&(l.add.call(a,k),k.handler.guid||(k.handler.guid=c.guid)),e?m.splice(m.delegateCount++,0,k):m.push(k),n.event.global[o]=!0)}},remove:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,o,p,q,r=L.hasData(a)&&L.get(a);if(r&&(i=r.events)){b=(b||\"\").match(E)||[\"\"],j=b.length;while(j--)if(h=Y.exec(b[j])||[],o=q=h[1],p=(h[2]||\"\").split(\".\").sort(),o){l=n.event.special[o]||{},o=(d?l.delegateType:l.bindType)||o,m=i[o]||[],h=h[2]&&new RegExp(\"(^|\\\\.)\"+p.join(\"\\\\.(?:.*\\\\.|)\")+\"(\\\\.|$)\"),g=f=m.length;while(f--)k=m[f],!e&&q!==k.origType||c&&c.guid!==k.guid||h&&!h.test(k.namespace)||d&&d!==k.selector&&(\"**\"!==d||!k.selector)||(m.splice(f,1),k.selector&&m.delegateCount--,l.remove&&l.remove.call(a,k));g&&!m.length&&(l.teardown&&l.teardown.call(a,p,r.handle)!==!1||n.removeEvent(a,o,r.handle),delete i[o])}else for(o in i)n.event.remove(a,o+b[j],c,d,!0);n.isEmptyObject(i)&&(delete r.handle,L.remove(a,\"events\"))}},trigger:function(b,c,d,e){var f,g,h,i,k,m,o,p=[d||l],q=j.call(b,\"type\")?b.type:b,r=j.call(b,\"namespace\")?b.namespace.split(\".\"):[];if(g=h=d=d||l,3!==d.nodeType&&8!==d.nodeType&&!X.test(q+n.event.triggered)&&(q.indexOf(\".\")>=0&&(r=q.split(\".\"),q=r.shift(),r.sort()),k=q.indexOf(\":\")<0&&\"on\"+q,b=b[n.expando]?b:new n.Event(q,\"object\"==typeof b&&b),b.isTrigger=e?2:3,b.namespace=r.join(\".\"),b.namespace_re=b.namespace?new RegExp(\"(^|\\\\.)\"+r.join(\"\\\\.(?:.*\\\\.|)\")+\"(\\\\.|$)\"):null,b.result=void 0,b.target||(b.target=d),c=null==c?[b]:n.makeArray(c,[b]),o=n.event.special[q]||{},e||!o.trigger||o.trigger.apply(d,c)!==!1)){if(!e&&!o.noBubble&&!n.isWindow(d)){for(i=o.delegateType||q,X.test(i+q)||(g=g.parentNode);g;g=g.parentNode)p.push(g),h=g;h===(d.ownerDocument||l)&&p.push(h.defaultView||h.parentWindow||a)}f=0;while((g=p[f++])&&!b.isPropagationStopped())b.type=f>1?i:o.bindType||q,m=(L.get(g,\"events\")||{})[b.type]&&L.get(g,\"handle\"),m&&m.apply(g,c),m=k&&g[k],m&&m.apply&&n.acceptData(g)&&(b.result=m.apply(g,c),b.result===!1&&b.preventDefault());return b.type=q,e||b.isDefaultPrevented()||o._default&&o._default.apply(p.pop(),c)!==!1||!n.acceptData(d)||k&&n.isFunction(d[q])&&!n.isWindow(d)&&(h=d[k],h&&(d[k]=null),n.event.triggered=q,d[q](),n.event.triggered=void 0,h&&(d[k]=h)),b.result}},dispatch:function(a){a=n.event.fix(a);var b,c,e,f,g,h=[],i=d.call(arguments),j=(L.get(this,\"events\")||{})[a.type]||[],k=n.event.special[a.type]||{};if(i[0]=a,a.delegateTarget=this,!k.preDispatch||k.preDispatch.call(this,a)!==!1){h=n.event.handlers.call(this,a,j),b=0;while((f=h[b++])&&!a.isPropagationStopped()){a.currentTarget=f.elem,c=0;while((g=f.handlers[c++])&&!a.isImmediatePropagationStopped())(!a.namespace_re||a.namespace_re.test(g.namespace))&&(a.handleObj=g,a.data=g.data,e=((n.event.special[g.origType]||{}).handle||g.handler).apply(f.elem,i),void 0!==e&&(a.result=e)===!1&&(a.preventDefault(),a.stopPropagation()))}return k.postDispatch&&k.postDispatch.call(this,a),a.result}},handlers:function(a,b){var c,d,e,f,g=[],h=b.delegateCount,i=a.target;if(h&&i.nodeType&&(!a.button||\"click\"!==a.type))for(;i!==this;i=i.parentNode||this)if(i.disabled!==!0||\"click\"!==a.type){for(d=[],c=0;h>c;c++)f=b[c],e=f.selector+\" \",void 0===d[e]&&(d[e]=f.needsContext?n(e,this).index(i)>=0:n.find(e,this,null,[i]).length),d[e]&&d.push(f);d.length&&g.push({elem:i,handlers:d})}return h<b.length&&g.push({elem:this,handlers:b.slice(h)}),g},props:\"altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which\".split(\" \"),fixHooks:{},keyHooks:{props:\"char charCode key keyCode\".split(\" \"),filter:function(a,b){return null==a.which&&(a.which=null!=b.charCode?b.charCode:b.keyCode),a}},mouseHooks:{props:\"button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement\".split(\" \"),filter:function(a,b){var c,d,e,f=b.button;return null==a.pageX&&null!=b.clientX&&(c=a.target.ownerDocument||l,d=c.documentElement,e=c.body,a.pageX=b.clientX+(d&&d.scrollLeft||e&&e.scrollLeft||0)-(d&&d.clientLeft||e&&e.clientLeft||0),a.pageY=b.clientY+(d&&d.scrollTop||e&&e.scrollTop||0)-(d&&d.clientTop||e&&e.clientTop||0)),a.which||void 0===f||(a.which=1&f?1:2&f?3:4&f?2:0),a}},fix:function(a){if(a[n.expando])return a;var b,c,d,e=a.type,f=a,g=this.fixHooks[e];g||(this.fixHooks[e]=g=W.test(e)?this.mouseHooks:V.test(e)?this.keyHooks:{}),d=g.props?this.props.concat(g.props):this.props,a=new n.Event(f),b=d.length;while(b--)c=d[b],a[c]=f[c];return a.target||(a.target=l),3===a.target.nodeType&&(a.target=a.target.parentNode),g.filter?g.filter(a,f):a},special:{load:{noBubble:!0},focus:{trigger:function(){return this!==_()&&this.focus?(this.focus(),!1):void 0},delegateType:\"focusin\"},blur:{trigger:function(){return this===_()&&this.blur?(this.blur(),!1):void 0},delegateType:\"focusout\"},click:{trigger:function(){return\"checkbox\"===this.type&&this.click&&n.nodeName(this,\"input\")?(this.click(),!1):void 0},_default:function(a){return n.nodeName(a.target,\"a\")}},beforeunload:{postDispatch:function(a){void 0!==a.result&&a.originalEvent&&(a.originalEvent.returnValue=a.result)}}},simulate:function(a,b,c,d){var e=n.extend(new n.Event,c,{type:a,isSimulated:!0,originalEvent:{}});d?n.event.trigger(e,null,b):n.event.dispatch.call(b,e),e.isDefaultPrevented()&&c.preventDefault()}},n.removeEvent=function(a,b,c){a.removeEventListener&&a.removeEventListener(b,c,!1)},n.Event=function(a,b){return this instanceof n.Event?(a&&a.type?(this.originalEvent=a,this.type=a.type,this.isDefaultPrevented=a.defaultPrevented||void 0===a.defaultPrevented&&a.returnValue===!1?Z:$):this.type=a,b&&n.extend(this,b),this.timeStamp=a&&a.timeStamp||n.now(),void(this[n.expando]=!0)):new n.Event(a,b)},n.Event.prototype={isDefaultPrevented:$,isPropagationStopped:$,isImmediatePropagationStopped:$,preventDefault:function(){var a=this.originalEvent;this.isDefaultPrevented=Z,a&&a.preventDefault&&a.preventDefault()},stopPropagation:function(){var a=this.originalEvent;this.isPropagationStopped=Z,a&&a.stopPropagation&&a.stopPropagation()},stopImmediatePropagation:function(){var a=this.originalEvent;this.isImmediatePropagationStopped=Z,a&&a.stopImmediatePropagation&&a.stopImmediatePropagation(),this.stopPropagation()}},n.each({mouseenter:\"mouseover\",mouseleave:\"mouseout\",pointerenter:\"pointerover\",pointerleave:\"pointerout\"},function(a,b){n.event.special[a]={delegateType:b,bindType:b,handle:function(a){var c,d=this,e=a.relatedTarget,f=a.handleObj;return(!e||e!==d&&!n.contains(d,e))&&(a.type=f.origType,c=f.handler.apply(this,arguments),a.type=b),c}}}),k.focusinBubbles||n.each({focus:\"focusin\",blur:\"focusout\"},function(a,b){var c=function(a){n.event.simulate(b,a.target,n.event.fix(a),!0)};n.event.special[b]={setup:function(){var d=this.ownerDocument||this,e=L.access(d,b);e||d.addEventListener(a,c,!0),L.access(d,b,(e||0)+1)},teardown:function(){var d=this.ownerDocument||this,e=L.access(d,b)-1;e?L.access(d,b,e):(d.removeEventListener(a,c,!0),L.remove(d,b))}}}),n.fn.extend({on:function(a,b,c,d,e){var f,g;if(\"object\"==typeof a){\"string\"!=typeof b&&(c=c||b,b=void 0);for(g in a)this.on(g,b,c,a[g],e);return this}if(null==c&&null==d?(d=b,c=b=void 0):null==d&&(\"string\"==typeof b?(d=c,c=void 0):(d=c,c=b,b=void 0)),d===!1)d=$;else if(!d)return this;return 1===e&&(f=d,d=function(a){return n().off(a),f.apply(this,arguments)},d.guid=f.guid||(f.guid=n.guid++)),this.each(function(){n.event.add(this,a,d,c,b)})},one:function(a,b,c,d){return this.on(a,b,c,d,1)},off:function(a,b,c){var d,e;if(a&&a.preventDefault&&a.handleObj)return d=a.handleObj,n(a.delegateTarget).off(d.namespace?d.origType+\".\"+d.namespace:d.origType,d.selector,d.handler),this;if(\"object\"==typeof a){for(e in a)this.off(e,b,a[e]);return this}return(b===!1||\"function\"==typeof b)&&(c=b,b=void 0),c===!1&&(c=$),this.each(function(){n.event.remove(this,a,c,b)})},trigger:function(a,b){return this.each(function(){n.event.trigger(a,b,this)})},triggerHandler:function(a,b){var c=this[0];return c?n.event.trigger(a,b,c,!0):void 0}});var ab=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi,bb=/<([\\w:]+)/,cb=/<|&#?\\w+;/,db=/<(?:script|style|link)/i,eb=/checked\\s*(?:[^=]|=\\s*.checked.)/i,fb=/^$|\\/(?:java|ecma)script/i,gb=/^true\\/(.*)/,hb=/^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g,ib={option:[1,\"<select multiple='multiple'>\",\"</select>\"],thead:[1,\"<table>\",\"</table>\"],col:[2,\"<table><colgroup>\",\"</colgroup></table>\"],tr:[2,\"<table><tbody>\",\"</tbody></table>\"],td:[3,\"<table><tbody><tr>\",\"</tr></tbody></table>\"],_default:[0,\"\",\"\"]};ib.optgroup=ib.option,ib.tbody=ib.tfoot=ib.colgroup=ib.caption=ib.thead,ib.th=ib.td;function jb(a,b){return n.nodeName(a,\"table\")&&n.nodeName(11!==b.nodeType?b:b.firstChild,\"tr\")?a.getElementsByTagName(\"tbody\")[0]||a.appendChild(a.ownerDocument.createElement(\"tbody\")):a}function kb(a){return a.type=(null!==a.getAttribute(\"type\"))+\"/\"+a.type,a}function lb(a){var b=gb.exec(a.type);return b?a.type=b[1]:a.removeAttribute(\"type\"),a}function mb(a,b){for(var c=0,d=a.length;d>c;c++)L.set(a[c],\"globalEval\",!b||L.get(b[c],\"globalEval\"))}function nb(a,b){var c,d,e,f,g,h,i,j;if(1===b.nodeType){if(L.hasData(a)&&(f=L.access(a),g=L.set(b,f),j=f.events)){delete g.handle,g.events={};for(e in j)for(c=0,d=j[e].length;d>c;c++)n.event.add(b,e,j[e][c])}M.hasData(a)&&(h=M.access(a),i=n.extend({},h),M.set(b,i))}}function ob(a,b){var c=a.getElementsByTagName?a.getElementsByTagName(b||\"*\"):a.querySelectorAll?a.querySelectorAll(b||\"*\"):[];return void 0===b||b&&n.nodeName(a,b)?n.merge([a],c):c}function pb(a,b){var c=b.nodeName.toLowerCase();\"input\"===c&&T.test(a.type)?b.checked=a.checked:(\"input\"===c||\"textarea\"===c)&&(b.defaultValue=a.defaultValue)}n.extend({clone:function(a,b,c){var d,e,f,g,h=a.cloneNode(!0),i=n.contains(a.ownerDocument,a);if(!(k.noCloneChecked||1!==a.nodeType&&11!==a.nodeType||n.isXMLDoc(a)))for(g=ob(h),f=ob(a),d=0,e=f.length;e>d;d++)pb(f[d],g[d]);if(b)if(c)for(f=f||ob(a),g=g||ob(h),d=0,e=f.length;e>d;d++)nb(f[d],g[d]);else nb(a,h);return g=ob(h,\"script\"),g.length>0&&mb(g,!i&&ob(a,\"script\")),h},buildFragment:function(a,b,c,d){for(var e,f,g,h,i,j,k=b.createDocumentFragment(),l=[],m=0,o=a.length;o>m;m++)if(e=a[m],e||0===e)if(\"object\"===n.type(e))n.merge(l,e.nodeType?[e]:e);else if(cb.test(e)){f=f||k.appendChild(b.createElement(\"div\")),g=(bb.exec(e)||[\"\",\"\"])[1].toLowerCase(),h=ib[g]||ib._default,f.innerHTML=h[1]+e.replace(ab,\"<$1></$2>\")+h[2],j=h[0];while(j--)f=f.lastChild;n.merge(l,f.childNodes),f=k.firstChild,f.textContent=\"\"}else l.push(b.createTextNode(e));k.textContent=\"\",m=0;while(e=l[m++])if((!d||-1===n.inArray(e,d))&&(i=n.contains(e.ownerDocument,e),f=ob(k.appendChild(e),\"script\"),i&&mb(f),c)){j=0;while(e=f[j++])fb.test(e.type||\"\")&&c.push(e)}return k},cleanData:function(a){for(var b,c,d,e,f=n.event.special,g=0;void 0!==(c=a[g]);g++){if(n.acceptData(c)&&(e=c[L.expando],e&&(b=L.cache[e]))){if(b.events)for(d in b.events)f[d]?n.event.remove(c,d):n.removeEvent(c,d,b.handle);L.cache[e]&&delete L.cache[e]}delete M.cache[c[M.expando]]}}}),n.fn.extend({text:function(a){return J(this,function(a){return void 0===a?n.text(this):this.empty().each(function(){(1===this.nodeType||11===this.nodeType||9===this.nodeType)&&(this.textContent=a)})},null,a,arguments.length)},append:function(){return this.domManip(arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=jb(this,a);b.appendChild(a)}})},prepend:function(){return this.domManip(arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=jb(this,a);b.insertBefore(a,b.firstChild)}})},before:function(){return this.domManip(arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this)})},after:function(){return this.domManip(arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this.nextSibling)})},remove:function(a,b){for(var c,d=a?n.filter(a,this):this,e=0;null!=(c=d[e]);e++)b||1!==c.nodeType||n.cleanData(ob(c)),c.parentNode&&(b&&n.contains(c.ownerDocument,c)&&mb(ob(c,\"script\")),c.parentNode.removeChild(c));return this},empty:function(){for(var a,b=0;null!=(a=this[b]);b++)1===a.nodeType&&(n.cleanData(ob(a,!1)),a.textContent=\"\");return this},clone:function(a,b){return a=null==a?!1:a,b=null==b?a:b,this.map(function(){return n.clone(this,a,b)})},html:function(a){return J(this,function(a){var b=this[0]||{},c=0,d=this.length;if(void 0===a&&1===b.nodeType)return b.innerHTML;if(\"string\"==typeof a&&!db.test(a)&&!ib[(bb.exec(a)||[\"\",\"\"])[1].toLowerCase()]){a=a.replace(ab,\"<$1></$2>\");try{for(;d>c;c++)b=this[c]||{},1===b.nodeType&&(n.cleanData(ob(b,!1)),b.innerHTML=a);b=0}catch(e){}}b&&this.empty().append(a)},null,a,arguments.length)},replaceWith:function(){var a=arguments[0];return this.domManip(arguments,function(b){a=this.parentNode,n.cleanData(ob(this)),a&&a.replaceChild(b,this)}),a&&(a.length||a.nodeType)?this:this.remove()},detach:function(a){return this.remove(a,!0)},domManip:function(a,b){a=e.apply([],a);var c,d,f,g,h,i,j=0,l=this.length,m=this,o=l-1,p=a[0],q=n.isFunction(p);if(q||l>1&&\"string\"==typeof p&&!k.checkClone&&eb.test(p))return this.each(function(c){var d=m.eq(c);q&&(a[0]=p.call(this,c,d.html())),d.domManip(a,b)});if(l&&(c=n.buildFragment(a,this[0].ownerDocument,!1,this),d=c.firstChild,1===c.childNodes.length&&(c=d),d)){for(f=n.map(ob(c,\"script\"),kb),g=f.length;l>j;j++)h=c,j!==o&&(h=n.clone(h,!0,!0),g&&n.merge(f,ob(h,\"script\"))),b.call(this[j],h,j);if(g)for(i=f[f.length-1].ownerDocument,n.map(f,lb),j=0;g>j;j++)h=f[j],fb.test(h.type||\"\")&&!L.access(h,\"globalEval\")&&n.contains(i,h)&&(h.src?n._evalUrl&&n._evalUrl(h.src):n.globalEval(h.textContent.replace(hb,\"\")))}return this}}),n.each({appendTo:\"append\",prependTo:\"prepend\",insertBefore:\"before\",insertAfter:\"after\",replaceAll:\"replaceWith\"},function(a,b){n.fn[a]=function(a){for(var c,d=[],e=n(a),g=e.length-1,h=0;g>=h;h++)c=h===g?this:this.clone(!0),n(e[h])[b](c),f.apply(d,c.get());return this.pushStack(d)}});var qb,rb={};function sb(b,c){var d,e=n(c.createElement(b)).appendTo(c.body),f=a.getDefaultComputedStyle&&(d=a.getDefaultComputedStyle(e[0]))?d.display:n.css(e[0],\"display\");return e.detach(),f}function tb(a){var b=l,c=rb[a];return c||(c=sb(a,b),\"none\"!==c&&c||(qb=(qb||n(\"<iframe frameborder='0' width='0' height='0'/>\")).appendTo(b.documentElement),b=qb[0].contentDocument,b.write(),b.close(),c=sb(a,b),qb.detach()),rb[a]=c),c}var ub=/^margin/,vb=new RegExp(\"^(\"+Q+\")(?!px)[a-z%]+$\",\"i\"),wb=function(a){return a.ownerDocument.defaultView.getComputedStyle(a,null)};function xb(a,b,c){var d,e,f,g,h=a.style;return c=c||wb(a),c&&(g=c.getPropertyValue(b)||c[b]),c&&(\"\"!==g||n.contains(a.ownerDocument,a)||(g=n.style(a,b)),vb.test(g)&&ub.test(b)&&(d=h.width,e=h.minWidth,f=h.maxWidth,h.minWidth=h.maxWidth=h.width=g,g=c.width,h.width=d,h.minWidth=e,h.maxWidth=f)),void 0!==g?g+\"\":g}function yb(a,b){return{get:function(){return a()?void delete this.get:(this.get=b).apply(this,arguments)}}}!function(){var b,c,d=l.documentElement,e=l.createElement(\"div\"),f=l.createElement(\"div\");if(f.style){f.style.backgroundClip=\"content-box\",f.cloneNode(!0).style.backgroundClip=\"\",k.clearCloneStyle=\"content-box\"===f.style.backgroundClip,e.style.cssText=\"border:0;width:0;height:0;top:0;left:-9999px;margin-top:1px;position:absolute\",e.appendChild(f);function g(){f.style.cssText=\"-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;display:block;margin-top:1%;top:1%;border:1px;padding:1px;width:4px;position:absolute\",f.innerHTML=\"\",d.appendChild(e);var g=a.getComputedStyle(f,null);b=\"1%\"!==g.top,c=\"4px\"===g.width,d.removeChild(e)}a.getComputedStyle&&n.extend(k,{pixelPosition:function(){return g(),b},boxSizingReliable:function(){return null==c&&g(),c},reliableMarginRight:function(){var b,c=f.appendChild(l.createElement(\"div\"));return c.style.cssText=f.style.cssText=\"-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0\",c.style.marginRight=c.style.width=\"0\",f.style.width=\"1px\",d.appendChild(e),b=!parseFloat(a.getComputedStyle(c,null).marginRight),d.removeChild(e),b}})}}(),n.swap=function(a,b,c,d){var e,f,g={};for(f in b)g[f]=a.style[f],a.style[f]=b[f];e=c.apply(a,d||[]);for(f in b)a.style[f]=g[f];return e};var zb=/^(none|table(?!-c[ea]).+)/,Ab=new RegExp(\"^(\"+Q+\")(.*)$\",\"i\"),Bb=new RegExp(\"^([+-])=(\"+Q+\")\",\"i\"),Cb={position:\"absolute\",visibility:\"hidden\",display:\"block\"},Db={letterSpacing:\"0\",fontWeight:\"400\"},Eb=[\"Webkit\",\"O\",\"Moz\",\"ms\"];function Fb(a,b){if(b in a)return b;var c=b[0].toUpperCase()+b.slice(1),d=b,e=Eb.length;while(e--)if(b=Eb[e]+c,b in a)return b;return d}function Gb(a,b,c){var d=Ab.exec(b);return d?Math.max(0,d[1]-(c||0))+(d[2]||\"px\"):b}function Hb(a,b,c,d,e){for(var f=c===(d?\"border\":\"content\")?4:\"width\"===b?1:0,g=0;4>f;f+=2)\"margin\"===c&&(g+=n.css(a,c+R[f],!0,e)),d?(\"content\"===c&&(g-=n.css(a,\"padding\"+R[f],!0,e)),\"margin\"!==c&&(g-=n.css(a,\"border\"+R[f]+\"Width\",!0,e))):(g+=n.css(a,\"padding\"+R[f],!0,e),\"padding\"!==c&&(g+=n.css(a,\"border\"+R[f]+\"Width\",!0,e)));return g}function Ib(a,b,c){var d=!0,e=\"width\"===b?a.offsetWidth:a.offsetHeight,f=wb(a),g=\"border-box\"===n.css(a,\"boxSizing\",!1,f);if(0>=e||null==e){if(e=xb(a,b,f),(0>e||null==e)&&(e=a.style[b]),vb.test(e))return e;d=g&&(k.boxSizingReliable()||e===a.style[b]),e=parseFloat(e)||0}return e+Hb(a,b,c||(g?\"border\":\"content\"),d,f)+\"px\"}function Jb(a,b){for(var c,d,e,f=[],g=0,h=a.length;h>g;g++)d=a[g],d.style&&(f[g]=L.get(d,\"olddisplay\"),c=d.style.display,b?(f[g]||\"none\"!==c||(d.style.display=\"\"),\"\"===d.style.display&&S(d)&&(f[g]=L.access(d,\"olddisplay\",tb(d.nodeName)))):(e=S(d),\"none\"===c&&e||L.set(d,\"olddisplay\",e?c:n.css(d,\"display\"))));for(g=0;h>g;g++)d=a[g],d.style&&(b&&\"none\"!==d.style.display&&\"\"!==d.style.display||(d.style.display=b?f[g]||\"\":\"none\"));return a}n.extend({cssHooks:{opacity:{get:function(a,b){if(b){var c=xb(a,\"opacity\");return\"\"===c?\"1\":c}}}},cssNumber:{columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{\"float\":\"cssFloat\"},style:function(a,b,c,d){if(a&&3!==a.nodeType&&8!==a.nodeType&&a.style){var e,f,g,h=n.camelCase(b),i=a.style;return b=n.cssProps[h]||(n.cssProps[h]=Fb(i,h)),g=n.cssHooks[b]||n.cssHooks[h],void 0===c?g&&\"get\"in g&&void 0!==(e=g.get(a,!1,d))?e:i[b]:(f=typeof c,\"string\"===f&&(e=Bb.exec(c))&&(c=(e[1]+1)*e[2]+parseFloat(n.css(a,b)),f=\"number\"),null!=c&&c===c&&(\"number\"!==f||n.cssNumber[h]||(c+=\"px\"),k.clearCloneStyle||\"\"!==c||0!==b.indexOf(\"background\")||(i[b]=\"inherit\"),g&&\"set\"in g&&void 0===(c=g.set(a,c,d))||(i[b]=c)),void 0)}},css:function(a,b,c,d){var e,f,g,h=n.camelCase(b);return b=n.cssProps[h]||(n.cssProps[h]=Fb(a.style,h)),g=n.cssHooks[b]||n.cssHooks[h],g&&\"get\"in g&&(e=g.get(a,!0,c)),void 0===e&&(e=xb(a,b,d)),\"normal\"===e&&b in Db&&(e=Db[b]),\"\"===c||c?(f=parseFloat(e),c===!0||n.isNumeric(f)?f||0:e):e}}),n.each([\"height\",\"width\"],function(a,b){n.cssHooks[b]={get:function(a,c,d){return c?zb.test(n.css(a,\"display\"))&&0===a.offsetWidth?n.swap(a,Cb,function(){return Ib(a,b,d)}):Ib(a,b,d):void 0},set:function(a,c,d){var e=d&&wb(a);return Gb(a,c,d?Hb(a,b,d,\"border-box\"===n.css(a,\"boxSizing\",!1,e),e):0)}}}),n.cssHooks.marginRight=yb(k.reliableMarginRight,function(a,b){return b?n.swap(a,{display:\"inline-block\"},xb,[a,\"marginRight\"]):void 0}),n.each({margin:\"\",padding:\"\",border:\"Width\"},function(a,b){n.cssHooks[a+b]={expand:function(c){for(var d=0,e={},f=\"string\"==typeof c?c.split(\" \"):[c];4>d;d++)e[a+R[d]+b]=f[d]||f[d-2]||f[0];return e}},ub.test(a)||(n.cssHooks[a+b].set=Gb)}),n.fn.extend({css:function(a,b){return J(this,function(a,b,c){var d,e,f={},g=0;if(n.isArray(b)){for(d=wb(a),e=b.length;e>g;g++)f[b[g]]=n.css(a,b[g],!1,d);return f}return void 0!==c?n.style(a,b,c):n.css(a,b)},a,b,arguments.length>1)},show:function(){return Jb(this,!0)},hide:function(){return Jb(this)},toggle:function(a){return\"boolean\"==typeof a?a?this.show():this.hide():this.each(function(){S(this)?n(this).show():n(this).hide()})}});function Kb(a,b,c,d,e){return new Kb.prototype.init(a,b,c,d,e)}n.Tween=Kb,Kb.prototype={constructor:Kb,init:function(a,b,c,d,e,f){this.elem=a,this.prop=c,this.easing=e||\"swing\",this.options=b,this.start=this.now=this.cur(),this.end=d,this.unit=f||(n.cssNumber[c]?\"\":\"px\")},cur:function(){var a=Kb.propHooks[this.prop];return a&&a.get?a.get(this):Kb.propHooks._default.get(this)},run:function(a){var b,c=Kb.propHooks[this.prop];return this.pos=b=this.options.duration?n.easing[this.easing](a,this.options.duration*a,0,1,this.options.duration):a,this.now=(this.end-this.start)*b+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),c&&c.set?c.set(this):Kb.propHooks._default.set(this),this}},Kb.prototype.init.prototype=Kb.prototype,Kb.propHooks={_default:{get:function(a){var b;return null==a.elem[a.prop]||a.elem.style&&null!=a.elem.style[a.prop]?(b=n.css(a.elem,a.prop,\"\"),b&&\"auto\"!==b?b:0):a.elem[a.prop]},set:function(a){n.fx.step[a.prop]?n.fx.step[a.prop](a):a.elem.style&&(null!=a.elem.style[n.cssProps[a.prop]]||n.cssHooks[a.prop])?n.style(a.elem,a.prop,a.now+a.unit):a.elem[a.prop]=a.now}}},Kb.propHooks.scrollTop=Kb.propHooks.scrollLeft={set:function(a){a.elem.nodeType&&a.elem.parentNode&&(a.elem[a.prop]=a.now)}},n.easing={linear:function(a){return a},swing:function(a){return.5-Math.cos(a*Math.PI)/2}},n.fx=Kb.prototype.init,n.fx.step={};var Lb,Mb,Nb=/^(?:toggle|show|hide)$/,Ob=new RegExp(\"^(?:([+-])=|)(\"+Q+\")([a-z%]*)$\",\"i\"),Pb=/queueHooks$/,Qb=[Vb],Rb={\"*\":[function(a,b){var c=this.createTween(a,b),d=c.cur(),e=Ob.exec(b),f=e&&e[3]||(n.cssNumber[a]?\"\":\"px\"),g=(n.cssNumber[a]||\"px\"!==f&&+d)&&Ob.exec(n.css(c.elem,a)),h=1,i=20;if(g&&g[3]!==f){f=f||g[3],e=e||[],g=+d||1;do h=h||\".5\",g/=h,n.style(c.elem,a,g+f);while(h!==(h=c.cur()/d)&&1!==h&&--i)}return e&&(g=c.start=+g||+d||0,c.unit=f,c.end=e[1]?g+(e[1]+1)*e[2]:+e[2]),c}]};function Sb(){return setTimeout(function(){Lb=void 0}),Lb=n.now()}function Tb(a,b){var c,d=0,e={height:a};for(b=b?1:0;4>d;d+=2-b)c=R[d],e[\"margin\"+c]=e[\"padding\"+c]=a;return b&&(e.opacity=e.width=a),e}function Ub(a,b,c){for(var d,e=(Rb[b]||[]).concat(Rb[\"*\"]),f=0,g=e.length;g>f;f++)if(d=e[f].call(c,b,a))return d}function Vb(a,b,c){var d,e,f,g,h,i,j,k,l=this,m={},o=a.style,p=a.nodeType&&S(a),q=L.get(a,\"fxshow\");c.queue||(h=n._queueHooks(a,\"fx\"),null==h.unqueued&&(h.unqueued=0,i=h.empty.fire,h.empty.fire=function(){h.unqueued||i()}),h.unqueued++,l.always(function(){l.always(function(){h.unqueued--,n.queue(a,\"fx\").length||h.empty.fire()})})),1===a.nodeType&&(\"height\"in b||\"width\"in b)&&(c.overflow=[o.overflow,o.overflowX,o.overflowY],j=n.css(a,\"display\"),k=\"none\"===j?L.get(a,\"olddisplay\")||tb(a.nodeName):j,\"inline\"===k&&\"none\"===n.css(a,\"float\")&&(o.display=\"inline-block\")),c.overflow&&(o.overflow=\"hidden\",l.always(function(){o.overflow=c.overflow[0],o.overflowX=c.overflow[1],o.overflowY=c.overflow[2]}));for(d in b)if(e=b[d],Nb.exec(e)){if(delete b[d],f=f||\"toggle\"===e,e===(p?\"hide\":\"show\")){if(\"show\"!==e||!q||void 0===q[d])continue;p=!0}m[d]=q&&q[d]||n.style(a,d)}else j=void 0;if(n.isEmptyObject(m))\"inline\"===(\"none\"===j?tb(a.nodeName):j)&&(o.display=j);else{q?\"hidden\"in q&&(p=q.hidden):q=L.access(a,\"fxshow\",{}),f&&(q.hidden=!p),p?n(a).show():l.done(function(){n(a).hide()}),l.done(function(){var b;L.remove(a,\"fxshow\");for(b in m)n.style(a,b,m[b])});for(d in m)g=Ub(p?q[d]:0,d,l),d in q||(q[d]=g.start,p&&(g.end=g.start,g.start=\"width\"===d||\"height\"===d?1:0))}}function Wb(a,b){var c,d,e,f,g;for(c in a)if(d=n.camelCase(c),e=b[d],f=a[c],n.isArray(f)&&(e=f[1],f=a[c]=f[0]),c!==d&&(a[d]=f,delete a[c]),g=n.cssHooks[d],g&&\"expand\"in g){f=g.expand(f),delete a[d];for(c in f)c in a||(a[c]=f[c],b[c]=e)}else b[d]=e}function Xb(a,b,c){var d,e,f=0,g=Qb.length,h=n.Deferred().always(function(){delete i.elem}),i=function(){if(e)return!1;for(var b=Lb||Sb(),c=Math.max(0,j.startTime+j.duration-b),d=c/j.duration||0,f=1-d,g=0,i=j.tweens.length;i>g;g++)j.tweens[g].run(f);return h.notifyWith(a,[j,f,c]),1>f&&i?c:(h.resolveWith(a,[j]),!1)},j=h.promise({elem:a,props:n.extend({},b),opts:n.extend(!0,{specialEasing:{}},c),originalProperties:b,originalOptions:c,startTime:Lb||Sb(),duration:c.duration,tweens:[],createTween:function(b,c){var d=n.Tween(a,j.opts,b,c,j.opts.specialEasing[b]||j.opts.easing);return j.tweens.push(d),d},stop:function(b){var c=0,d=b?j.tweens.length:0;if(e)return this;for(e=!0;d>c;c++)j.tweens[c].run(1);return b?h.resolveWith(a,[j,b]):h.rejectWith(a,[j,b]),this}}),k=j.props;for(Wb(k,j.opts.specialEasing);g>f;f++)if(d=Qb[f].call(j,a,k,j.opts))return d;return n.map(k,Ub,j),n.isFunction(j.opts.start)&&j.opts.start.call(a,j),n.fx.timer(n.extend(i,{elem:a,anim:j,queue:j.opts.queue})),j.progress(j.opts.progress).done(j.opts.done,j.opts.complete).fail(j.opts.fail).always(j.opts.always)}n.Animation=n.extend(Xb,{tweener:function(a,b){n.isFunction(a)?(b=a,a=[\"*\"]):a=a.split(\" \");for(var c,d=0,e=a.length;e>d;d++)c=a[d],Rb[c]=Rb[c]||[],Rb[c].unshift(b)},prefilter:function(a,b){b?Qb.unshift(a):Qb.push(a)}}),n.speed=function(a,b,c){var d=a&&\"object\"==typeof a?n.extend({},a):{complete:c||!c&&b||n.isFunction(a)&&a,duration:a,easing:c&&b||b&&!n.isFunction(b)&&b};return d.duration=n.fx.off?0:\"number\"==typeof d.duration?d.duration:d.duration in n.fx.speeds?n.fx.speeds[d.duration]:n.fx.speeds._default,(null==d.queue||d.queue===!0)&&(d.queue=\"fx\"),d.old=d.complete,d.complete=function(){n.isFunction(d.old)&&d.old.call(this),d.queue&&n.dequeue(this,d.queue)},d},n.fn.extend({fadeTo:function(a,b,c,d){return this.filter(S).css(\"opacity\",0).show().end().animate({opacity:b},a,c,d)},animate:function(a,b,c,d){var e=n.isEmptyObject(a),f=n.speed(b,c,d),g=function(){var b=Xb(this,n.extend({},a),f);(e||L.get(this,\"finish\"))&&b.stop(!0)};return g.finish=g,e||f.queue===!1?this.each(g):this.queue(f.queue,g)},stop:function(a,b,c){var d=function(a){var b=a.stop;delete a.stop,b(c)};return\"string\"!=typeof a&&(c=b,b=a,a=void 0),b&&a!==!1&&this.queue(a||\"fx\",[]),this.each(function(){var b=!0,e=null!=a&&a+\"queueHooks\",f=n.timers,g=L.get(this);if(e)g[e]&&g[e].stop&&d(g[e]);else for(e in g)g[e]&&g[e].stop&&Pb.test(e)&&d(g[e]);for(e=f.length;e--;)f[e].elem!==this||null!=a&&f[e].queue!==a||(f[e].anim.stop(c),b=!1,f.splice(e,1));(b||!c)&&n.dequeue(this,a)})},finish:function(a){return a!==!1&&(a=a||\"fx\"),this.each(function(){var b,c=L.get(this),d=c[a+\"queue\"],e=c[a+\"queueHooks\"],f=n.timers,g=d?d.length:0;for(c.finish=!0,n.queue(this,a,[]),e&&e.stop&&e.stop.call(this,!0),b=f.length;b--;)f[b].elem===this&&f[b].queue===a&&(f[b].anim.stop(!0),f.splice(b,1));for(b=0;g>b;b++)d[b]&&d[b].finish&&d[b].finish.call(this);delete c.finish})}}),n.each([\"toggle\",\"show\",\"hide\"],function(a,b){var c=n.fn[b];n.fn[b]=function(a,d,e){return null==a||\"boolean\"==typeof a?c.apply(this,arguments):this.animate(Tb(b,!0),a,d,e)}}),n.each({slideDown:Tb(\"show\"),slideUp:Tb(\"hide\"),slideToggle:Tb(\"toggle\"),fadeIn:{opacity:\"show\"},fadeOut:{opacity:\"hide\"},fadeToggle:{opacity:\"toggle\"}},function(a,b){n.fn[a]=function(a,c,d){return this.animate(b,a,c,d)}}),n.timers=[],n.fx.tick=function(){var a,b=0,c=n.timers;for(Lb=n.now();b<c.length;b++)a=c[b],a()||c[b]!==a||c.splice(b--,1);c.length||n.fx.stop(),Lb=void 0},n.fx.timer=function(a){n.timers.push(a),a()?n.fx.start():n.timers.pop()},n.fx.interval=13,n.fx.start=function(){Mb||(Mb=setInterval(n.fx.tick,n.fx.interval))},n.fx.stop=function(){clearInterval(Mb),Mb=null},n.fx.speeds={slow:600,fast:200,_default:400},n.fn.delay=function(a,b){return a=n.fx?n.fx.speeds[a]||a:a,b=b||\"fx\",this.queue(b,function(b,c){var d=setTimeout(b,a);c.stop=function(){clearTimeout(d)}})},function(){var a=l.createElement(\"input\"),b=l.createElement(\"select\"),c=b.appendChild(l.createElement(\"option\"));a.type=\"checkbox\",k.checkOn=\"\"!==a.value,k.optSelected=c.selected,b.disabled=!0,k.optDisabled=!c.disabled,a=l.createElement(\"input\"),a.value=\"t\",a.type=\"radio\",k.radioValue=\"t\"===a.value}();var Yb,Zb,$b=n.expr.attrHandle;n.fn.extend({attr:function(a,b){return J(this,n.attr,a,b,arguments.length>1)},removeAttr:function(a){return this.each(function(){n.removeAttr(this,a)})}}),n.extend({attr:function(a,b,c){var d,e,f=a.nodeType;if(a&&3!==f&&8!==f&&2!==f)return typeof a.getAttribute===U?n.prop(a,b,c):(1===f&&n.isXMLDoc(a)||(b=b.toLowerCase(),d=n.attrHooks[b]||(n.expr.match.bool.test(b)?Zb:Yb)),void 0===c?d&&\"get\"in d&&null!==(e=d.get(a,b))?e:(e=n.find.attr(a,b),null==e?void 0:e):null!==c?d&&\"set\"in d&&void 0!==(e=d.set(a,c,b))?e:(a.setAttribute(b,c+\"\"),c):void n.removeAttr(a,b))\n    4: },removeAttr:function(a,b){var c,d,e=0,f=b&&b.match(E);if(f&&1===a.nodeType)while(c=f[e++])d=n.propFix[c]||c,n.expr.match.bool.test(c)&&(a[d]=!1),a.removeAttribute(c)},attrHooks:{type:{set:function(a,b){if(!k.radioValue&&\"radio\"===b&&n.nodeName(a,\"input\")){var c=a.value;return a.setAttribute(\"type\",b),c&&(a.value=c),b}}}}}),Zb={set:function(a,b,c){return b===!1?n.removeAttr(a,c):a.setAttribute(c,c),c}},n.each(n.expr.match.bool.source.match(/\\w+/g),function(a,b){var c=$b[b]||n.find.attr;$b[b]=function(a,b,d){var e,f;return d||(f=$b[b],$b[b]=e,e=null!=c(a,b,d)?b.toLowerCase():null,$b[b]=f),e}});var _b=/^(?:input|select|textarea|button)$/i;n.fn.extend({prop:function(a,b){return J(this,n.prop,a,b,arguments.length>1)},removeProp:function(a){return this.each(function(){delete this[n.propFix[a]||a]})}}),n.extend({propFix:{\"for\":\"htmlFor\",\"class\":\"className\"},prop:function(a,b,c){var d,e,f,g=a.nodeType;if(a&&3!==g&&8!==g&&2!==g)return f=1!==g||!n.isXMLDoc(a),f&&(b=n.propFix[b]||b,e=n.propHooks[b]),void 0!==c?e&&\"set\"in e&&void 0!==(d=e.set(a,c,b))?d:a[b]=c:e&&\"get\"in e&&null!==(d=e.get(a,b))?d:a[b]},propHooks:{tabIndex:{get:function(a){return a.hasAttribute(\"tabindex\")||_b.test(a.nodeName)||a.href?a.tabIndex:-1}}}}),k.optSelected||(n.propHooks.selected={get:function(a){var b=a.parentNode;return b&&b.parentNode&&b.parentNode.selectedIndex,null}}),n.each([\"tabIndex\",\"readOnly\",\"maxLength\",\"cellSpacing\",\"cellPadding\",\"rowSpan\",\"colSpan\",\"useMap\",\"frameBorder\",\"contentEditable\"],function(){n.propFix[this.toLowerCase()]=this});var ac=/[\\t\\r\\n\\f]/g;n.fn.extend({addClass:function(a){var b,c,d,e,f,g,h=\"string\"==typeof a&&a,i=0,j=this.length;if(n.isFunction(a))return this.each(function(b){n(this).addClass(a.call(this,b,this.className))});if(h)for(b=(a||\"\").match(E)||[];j>i;i++)if(c=this[i],d=1===c.nodeType&&(c.className?(\" \"+c.className+\" \").replace(ac,\" \"):\" \")){f=0;while(e=b[f++])d.indexOf(\" \"+e+\" \")<0&&(d+=e+\" \");g=n.trim(d),c.className!==g&&(c.className=g)}return this},removeClass:function(a){var b,c,d,e,f,g,h=0===arguments.length||\"string\"==typeof a&&a,i=0,j=this.length;if(n.isFunction(a))return this.each(function(b){n(this).removeClass(a.call(this,b,this.className))});if(h)for(b=(a||\"\").match(E)||[];j>i;i++)if(c=this[i],d=1===c.nodeType&&(c.className?(\" \"+c.className+\" \").replace(ac,\" \"):\"\")){f=0;while(e=b[f++])while(d.indexOf(\" \"+e+\" \")>=0)d=d.replace(\" \"+e+\" \",\" \");g=a?n.trim(d):\"\",c.className!==g&&(c.className=g)}return this},toggleClass:function(a,b){var c=typeof a;return\"boolean\"==typeof b&&\"string\"===c?b?this.addClass(a):this.removeClass(a):this.each(n.isFunction(a)?function(c){n(this).toggleClass(a.call(this,c,this.className,b),b)}:function(){if(\"string\"===c){var b,d=0,e=n(this),f=a.match(E)||[];while(b=f[d++])e.hasClass(b)?e.removeClass(b):e.addClass(b)}else(c===U||\"boolean\"===c)&&(this.className&&L.set(this,\"__className__\",this.className),this.className=this.className||a===!1?\"\":L.get(this,\"__className__\")||\"\")})},hasClass:function(a){for(var b=\" \"+a+\" \",c=0,d=this.length;d>c;c++)if(1===this[c].nodeType&&(\" \"+this[c].className+\" \").replace(ac,\" \").indexOf(b)>=0)return!0;return!1}});var bc=/\\r/g;n.fn.extend({val:function(a){var b,c,d,e=this[0];{if(arguments.length)return d=n.isFunction(a),this.each(function(c){var e;1===this.nodeType&&(e=d?a.call(this,c,n(this).val()):a,null==e?e=\"\":\"number\"==typeof e?e+=\"\":n.isArray(e)&&(e=n.map(e,function(a){return null==a?\"\":a+\"\"})),b=n.valHooks[this.type]||n.valHooks[this.nodeName.toLowerCase()],b&&\"set\"in b&&void 0!==b.set(this,e,\"value\")||(this.value=e))});if(e)return b=n.valHooks[e.type]||n.valHooks[e.nodeName.toLowerCase()],b&&\"get\"in b&&void 0!==(c=b.get(e,\"value\"))?c:(c=e.value,\"string\"==typeof c?c.replace(bc,\"\"):null==c?\"\":c)}}}),n.extend({valHooks:{option:{get:function(a){var b=n.find.attr(a,\"value\");return null!=b?b:n.trim(n.text(a))}},select:{get:function(a){for(var b,c,d=a.options,e=a.selectedIndex,f=\"select-one\"===a.type||0>e,g=f?null:[],h=f?e+1:d.length,i=0>e?h:f?e:0;h>i;i++)if(c=d[i],!(!c.selected&&i!==e||(k.optDisabled?c.disabled:null!==c.getAttribute(\"disabled\"))||c.parentNode.disabled&&n.nodeName(c.parentNode,\"optgroup\"))){if(b=n(c).val(),f)return b;g.push(b)}return g},set:function(a,b){var c,d,e=a.options,f=n.makeArray(b),g=e.length;while(g--)d=e[g],(d.selected=n.inArray(d.value,f)>=0)&&(c=!0);return c||(a.selectedIndex=-1),f}}}}),n.each([\"radio\",\"checkbox\"],function(){n.valHooks[this]={set:function(a,b){return n.isArray(b)?a.checked=n.inArray(n(a).val(),b)>=0:void 0}},k.checkOn||(n.valHooks[this].get=function(a){return null===a.getAttribute(\"value\")?\"on\":a.value})}),n.each(\"blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu\".split(\" \"),function(a,b){n.fn[b]=function(a,c){return arguments.length>0?this.on(b,null,a,c):this.trigger(b)}}),n.fn.extend({hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)},bind:function(a,b,c){return this.on(a,null,b,c)},unbind:function(a,b){return this.off(a,null,b)},delegate:function(a,b,c,d){return this.on(b,a,c,d)},undelegate:function(a,b,c){return 1===arguments.length?this.off(a,\"**\"):this.off(b,a||\"**\",c)}});var cc=n.now(),dc=/\\?/;n.parseJSON=function(a){return JSON.parse(a+\"\")},n.parseXML=function(a){var b,c;if(!a||\"string\"!=typeof a)return null;try{c=new DOMParser,b=c.parseFromString(a,\"text/xml\")}catch(d){b=void 0}return(!b||b.getElementsByTagName(\"parsererror\").length)&&n.error(\"Invalid XML: \"+a),b};var ec,fc,gc=/#.*$/,hc=/([?&])_=[^&]*/,ic=/^(.*?):[ \\t]*([^\\r\\n]*)$/gm,jc=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,kc=/^(?:GET|HEAD)$/,lc=/^\\/\\//,mc=/^([\\w.+-]+:)(?:\\/\\/(?:[^\\/?#]*@|)([^\\/?#:]*)(?::(\\d+)|)|)/,nc={},oc={},pc=\"*/\".concat(\"*\");try{fc=location.href}catch(qc){fc=l.createElement(\"a\"),fc.href=\"\",fc=fc.href}ec=mc.exec(fc.toLowerCase())||[];function rc(a){return function(b,c){\"string\"!=typeof b&&(c=b,b=\"*\");var d,e=0,f=b.toLowerCase().match(E)||[];if(n.isFunction(c))while(d=f[e++])\"+\"===d[0]?(d=d.slice(1)||\"*\",(a[d]=a[d]||[]).unshift(c)):(a[d]=a[d]||[]).push(c)}}function sc(a,b,c,d){var e={},f=a===oc;function g(h){var i;return e[h]=!0,n.each(a[h]||[],function(a,h){var j=h(b,c,d);return\"string\"!=typeof j||f||e[j]?f?!(i=j):void 0:(b.dataTypes.unshift(j),g(j),!1)}),i}return g(b.dataTypes[0])||!e[\"*\"]&&g(\"*\")}function tc(a,b){var c,d,e=n.ajaxSettings.flatOptions||{};for(c in b)void 0!==b[c]&&((e[c]?a:d||(d={}))[c]=b[c]);return d&&n.extend(!0,a,d),a}function uc(a,b,c){var d,e,f,g,h=a.contents,i=a.dataTypes;while(\"*\"===i[0])i.shift(),void 0===d&&(d=a.mimeType||b.getResponseHeader(\"Content-Type\"));if(d)for(e in h)if(h[e]&&h[e].test(d)){i.unshift(e);break}if(i[0]in c)f=i[0];else{for(e in c){if(!i[0]||a.converters[e+\" \"+i[0]]){f=e;break}g||(g=e)}f=f||g}return f?(f!==i[0]&&i.unshift(f),c[f]):void 0}function vc(a,b,c,d){var e,f,g,h,i,j={},k=a.dataTypes.slice();if(k[1])for(g in a.converters)j[g.toLowerCase()]=a.converters[g];f=k.shift();while(f)if(a.responseFields[f]&&(c[a.responseFields[f]]=b),!i&&d&&a.dataFilter&&(b=a.dataFilter(b,a.dataType)),i=f,f=k.shift())if(\"*\"===f)f=i;else if(\"*\"!==i&&i!==f){if(g=j[i+\" \"+f]||j[\"* \"+f],!g)for(e in j)if(h=e.split(\" \"),h[1]===f&&(g=j[i+\" \"+h[0]]||j[\"* \"+h[0]])){g===!0?g=j[e]:j[e]!==!0&&(f=h[0],k.unshift(h[1]));break}if(g!==!0)if(g&&a[\"throws\"])b=g(b);else try{b=g(b)}catch(l){return{state:\"parsererror\",error:g?l:\"No conversion from \"+i+\" to \"+f}}}return{state:\"success\",data:b}}n.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:fc,type:\"GET\",isLocal:jc.test(ec[1]),global:!0,processData:!0,async:!0,contentType:\"application/x-www-form-urlencoded; charset=UTF-8\",accepts:{\"*\":pc,text:\"text/plain\",html:\"text/html\",xml:\"application/xml, text/xml\",json:\"application/json, text/javascript\"},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:\"responseXML\",text:\"responseText\",json:\"responseJSON\"},converters:{\"* text\":String,\"text html\":!0,\"text json\":n.parseJSON,\"text xml\":n.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(a,b){return b?tc(tc(a,n.ajaxSettings),b):tc(n.ajaxSettings,a)},ajaxPrefilter:rc(nc),ajaxTransport:rc(oc),ajax:function(a,b){\"object\"==typeof a&&(b=a,a=void 0),b=b||{};var c,d,e,f,g,h,i,j,k=n.ajaxSetup({},b),l=k.context||k,m=k.context&&(l.nodeType||l.jquery)?n(l):n.event,o=n.Deferred(),p=n.Callbacks(\"once memory\"),q=k.statusCode||{},r={},s={},t=0,u=\"canceled\",v={readyState:0,getResponseHeader:function(a){var b;if(2===t){if(!f){f={};while(b=ic.exec(e))f[b[1].toLowerCase()]=b[2]}b=f[a.toLowerCase()]}return null==b?null:b},getAllResponseHeaders:function(){return 2===t?e:null},setRequestHeader:function(a,b){var c=a.toLowerCase();return t||(a=s[c]=s[c]||a,r[a]=b),this},overrideMimeType:function(a){return t||(k.mimeType=a),this},statusCode:function(a){var b;if(a)if(2>t)for(b in a)q[b]=[q[b],a[b]];else v.always(a[v.status]);return this},abort:function(a){var b=a||u;return c&&c.abort(b),x(0,b),this}};if(o.promise(v).complete=p.add,v.success=v.done,v.error=v.fail,k.url=((a||k.url||fc)+\"\").replace(gc,\"\").replace(lc,ec[1]+\"//\"),k.type=b.method||b.type||k.method||k.type,k.dataTypes=n.trim(k.dataType||\"*\").toLowerCase().match(E)||[\"\"],null==k.crossDomain&&(h=mc.exec(k.url.toLowerCase()),k.crossDomain=!(!h||h[1]===ec[1]&&h[2]===ec[2]&&(h[3]||(\"http:\"===h[1]?\"80\":\"443\"))===(ec[3]||(\"http:\"===ec[1]?\"80\":\"443\")))),k.data&&k.processData&&\"string\"!=typeof k.data&&(k.data=n.param(k.data,k.traditional)),sc(nc,k,b,v),2===t)return v;i=k.global,i&&0===n.active++&&n.event.trigger(\"ajaxStart\"),k.type=k.type.toUpperCase(),k.hasContent=!kc.test(k.type),d=k.url,k.hasContent||(k.data&&(d=k.url+=(dc.test(d)?\"&\":\"?\")+k.data,delete k.data),k.cache===!1&&(k.url=hc.test(d)?d.replace(hc,\"$1_=\"+cc++):d+(dc.test(d)?\"&\":\"?\")+\"_=\"+cc++)),k.ifModified&&(n.lastModified[d]&&v.setRequestHeader(\"If-Modified-Since\",n.lastModified[d]),n.etag[d]&&v.setRequestHeader(\"If-None-Match\",n.etag[d])),(k.data&&k.hasContent&&k.contentType!==!1||b.contentType)&&v.setRequestHeader(\"Content-Type\",k.contentType),v.setRequestHeader(\"Accept\",k.dataTypes[0]&&k.accepts[k.dataTypes[0]]?k.accepts[k.dataTypes[0]]+(\"*\"!==k.dataTypes[0]?\", \"+pc+\"; q=0.01\":\"\"):k.accepts[\"*\"]);for(j in k.headers)v.setRequestHeader(j,k.headers[j]);if(k.beforeSend&&(k.beforeSend.call(l,v,k)===!1||2===t))return v.abort();u=\"abort\";for(j in{success:1,error:1,complete:1})v[j](k[j]);if(c=sc(oc,k,b,v)){v.readyState=1,i&&m.trigger(\"ajaxSend\",[v,k]),k.async&&k.timeout>0&&(g=setTimeout(function(){v.abort(\"timeout\")},k.timeout));try{t=1,c.send(r,x)}catch(w){if(!(2>t))throw w;x(-1,w)}}else x(-1,\"No Transport\");function x(a,b,f,h){var j,r,s,u,w,x=b;2!==t&&(t=2,g&&clearTimeout(g),c=void 0,e=h||\"\",v.readyState=a>0?4:0,j=a>=200&&300>a||304===a,f&&(u=uc(k,v,f)),u=vc(k,u,v,j),j?(k.ifModified&&(w=v.getResponseHeader(\"Last-Modified\"),w&&(n.lastModified[d]=w),w=v.getResponseHeader(\"etag\"),w&&(n.etag[d]=w)),204===a||\"HEAD\"===k.type?x=\"nocontent\":304===a?x=\"notmodified\":(x=u.state,r=u.data,s=u.error,j=!s)):(s=x,(a||!x)&&(x=\"error\",0>a&&(a=0))),v.status=a,v.statusText=(b||x)+\"\",j?o.resolveWith(l,[r,x,v]):o.rejectWith(l,[v,x,s]),v.statusCode(q),q=void 0,i&&m.trigger(j?\"ajaxSuccess\":\"ajaxError\",[v,k,j?r:s]),p.fireWith(l,[v,x]),i&&(m.trigger(\"ajaxComplete\",[v,k]),--n.active||n.event.trigger(\"ajaxStop\")))}return v},getJSON:function(a,b,c){return n.get(a,b,c,\"json\")},getScript:function(a,b){return n.get(a,void 0,b,\"script\")}}),n.each([\"get\",\"post\"],function(a,b){n[b]=function(a,c,d,e){return n.isFunction(c)&&(e=e||d,d=c,c=void 0),n.ajax({url:a,type:b,dataType:e,data:c,success:d})}}),n.each([\"ajaxStart\",\"ajaxStop\",\"ajaxComplete\",\"ajaxError\",\"ajaxSuccess\",\"ajaxSend\"],function(a,b){n.fn[b]=function(a){return this.on(b,a)}}),n._evalUrl=function(a){return n.ajax({url:a,type:\"GET\",dataType:\"script\",async:!1,global:!1,\"throws\":!0})},n.fn.extend({wrapAll:function(a){var b;return n.isFunction(a)?this.each(function(b){n(this).wrapAll(a.call(this,b))}):(this[0]&&(b=n(a,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&b.insertBefore(this[0]),b.map(function(){var a=this;while(a.firstElementChild)a=a.firstElementChild;return a}).append(this)),this)},wrapInner:function(a){return this.each(n.isFunction(a)?function(b){n(this).wrapInner(a.call(this,b))}:function(){var b=n(this),c=b.contents();c.length?c.wrapAll(a):b.append(a)})},wrap:function(a){var b=n.isFunction(a);return this.each(function(c){n(this).wrapAll(b?a.call(this,c):a)})},unwrap:function(){return this.parent().each(function(){n.nodeName(this,\"body\")||n(this).replaceWith(this.childNodes)}).end()}}),n.expr.filters.hidden=function(a){return a.offsetWidth<=0&&a.offsetHeight<=0},n.expr.filters.visible=function(a){return!n.expr.filters.hidden(a)};var wc=/%20/g,xc=/\\[\\]$/,yc=/\\r?\\n/g,zc=/^(?:submit|button|image|reset|file)$/i,Ac=/^(?:input|select|textarea|keygen)/i;function Bc(a,b,c,d){var e;if(n.isArray(b))n.each(b,function(b,e){c||xc.test(a)?d(a,e):Bc(a+\"[\"+(\"object\"==typeof e?b:\"\")+\"]\",e,c,d)});else if(c||\"object\"!==n.type(b))d(a,b);else for(e in b)Bc(a+\"[\"+e+\"]\",b[e],c,d)}n.param=function(a,b){var c,d=[],e=function(a,b){b=n.isFunction(b)?b():null==b?\"\":b,d[d.length]=encodeURIComponent(a)+\"=\"+encodeURIComponent(b)};if(void 0===b&&(b=n.ajaxSettings&&n.ajaxSettings.traditional),n.isArray(a)||a.jquery&&!n.isPlainObject(a))n.each(a,function(){e(this.name,this.value)});else for(c in a)Bc(c,a[c],b,e);return d.join(\"&\").replace(wc,\"+\")},n.fn.extend({serialize:function(){return n.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var a=n.prop(this,\"elements\");return a?n.makeArray(a):this}).filter(function(){var a=this.type;return this.name&&!n(this).is(\":disabled\")&&Ac.test(this.nodeName)&&!zc.test(a)&&(this.checked||!T.test(a))}).map(function(a,b){var c=n(this).val();return null==c?null:n.isArray(c)?n.map(c,function(a){return{name:b.name,value:a.replace(yc,\"\\r\\n\")}}):{name:b.name,value:c.replace(yc,\"\\r\\n\")}}).get()}}),n.ajaxSettings.xhr=function(){try{return new XMLHttpRequest}catch(a){}};var Cc=0,Dc={},Ec={0:200,1223:204},Fc=n.ajaxSettings.xhr();a.ActiveXObject&&n(a).on(\"unload\",function(){for(var a in Dc)Dc[a]()}),k.cors=!!Fc&&\"withCredentials\"in Fc,k.ajax=Fc=!!Fc,n.ajaxTransport(function(a){var b;return k.cors||Fc&&!a.crossDomain?{send:function(c,d){var e,f=a.xhr(),g=++Cc;if(f.open(a.type,a.url,a.async,a.username,a.password),a.xhrFields)for(e in a.xhrFields)f[e]=a.xhrFields[e];a.mimeType&&f.overrideMimeType&&f.overrideMimeType(a.mimeType),a.crossDomain||c[\"X-Requested-With\"]||(c[\"X-Requested-With\"]=\"XMLHttpRequest\");for(e in c)f.setRequestHeader(e,c[e]);b=function(a){return function(){b&&(delete Dc[g],b=f.onload=f.onerror=null,\"abort\"===a?f.abort():\"error\"===a?d(f.status,f.statusText):d(Ec[f.status]||f.status,f.statusText,\"string\"==typeof f.responseText?{text:f.responseText}:void 0,f.getAllResponseHeaders()))}},f.onload=b(),f.onerror=b(\"error\"),b=Dc[g]=b(\"abort\");try{f.send(a.hasContent&&a.data||null)}catch(h){if(b)throw h}},abort:function(){b&&b()}}:void 0}),n.ajaxSetup({accepts:{script:\"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript\"},contents:{script:/(?:java|ecma)script/},converters:{\"text script\":function(a){return n.globalEval(a),a}}}),n.ajaxPrefilter(\"script\",function(a){void 0===a.cache&&(a.cache=!1),a.crossDomain&&(a.type=\"GET\")}),n.ajaxTransport(\"script\",function(a){if(a.crossDomain){var b,c;return{send:function(d,e){b=n(\"<script>\").prop({async:!0,charset:a.scriptCharset,src:a.url}).on(\"load error\",c=function(a){b.remove(),c=null,a&&e(\"error\"===a.type?404:200,a.type)}),l.head.appendChild(b[0])},abort:function(){c&&c()}}}});var Gc=[],Hc=/(=)\\?(?=&|$)|\\?\\?/;n.ajaxSetup({jsonp:\"callback\",jsonpCallback:function(){var a=Gc.pop()||n.expando+\"_\"+cc++;return this[a]=!0,a}}),n.ajaxPrefilter(\"json jsonp\",function(b,c,d){var e,f,g,h=b.jsonp!==!1&&(Hc.test(b.url)?\"url\":\"string\"==typeof b.data&&!(b.contentType||\"\").indexOf(\"application/x-www-form-urlencoded\")&&Hc.test(b.data)&&\"data\");return h||\"jsonp\"===b.dataTypes[0]?(e=b.jsonpCallback=n.isFunction(b.jsonpCallback)?b.jsonpCallback():b.jsonpCallback,h?b[h]=b[h].replace(Hc,\"$1\"+e):b.jsonp!==!1&&(b.url+=(dc.test(b.url)?\"&\":\"?\")+b.jsonp+\"=\"+e),b.converters[\"script json\"]=function(){return g||n.error(e+\" was not called\"),g[0]},b.dataTypes[0]=\"json\",f=a[e],a[e]=function(){g=arguments},d.always(function(){a[e]=f,b[e]&&(b.jsonpCallback=c.jsonpCallback,Gc.push(e)),g&&n.isFunction(f)&&f(g[0]),g=f=void 0}),\"script\"):void 0}),n.parseHTML=function(a,b,c){if(!a||\"string\"!=typeof a)return null;\"boolean\"==typeof b&&(c=b,b=!1),b=b||l;var d=v.exec(a),e=!c&&[];return d?[b.createElement(d[1])]:(d=n.buildFragment([a],b,e),e&&e.length&&n(e).remove(),n.merge([],d.childNodes))};var Ic=n.fn.load;n.fn.load=function(a,b,c){if(\"string\"!=typeof a&&Ic)return Ic.apply(this,arguments);var d,e,f,g=this,h=a.indexOf(\" \");return h>=0&&(d=n.trim(a.slice(h)),a=a.slice(0,h)),n.isFunction(b)?(c=b,b=void 0):b&&\"object\"==typeof b&&(e=\"POST\"),g.length>0&&n.ajax({url:a,type:e,dataType:\"html\",data:b}).done(function(a){f=arguments,g.html(d?n(\"<div>\").append(n.parseHTML(a)).find(d):a)}).complete(c&&function(a,b){g.each(c,f||[a.responseText,b,a])}),this},n.expr.filters.animated=function(a){return n.grep(n.timers,function(b){return a===b.elem}).length};var Jc=a.document.documentElement;function Kc(a){return n.isWindow(a)?a:9===a.nodeType&&a.defaultView}n.offset={setOffset:function(a,b,c){var d,e,f,g,h,i,j,k=n.css(a,\"position\"),l=n(a),m={};\"static\"===k&&(a.style.position=\"relative\"),h=l.offset(),f=n.css(a,\"top\"),i=n.css(a,\"left\"),j=(\"absolute\"===k||\"fixed\"===k)&&(f+i).indexOf(\"auto\")>-1,j?(d=l.position(),g=d.top,e=d.left):(g=parseFloat(f)||0,e=parseFloat(i)||0),n.isFunction(b)&&(b=b.call(a,c,h)),null!=b.top&&(m.top=b.top-h.top+g),null!=b.left&&(m.left=b.left-h.left+e),\"using\"in b?b.using.call(a,m):l.css(m)}},n.fn.extend({offset:function(a){if(arguments.length)return void 0===a?this:this.each(function(b){n.offset.setOffset(this,a,b)});var b,c,d=this[0],e={top:0,left:0},f=d&&d.ownerDocument;if(f)return b=f.documentElement,n.contains(b,d)?(typeof d.getBoundingClientRect!==U&&(e=d.getBoundingClientRect()),c=Kc(f),{top:e.top+c.pageYOffset-b.clientTop,left:e.left+c.pageXOffset-b.clientLeft}):e},position:function(){if(this[0]){var a,b,c=this[0],d={top:0,left:0};return\"fixed\"===n.css(c,\"position\")?b=c.getBoundingClientRect():(a=this.offsetParent(),b=this.offset(),n.nodeName(a[0],\"html\")||(d=a.offset()),d.top+=n.css(a[0],\"borderTopWidth\",!0),d.left+=n.css(a[0],\"borderLeftWidth\",!0)),{top:b.top-d.top-n.css(c,\"marginTop\",!0),left:b.left-d.left-n.css(c,\"marginLeft\",!0)}}},offsetParent:function(){return this.map(function(){var a=this.offsetParent||Jc;while(a&&!n.nodeName(a,\"html\")&&\"static\"===n.css(a,\"position\"))a=a.offsetParent;return a||Jc})}}),n.each({scrollLeft:\"pageXOffset\",scrollTop:\"pageYOffset\"},function(b,c){var d=\"pageYOffset\"===c;n.fn[b]=function(e){return J(this,function(b,e,f){var g=Kc(b);return void 0===f?g?g[c]:b[e]:void(g?g.scrollTo(d?a.pageXOffset:f,d?f:a.pageYOffset):b[e]=f)},b,e,arguments.length,null)}}),n.each([\"top\",\"left\"],function(a,b){n.cssHooks[b]=yb(k.pixelPosition,function(a,c){return c?(c=xb(a,b),vb.test(c)?n(a).position()[b]+\"px\":c):void 0})}),n.each({Height:\"height\",Width:\"width\"},function(a,b){n.each({padding:\"inner\"+a,content:b,\"\":\"outer\"+a},function(c,d){n.fn[d]=function(d,e){var f=arguments.length&&(c||\"boolean\"!=typeof d),g=c||(d===!0||e===!0?\"margin\":\"border\");return J(this,function(b,c,d){var e;return n.isWindow(b)?b.document.documentElement[\"client\"+a]:9===b.nodeType?(e=b.documentElement,Math.max(b.body[\"scroll\"+a],e[\"scroll\"+a],b.body[\"offset\"+a],e[\"offset\"+a],e[\"client\"+a])):void 0===d?n.css(b,c,g):n.style(b,c,d,g)},b,f?d:void 0,f,null)}})}),n.fn.size=function(){return this.length},n.fn.andSelf=n.fn.addBack,\"function\"==typeof define&&define.amd&&define(\"jquery\",[],function(){return n});var Lc=a.jQuery,Mc=a.$;return n.noConflict=function(b){return a.$===n&&(a.$=Mc),b&&a.jQuery===n&&(a.jQuery=Lc),n},typeof b===U&&(a.jQuery=a.$=n),n});\n    5  \n\n/Users/kirkcp/Documents/node_play/slatemail/node_modules/jquery/src/ajax/xhr.js:\n   32  }\n   33  \n   34: support.cors = !!xhrSupported && ( \"withCredentials\" in xhrSupported );\n   35  support.ajax = xhrSupported = !!xhrSupported;\n   36  \n\n/Users/kirkcp/Documents/node_play/slatemail/node_modules/jquery/src/sizzle/test/jquery.js:\n 8466  // Determine support properties\n 8467  xhrSupported = jQuery.ajaxSettings.xhr();\n 8468: jQuery.support.cors = !!xhrSupported && ( \"withCredentials\" in xhrSupported );\n 8469  xhrSupported = jQuery.support.ajax = !!xhrSupported;\n 8470  \n\n/Users/kirkcp/Documents/node_play/slatemail/node_modules/nodemailer/node_modules/hyperquest/index.js:\n  124          agent: false,\n  125          headers: headers,\n  126:         withCredentials: this.options.withCredentials\n  127      };\n  128      if (protocol === 'https:') {\n\n/Users/kirkcp/Documents/node_play/slatemail/node_modules/nodemailer/node_modules/nodemailer-direct-transport/node_modules/smtp-connection/src/smtp-connection.js:\n   21   *  * **auth** - authentication object {user:'...', pass:'...'}\n   22   *  * **ignoreTLS** - ignore server support for STARTTLS\n   23:  *  * **tls** - options for createCredentials\n   24   *  * **debug** - if true, emits 'log' events with all traffic between client and server\n   25   *  * **localAddress** - outbound address to bind to (see: http://nodejs.org/api/net.html#net_net_connect_options_connectionlistener)\n\n/Users/kirkcp/Documents/node_play/slatemail/node_modules/nodemailer/node_modules/nodemailer-smtp-transport/node_modules/smtp-connection/src/smtp-connection.js:\n   21   *  * **auth** - authentication object {user:'...', pass:'...'}\n   22   *  * **ignoreTLS** - ignore server support for STARTTLS\n   23:  *  * **tls** - options for createCredentials\n   24   *  * **debug** - if true, emits 'log' events with all traffic between client and server\n   25   *  * **localAddress** - outbound address to bind to (see: http://nodejs.org/api/net.html#net_net_connect_options_connectionlistener)\n\n/Users/kirkcp/Documents/node_play/slatemail/node_modules/nodemailer-smtp-transport/node_modules/smtp-connection/src/smtp-connection.js:\n   21   *  * **auth** - authentication object {user:'...', pass:'...'}\n   22   *  * **ignoreTLS** - ignore server support for STARTTLS\n   23:  *  * **tls** - options for createCredentials\n   24   *  * **debug** - if true, emits 'log' events with all traffic between client and server\n   25   *  * **localAddress** - outbound address to bind to (see: http://nodejs.org/api/net.html#net_net_connect_options_connectionlistener)\n\n/Users/kirkcp/Documents/node_play/slatemail_dist/README.txt:\n    6  - For now, if you issue commands (e.g. you mark an email as complete or read) while the client is disconnected, your changes will NOT make it to the server.\n    7  - The syncing process is pretty slow relative to other apps. If you have tens of thousands of emails, your first sync may take a couple of hours.\n    8: - The app does NOT store your credentials in your keychain. Anyone with access to your file system would be able to see the password to your email account as well as all of your email and attachments.\n    9  - This app cannot delete individual emails or mailboxes. Believe me, this is for your own protection.\n   10  - All of your data is stored inside the app itself. If you delete the app, you will have to re-download all your emails if you want to use it again.\n\n~/Documents/node_play/slatemail_dist/slatemail.app/Contents/Frameworks/node-webkit Framework.framework/node-webkit Framework:\n    <binary>\n\n/Users/kirkcp/Documents/node_play/slatemail_dist/slatemail.app/Contents/Resources/app.nw/.gitignore:\n    1: credentials\n    2  attachments\n    3  descriptors\n\n/Users/kirkcp/Documents/node_play/slatemail_dist/slatemail.app/Contents/Resources/app.nw/mailComposer/mailComposer.js:\n   78  		var subject = this.container.find('.input_subject').html();\n   79  		var body = this.CKEDITOR.instances.message_body.getData();\n   80: 		var credentials = fs.readJsonSync('credentials/credentials2.json').external;\n   81  		var mail_options = {\n   82: 			from: credentials.auth.user,\n   83  			to: to,\n   84  			subject: subject,\n   ..\n   90  		}\n   91  		console.log(mail_options);\n   92: 		var transporter = nodemailer.createTransport(smtpTransport(credentials));\n   93  		console.log(transporter);\n   94  \n\n/Users/kirkcp/Documents/node_play/slatemail_dist/slatemail.app/Contents/Resources/app.nw/modules/imaper.js:\n   19  		}\n   20  		var def = Q.defer();\n   21: 		var conf = JSON.parse(fs.readFileSync('credentials/credentials2.json')).internal;\n   22  		// console.log(conf);\n   23  		// conf.debug = function(s){\n\n/Users/kirkcp/Documents/node_play/slatemail_dist/slatemail.app/Contents/Resources/app.nw/node_modules/favicon/node_modules/request/README.md:\n  605  * `proxy` - An HTTP proxy to be used. Supports proxy Auth with Basic Auth, identical to support for the `url` parameter (by embedding the auth info in the `uri`)\n  606  * `oauth` - Options for OAuth HMAC-SHA1 signing. See documentation above.\n  607: * `hawk` - Options for [Hawk signing](https://github.com/hueniverse/hawk). The `credentials` key must contain the necessary signing info, [see hawk docs for details](https://github.com/hueniverse/hawk#usage-example).\n  608  * `strictSSL` - If `true`, requires SSL certificates be valid. **Note:** to use your own certificate authority, you need to specify an agent that was created with that CA as an option.\n  609  * `agentOptions` - Object containing user agent options. See documentation above. **Note:** [see tls API doc for TLS/SSL options](http://nodejs.org/api/tls.html#tls_tls_connect_options_callback).\n\n/Users/kirkcp/Documents/node_play/slatemail_dist/slatemail.app/Contents/Resources/app.nw/node_modules/favicon/node_modules/request/node_modules/form-data/Readme.md:\n  138  ```\n  139  \n  140: For edge cases, like POST request to URL with query string or to pass HTTP auth credentials, object can be passed to `form.submit()` as first parameter:\n  141  \n  142  ``` javascript\n\n/Users/kirkcp/Documents/node_play/slatemail_dist/slatemail.app/Contents/Resources/app.nw/node_modules/favicon/node_modules/request/node_modules/hawk/README.md:\n   28    - [Confidentiality of Requests](#confidentiality-of-requests)\n   29    - [Spoofing by Counterfeit Servers](#spoofing-by-counterfeit-servers)\n   30:   - [Plaintext Storage of Credentials](#plaintext-storage-of-credentials)\n   31    - [Entropy of Keys](#entropy-of-keys)\n   32    - [Coverage Limitations](#coverage-limitations)\n   ..\n   48  \n   49  Similar to the HTTP [Digest access authentication schemes](http://www.ietf.org/rfc/rfc2617.txt), **Hawk** uses a set of\n   50: client credentials which include an identifier (e.g. username) and key (e.g. password). Likewise, just as with the Digest scheme,\n   51  the key is never included in authenticated requests. Instead, it is used to calculate a request MAC value which is\n   52  included in its place.\n   ..\n   61  The primary design goals of this scheme are to:\n   62  * simplify and improve HTTP authentication for services that are unwilling or unable to deploy TLS for all resources,\n   63: * secure credentials against leakage (e.g., when the client uses some form of dynamic configuration to determine where\n   64    to send an authenticated request), and\n   65: * avoid the exposure of credentials sent to a malicious server over an unauthenticated secure channel due to client\n   66    failure to validate the server's identity as part of its TLS handshake.\n   67  \n   ..\n   70  \n   71  The **Hawk** scheme requires the establishment of a shared symmetric key between the client and the server,\n   72: which is beyond the scope of this module. Typically, the shared credentials are established via an initial\n   73  TLS-protected phase or derived from some other shared confidential information available to both the client\n   74  and the server.\n   ..\n   84  key identifier combination. \n   85  \n   86: The timestamp enables the server to restrict the validity period of the credentials where requests occuring afterwards\n   87  are rejected. It also removes the need for the server to retain an unbounded number of nonce values for future checks.\n   88  By default, **Hawk** uses a time window of 1 minute to allow for time skew between the client and server (which in\n   ..\n  109  \n  110  \n  111: // Credentials lookup function\n  112  \n  113: var credentialsFunc = function (id, callback) {\n  114  \n  115:     var credentials = {\n  116          key: 'werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn',\n  117          algorithm: 'sha256',\n  ...\n  119      };\n  120  \n  121:     return callback(null, credentials);\n  122  };\n  123  \n  ...\n  128      // Authenticate incoming request\n  129  \n  130:     Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials, artifacts) {\n  131  \n  132          // Prepare response\n  133  \n  134:         var payload = (!err ? 'Hello ' + credentials.user + ' ' + artifacts.ext : 'Shoosh!');\n  135          var headers = { 'Content-Type': 'text/plain' };\n  136  \n  137          // Generate Server-Authorization response header\n  138  \n  139:         var header = Hawk.server.header(credentials, artifacts, { payload: payload, contentType: headers['Content-Type'] });\n  140          headers['Server-Authorization'] = header;\n  141  \n  ...\n  159  \n  160  \n  161: // Client credentials\n  162  \n  163: var credentials = {\n  164      id: 'dh37fgj492je',\n  165      key: 'werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn',\n  ...\n  177  // Generate Authorization request header\n  178  \n  179: var header = Hawk.client.header('http://example.com:8000/resource/1?b=1&a=2', 'GET', { credentials: credentials, ext: 'some-app-data' });\n  180  requestOptions.headers.Authorization = header.field;\n  181  \n  ...\n  186      // Authenticate the server's response\n  187  \n  188:     var isValid = Hawk.client.authenticate(response, credentials, header.artifacts, { payload: body });\n  189  \n  190      // Output results\n  ...\n  219  ```\n  220  \n  221: The client has previously obtained a set of **Hawk** credentials for accessing resources on the \"http://example.com/\"\n  222: server. The **Hawk** credentials issued to the client include the following attributes:\n  223  \n  224  * Key identifier: dh37fgj492je\n  ...\n  260  \n  261  The server validates the request by calculating the request MAC again based on the request received and verifies the validity\n  262: and scope of the **Hawk** credentials. If valid, the server responds with the requested resource.\n  263  \n  264  \n  ...\n  338  as a response header using the exact same syntax as the `Authorization` request header field.\n  339  \n  340: The header is contructed using the same process as the client's request header. The server uses the same credentials and other\n  341  artifacts provided by the client to constructs the normalized request string. The `ext` and `hash` values are replaced with\n  342  new values based on the server response. The rest as identical to those used by the client.\n  ...\n  366  \n  367  There are cases in which limited and short-term access to a protected resource is granted to a third party which does not\n  368: have access to the shared credentials. For example, displaying a protected image on a web page accessed by anyone. **Hawk**\n  369  provides limited support for such URIs in the form of a _bewit_ - a URI query parameter appended to the request URI which contains\n  370: the necessary credentials to authenticate the request.\n  371  \n  372  Because of the significant security risks involved in issuing such access, bewit usage is purposely limited only to GET requests\n  373: and for a finite period of time. Both the client and server can issue bewit credentials, however, the server should not use the same\n  374: credentials as the client to maintain clear traceability as to who issued which credentials.\n  375  \n  376: In order to simplify implementation, bewit credentials do not support single-use policy and can be replayed multiple times within\n  377  the granted access timeframe. \n  378  \n  ...\n  387  \n  388  \n  389: // Credentials lookup function\n  390  \n  391: var credentialsFunc = function (id, callback) {\n  392  \n  393:     var credentials = {\n  394          key: 'werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn',\n  395          algorithm: 'sha256'\n  396      };\n  397  \n  398:     return callback(null, credentials);\n  399  };\n  400  \n  ...\n  403  var handler = function (req, res) {\n  404  \n  405:     Hawk.uri.authenticate(req, credentialsFunc, {}, function (err, credentials, attributes) {\n  406  \n  407          res.writeHead(!err ? 200 : 401, { 'Content-Type': 'text/plain' });\n  ...\n  420  \n  421  \n  422: // Client credentials\n  423  \n  424: var credentials = {\n  425      id: 'dh37fgj492je',\n  426      key: 'werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn',\n  ...\n  431  \n  432  var duration = 60 * 5;      // 5 Minutes\n  433: var bewit = Hawk.uri.getBewit('http://example.com:8080/resource/1?b=1&a=2', { credentials: credentials, ttlSec: duration, ext: 'some-app-data' });\n  434  var uri = 'http://example.com:8000/resource/1?b=1&a=2' + '&bewit=' + bewit;\n  435  ```\n  ...\n  445  ### MAC Keys Transmission\n  446  \n  447: **Hawk** does not provide any mechanism for obtaining or transmitting the set of shared credentials required. Any mechanism used\n  448: to obtain **Hawk** credentials must ensure that these transmissions are protected using transport-layer mechanisms such as TLS.\n  449  \n  450  ### Confidentiality of Requests\n  ...\n  465  require transport-layer security for any requests where the authenticity of the resource server or of server responses is an issue.\n  466  \n  467: ### Plaintext Storage of Credentials\n  468  \n  469  The **Hawk** key functions the same way passwords do in traditional authentication systems. In order to compute the request MAC,\n  470  the server must have access to the key in plaintext form. This is in contrast, for example, to modern operating systems, which\n  471: store only a one-way hash of user credentials.\n  472  \n  473  If an attacker were to gain access to these keys - or worse, to the server's database of all such keys - he or she would be able\n  ...\n  480  MAC values, and will thus be able to mount offline brute-force attacks to recover the key used. Servers should be careful to\n  481  assign keys which are long enough, and random enough, to resist such attacks for at least the length of time that the **Hawk**\n  482: credentials are valid.\n  483  \n  484: For example, if the credentials are valid for two weeks, servers should ensure that it is not possible to mount a brute force\n  485  attack that recovers the key in less than two weeks. Of course, servers are urged to err on the side of caution, and use the\n  486  longest key reasonable.\n  ...\n  514  The client must only use the time information provided by the server if:\n  515  * it was delivered over a TLS connection and the server identity has been verified, or\n  516: * the `tsm` MAC digest calculated using the same client credentials over the timestamp has been verified.\n  517  \n  518  ### Client Clock Poisoning\n  ...\n  524  ### Bewit Limitations\n  525  \n  526: Special care must be taken when issuing bewit credentials to third parties. Bewit credentials are valid until expiration and cannot\n  527  be revoked or limited without using other means. Whatever resource they grant access to will be completely exposed to anyone with\n  528: access to the bewit credentials which act as bearer credentials for that particular resource. While bewit usage is limited to GET\n  529  requests only and therefore cannot be used to perform transactions or change server state, it can still be used to expose private\n  530  and sensitive information.\n  ...\n  561  The algorithm used is closely related to the key issued as different algorithms require different key sizes (and other\n  562  requirements). While some keys can be used for multiple algorithm, the protocol is designed to closely bind the key and algorithm\n  563: together as part of the issued credentials.\n  564  \n  565  ### Why is Host and Content-Type the only headers covered by the request MAC?\n  ...\n  594  this module is specifically designed for, and a delegated access mode which is being developed separately in\n  595  [Oz](https://github.com/hueniverse/oz). In addition to the **Hawk** use cases, Oz requires another attribute: the application id `app`.\n  596: This provides binding between the credentials and the application in a way that prevents an attacker from tricking an application\n  597: to use credentials issued to someone else. It also has an optional 'delegated-by' attribute `dlg` which is the application id of the\n  598: application the credentials were directly issued to. The goal of these two additions is to allow Oz to utilize **Hawk** directly,\n  599: but with the additional security of delegated credentials.\n  600  \n  601  ### What is the purpose of the static strings used in each normalized MAC input?\n\n/Users/kirkcp/Documents/node_play/slatemail_dist/slatemail.app/Contents/Resources/app.nw/node_modules/favicon/node_modules/request/node_modules/hawk/example/usage.js:\n    9  \n   10  var internals = {\n   11:     credentials: {\n   12          dh37fgj492je: {\n   13              id: 'dh37fgj492je',                                             // Required by Hawk.client.header \n   ..\n   20  \n   21  \n   22: // Credentials lookup function\n   23  \n   24: var credentialsFunc = function (id, callback) {\n   25  \n   26:     return callback(null, internals.credentials[id]);\n   27  };\n   28  \n   ..\n   32  var handler = function (req, res) {\n   33  \n   34:     Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials, artifacts) {\n   35  \n   36:         var payload = (!err ? 'Hello ' + credentials.user + ' ' + artifacts.ext : 'Shoosh!');\n   37          var headers = {\n   38              'Content-Type': 'text/plain',\n   39:             'Server-Authorization': Hawk.server.header(credentials, artifacts, { payload: payload, contentType: 'text/plain' })\n   40          };\n   41  \n   ..\n   58  // Send authenticated request\n   59  \n   60: credentialsFunc('dh37fgj492je', function (err, credentials) {\n   61  \n   62:     var header = Hawk.client.header('http://127.0.0.1:8000/resource/1?b=1&a=2', 'GET', { credentials: credentials, ext: 'and welcome!' });\n   63      var options = {\n   64          uri: 'http://127.0.0.1:8000/resource/1?b=1&a=2',\n   ..\n   71      Request(options, function (error, response, body) {\n   72  \n   73:         var isValid = Hawk.client.authenticate(response, credentials, header.artifacts, { payload: body });\n   74          console.log(response.statusCode + ': ' + body + (isValid ? ' (valid)' : ' (invalid)'));\n   75          process.exit(0);\n\n/Users/kirkcp/Documents/node_play/slatemail_dist/slatemail.app/Contents/Resources/app.nw/node_modules/favicon/node_modules/request/node_modules/hawk/lib/browser.js:\n   24              // Required\n   25  \n   26:             credentials: {\n   27                  id: 'dh37fgj492je',\n   28                  key: 'aoijedoaijsdlaksjdl',\n   ..\n   65          var timestamp = options.timestamp || hawk.utils.now(options.localtimeOffsetMsec);\n   66  \n   67:         // Validate credentials\n   68  \n   69:         var credentials = options.credentials;\n   70:         if (!credentials ||\n   71:             !credentials.id ||\n   72:             !credentials.key ||\n   73:             !credentials.algorithm) {\n   74  \n   75:             result.err = 'Invalid credentials object';\n   76              return result;\n   77          }\n   78  \n   79:         if (hawk.crypto.algorithms.indexOf(credentials.algorithm) === -1) {\n   80              result.err = 'Unknown algorithm';\n   81              return result;\n   ..\n  110              (options.payload || options.payload === '')) {\n  111  \n  112:             artifacts.hash = hawk.crypto.calculatePayloadHash(options.payload, credentials.algorithm, options.contentType);\n  113          }\n  114  \n  115:         var mac = hawk.crypto.calculateMac('header', credentials, artifacts);\n  116  \n  117          // Construct header\n  118  \n  119          var hasExt = artifacts.ext !== null && artifacts.ext !== undefined && artifacts.ext !== '';       // Other falsey values allowed\n  120:         var header = 'Hawk id=\"' + credentials.id +\n  121                       '\", ts=\"' + artifacts.ts +\n  122                       '\", nonce=\"' + artifacts.nonce +\n  ...\n  143              // Required\n  144  \n  145:             credentials: {\n  146              id: 'dh37fgj492je',\n  147              key: 'aoijedoaijsdlaksjdl',\n  ...\n  176          var now = hawk.utils.now(options.localtimeOffsetMsec);\n  177  \n  178:         // Validate credentials\n  179  \n  180:         var credentials = options.credentials;\n  181:         if (!credentials ||\n  182:             !credentials.id ||\n  183:             !credentials.key ||\n  184:             !credentials.algorithm) {\n  185  \n  186              return '';\n  187          }\n  188  \n  189:         if (hawk.crypto.algorithms.indexOf(credentials.algorithm) === -1) {\n  190              return '';\n  191          }\n  ...\n  198  \n  199          var exp = now + options.ttlSec;\n  200:         var mac = hawk.crypto.calculateMac('bewit', credentials, {\n  201              ts: exp,\n  202              nonce: '',\n  ...\n  210          // Construct bewit: id\\exp\\mac\\ext\n  211  \n  212:         var bewit = credentials.id + '\\\\' + exp + '\\\\' + mac + '\\\\' + options.ext;\n  213          return hawk.utils.base64urlEncode(bewit);\n  214      },\n  ...\n  225      */\n  226  \n  227:     authenticate: function (request, credentials, artifacts, options) {\n  228  \n  229          options = options || {};\n  ...\n  245  \n  246              if (attributes.ts) {\n  247:                 var tsm = hawk.crypto.calculateTsMac(attributes.ts, credentials);\n  248                  if (tsm !== attributes.tsm) {\n  249                      return false;\n  ...\n  281          };\n  282  \n  283:         var mac = hawk.crypto.calculateMac('response', credentials, modArtifacts);\n  284          if (mac !== attributes.mac) {\n  285              return false;\n  ...\n  296          }\n  297  \n  298:         var calculatedHash = hawk.crypto.calculatePayloadHash(options.payload, credentials.algorithm, getHeader('content-type'));\n  299          return (calculatedHash === attributes.hash);\n  300      },\n  ...\n  316          var timestamp = options.timestamp || hawk.utils.now(options.localtimeOffsetMsec);\n  317  \n  318:         // Validate credentials\n  319  \n  320:         var credentials = options.credentials;\n  321:         if (!credentials ||\n  322:             !credentials.id ||\n  323:             !credentials.key ||\n  324:             !credentials.algorithm) {\n  325  \n  326              // Invalid credential object\n  ...\n  328          }\n  329  \n  330:         if (hawk.crypto.algorithms.indexOf(credentials.algorithm) === -1) {\n  331              return null;\n  332          }\n  ...\n  339              host: host,\n  340              port: port,\n  341:             hash: hawk.crypto.calculatePayloadHash(message, credentials.algorithm)\n  342          };\n  343  \n  ...\n  345  \n  346          var result = {\n  347:             id: credentials.id,\n  348              ts: artifacts.ts,\n  349              nonce: artifacts.nonce,\n  350              hash: artifacts.hash,\n  351:             mac: hawk.crypto.calculateMac('message', credentials, artifacts)\n  352          };\n  353  \n  ...\n  355      },\n  356  \n  357:     authenticateTimestamp: function (message, credentials, updateClock) {           // updateClock defaults to true\n  358  \n  359:         var tsm = hawk.crypto.calculateTsMac(message.ts, credentials);\n  360          if (tsm !== message.tsm) {\n  361              return false;\n  ...\n  377      algorithms: ['sha1', 'sha256'],\n  378  \n  379:     calculateMac: function (type, credentials, options) {\n  380  \n  381          var normalized = hawk.crypto.generateNormalizedString(type, options);\n  382  \n  383:         var hmac = CryptoJS['Hmac' + credentials.algorithm.toUpperCase()](normalized, credentials.key);\n  384          return hmac.toString(CryptoJS.enc.Base64);\n  385      },\n  ...\n  420      },\n  421  \n  422:     calculateTsMac: function (ts, credentials) {\n  423  \n  424:         var hash = CryptoJS['Hmac' + credentials.algorithm.toUpperCase()]('hawk.' + hawk.crypto.headerVersion + '.ts\\n' + ts + '\\n', credentials.key);\n  425          return hash.toString(CryptoJS.enc.Base64);\n  426      }\n\n/Users/kirkcp/Documents/node_play/slatemail_dist/slatemail.app/Contents/Resources/app.nw/node_modules/favicon/node_modules/request/node_modules/hawk/lib/client.js:\n   22          // Required\n   23  \n   24:         credentials: {\n   25              id: 'dh37fgj492je',\n   26              key: 'aoijedoaijsdlaksjdl',\n   ..\n   63      var timestamp = options.timestamp || Utils.nowSecs(options.localtimeOffsetMsec);\n   64  \n   65:     // Validate credentials\n   66  \n   67:     var credentials = options.credentials;\n   68:     if (!credentials ||\n   69:         !credentials.id ||\n   70:         !credentials.key ||\n   71:         !credentials.algorithm) {\n   72  \n   73          result.err = 'Invalid credential object';\n   ..\n   75      }\n   76  \n   77:     if (Crypto.algorithms.indexOf(credentials.algorithm) === -1) {\n   78          result.err = 'Unknown algorithm';\n   79          return result;\n   ..\n  108          (options.payload || options.payload === '')) {\n  109  \n  110:         artifacts.hash = Crypto.calculatePayloadHash(options.payload, credentials.algorithm, options.contentType);\n  111      }\n  112  \n  113:     var mac = Crypto.calculateMac('header', credentials, artifacts);\n  114  \n  115      // Construct header\n  116  \n  117      var hasExt = artifacts.ext !== null && artifacts.ext !== undefined && artifacts.ext !== '';       // Other falsey values allowed\n  118:     var header = 'Hawk id=\"' + credentials.id +\n  119                   '\", ts=\"' + artifacts.ts +\n  120                   '\", nonce=\"' + artifacts.nonce +\n  ...\n  145  */\n  146  \n  147: exports.authenticate = function (res, credentials, artifacts, options) {\n  148  \n  149      artifacts = Hoek.clone(artifacts);\n  ...\n  162  \n  163          if (attributes.ts) {\n  164:             var tsm = Crypto.calculateTsMac(attributes.ts, credentials);\n  165              if (tsm !== attributes.tsm) {\n  166                  return false;\n  ...\n  185      artifacts.hash = attributes.hash;\n  186  \n  187:     var mac = Crypto.calculateMac('response', credentials, artifacts);\n  188      if (mac !== attributes.mac) {\n  189          return false;\n  ...\n  200      }\n  201  \n  202:     var calculatedHash = Crypto.calculatePayloadHash(options.payload, credentials.algorithm, res.headers['content-type']);\n  203      return (calculatedHash === attributes.hash);\n  204  };\n  ...\n  213          // Required\n  214  \n  215:         credentials: {\n  216              id: 'dh37fgj492je',\n  217              key: 'aoijedoaijsdlaksjdl',\n  ...\n  246      var now = Utils.now(options.localtimeOffsetMsec);\n  247  \n  248:     // Validate credentials\n  249  \n  250:     var credentials = options.credentials;\n  251:     if (!credentials ||\n  252:         !credentials.id ||\n  253:         !credentials.key ||\n  254:         !credentials.algorithm) {\n  255  \n  256          return '';\n  257      }\n  258  \n  259:     if (Crypto.algorithms.indexOf(credentials.algorithm) === -1) {\n  260          return '';\n  261      }\n  ...\n  270  \n  271      var exp = Math.floor(now / 1000) + options.ttlSec;\n  272:     var mac = Crypto.calculateMac('bewit', credentials, {\n  273          ts: exp,\n  274          nonce: '',\n  ...\n  282      // Construct bewit: id\\exp\\mac\\ext\n  283  \n  284:     var bewit = credentials.id + '\\\\' + exp + '\\\\' + mac + '\\\\' + options.ext;\n  285      return Hoek.base64urlEncode(bewit);\n  286  };\n  ...\n  297          // Required\n  298  \n  299:         credentials: {\n  300              id: 'dh37fgj492je',\n  301              key: 'aoijedoaijsdlaksjdl',\n  ...\n  327      var timestamp = options.timestamp || Utils.nowSecs(options.localtimeOffsetMsec);\n  328  \n  329:     // Validate credentials\n  330  \n  331:     var credentials = options.credentials;\n  332:     if (!credentials ||\n  333:         !credentials.id ||\n  334:         !credentials.key ||\n  335:         !credentials.algorithm) {\n  336  \n  337          // Invalid credential object\n  ...\n  339      }\n  340  \n  341:     if (Crypto.algorithms.indexOf(credentials.algorithm) === -1) {\n  342          return null;\n  343      }\n  ...\n  350          host: host,\n  351          port: port,\n  352:         hash: Crypto.calculatePayloadHash(message, credentials.algorithm)\n  353      };\n  354  \n  ...\n  356  \n  357      var result = {\n  358:         id: credentials.id,\n  359          ts: artifacts.ts,\n  360          nonce: artifacts.nonce,\n  361          hash: artifacts.hash,\n  362:         mac: Crypto.calculateMac('message', credentials, artifacts)\n  363      };\n  364  \n\n/Users/kirkcp/Documents/node_play/slatemail_dist/slatemail.app/Contents/Resources/app.nw/node_modules/favicon/node_modules/request/node_modules/hawk/lib/crypto.js:\n   25  /*\n   26      type: 'header',                                 // 'header', 'bewit', 'response'\n   27:     credentials: {\n   28          key: 'aoijedoaijsdlaksjdl',\n   29          algorithm: 'sha256'                         // 'sha1', 'sha256'\n   ..\n   43  */\n   44  \n   45: exports.calculateMac = function (type, credentials, options) {\n   46  \n   47      var normalized = exports.generateNormalizedString(type, options);\n   48  \n   49:     var hmac = Crypto.createHmac(credentials.algorithm, credentials.key).update(normalized);\n   50      var digest = hmac.digest('base64');\n   51      return digest;\n   ..\n  111  \n  112  \n  113: exports.calculateTsMac = function (ts, credentials) {\n  114  \n  115:     var hmac = Crypto.createHmac(credentials.algorithm, credentials.key);\n  116      hmac.update('hawk.' + exports.headerVersion + '.ts\\n' + ts + '\\n');\n  117      return hmac.digest('base64');\n  ...\n  119  \n  120  \n  121: exports.timestampMessage = function (credentials, localtimeOffsetMsec) {\n  122  \n  123      var now = Utils.nowSecs(localtimeOffsetMsec);\n  124:     var tsm = exports.calculateTsMac(now, credentials);\n  125      return { ts: now, tsm: tsm };\n  126  };\n\n/Users/kirkcp/Documents/node_play/slatemail_dist/slatemail.app/Contents/Resources/app.nw/node_modules/favicon/node_modules/request/node_modules/hawk/lib/server.js:\n   26                          };\n   27    \n   28:    credentialsFunc:     required function to lookup the set of Hawk credentials based on the provided credentials id.\n   29:                         The credentials include the MAC key, MAC algorithm, and other attributes (such as username)\n   30                          needed by the application. This function is the equivalent of verifying the username and\n   31                          password in Basic authentication.\n   32    \n   33:                         var credentialsFunc = function (id, callback) {\n   34      \n   35:                             // Lookup credentials in database\n   36                              db.lookup(id, function (err, item) {\n   37      \n   ..\n   40                                  }\n   41      \n   42:                                 var credentials = {\n   43                                      // Required\n   44                                      key: item.key,\n   ..\n   48                                  };\n   49      \n   50:                                 return callback(null, credentials);\n   51                              });\n   52                          };\n   ..\n   73                                 a hash value over the entire payload (assuming it has already be normalized to the same format and\n   74                                 encoding used by the client to calculate the hash on request). If the payload is not available at the time\n   75:                                of authentication, the authenticatePayload() method can be used by passing it the credentials and\n   76                                 attributes.hash returned in the authenticate callback.\n   77  \n   ..\n   80      }\n   81  \n   82:     callback: function (err, credentials, artifacts) { }\n   83   */\n   84  \n   85: exports.authenticate = function (req, credentialsFunc, options, callback) {\n   86  \n   87      callback = Hoek.nextTick(callback);\n   ..\n  137      }\n  138  \n  139:     // Fetch Hawk credentials\n  140  \n  141:     credentialsFunc(attributes.id, function (err, credentials) {\n  142  \n  143          if (err) {\n  144:             return callback(err, credentials || null, artifacts);\n  145          }\n  146  \n  147:         if (!credentials) {\n  148:             return callback(Boom.unauthorized('Unknown credentials', 'Hawk'), null, artifacts);\n  149          }\n  150  \n  151:         if (!credentials.key ||\n  152:             !credentials.algorithm) {\n  153  \n  154:             return callback(Boom.internal('Invalid credentials'), credentials, artifacts);\n  155          }\n  156  \n  157:         if (Crypto.algorithms.indexOf(credentials.algorithm) === -1) {\n  158:             return callback(Boom.internal('Unknown algorithm'), credentials, artifacts);\n  159          }\n  160  \n  161          // Calculate MAC\n  162  \n  163:         var mac = Crypto.calculateMac('header', credentials, artifacts);\n  164          if (!Cryptiles.fixedTimeComparison(mac, attributes.mac)) {\n  165:             return callback(Boom.unauthorized('Bad mac', 'Hawk'), credentials, artifacts);\n  166          }\n  167  \n  ...\n  172  \n  173              if (!attributes.hash) {\n  174:                 return callback(Boom.unauthorized('Missing required payload hash', 'Hawk'), credentials, artifacts);\n  175              }\n  176  \n  177:             var hash = Crypto.calculatePayloadHash(options.payload, credentials.algorithm, request.contentType);\n  178              if (!Cryptiles.fixedTimeComparison(hash, attributes.hash)) {\n  179:                 return callback(Boom.unauthorized('Bad payload hash', 'Hawk'), credentials, artifacts);\n  180              }\n  181          }\n  ...\n  186  \n  187              if (err) {\n  188:                 return callback(Boom.unauthorized('Invalid nonce', 'Hawk'), credentials, artifacts);\n  189              }\n  190  \n  ...\n  192  \n  193              if (Math.abs((attributes.ts * 1000) - now) > (options.timestampSkewSec * 1000)) {\n  194:                 var tsm = Crypto.timestampMessage(credentials, options.localtimeOffsetMsec);\n  195:                 return callback(Boom.unauthorized('Stale timestamp', 'Hawk', tsm), credentials, artifacts);\n  196              }\n  197  \n  198              // Successful authentication\n  199  \n  200:             return callback(null, credentials, artifacts);\n  201          });\n  202      });\n  ...\n  208  /*\n  209      payload:        raw request payload\n  210:     credentials:    from authenticate callback\n  211      artifacts:      from authenticate callback\n  212      contentType:    req.headers['content-type']\n  213  */\n  214  \n  215: exports.authenticatePayload = function (payload, credentials, artifacts, contentType) {\n  216  \n  217:     var calculatedHash = Crypto.calculatePayloadHash(payload, credentials.algorithm, contentType);\n  218      return Cryptiles.fixedTimeComparison(calculatedHash, artifacts.hash);\n  219  };\n  ...\n  236  \n  237  /*\n  238:     credentials: {},                                        // Object received from authenticate()\n  239      artifacts: {}                                           // Object received from authenticate(); 'mac', 'hash', and 'ext' - ignored\n  240      options: {\n  ...\n  246  */\n  247  \n  248: exports.header = function (credentials, artifacts, options) {\n  249  \n  250      // Prepare inputs\n  ...\n  264      artifacts.ext = options.ext;\n  265  \n  266:     // Validate credentials\n  267  \n  268:     if (!credentials ||\n  269:         !credentials.key ||\n  270:         !credentials.algorithm) {\n  271  \n  272          // Invalid credential object\n  ...\n  274      }\n  275  \n  276:     if (Crypto.algorithms.indexOf(credentials.algorithm) === -1) {\n  277          return '';\n  278      }\n  ...\n  283          (options.payload || options.payload === '')) {\n  284  \n  285:         artifacts.hash = Crypto.calculatePayloadHash(options.payload, credentials.algorithm, options.contentType);\n  286      }\n  287  \n  288:     var mac = Crypto.calculateMac('response', credentials, artifacts);\n  289  \n  290      // Construct header\n  ...\n  309   */\n  310  \n  311: exports.authenticateBewit = function (req, credentialsFunc, options, callback) {\n  312  \n  313      callback = Hoek.nextTick(callback);\n  ...\n  393      }\n  394  \n  395:     // Fetch Hawk credentials\n  396  \n  397:     credentialsFunc(bewit.id, function (err, credentials) {\n  398  \n  399          if (err) {\n  400:             return callback(err, credentials || null, bewit.ext);\n  401          }\n  402  \n  403:         if (!credentials) {\n  404:             return callback(Boom.unauthorized('Unknown credentials', 'Hawk'), null, bewit);\n  405          }\n  406  \n  407:         if (!credentials.key ||\n  408:             !credentials.algorithm) {\n  409  \n  410:             return callback(Boom.internal('Invalid credentials'), credentials, bewit);\n  411          }\n  412  \n  413:         if (Crypto.algorithms.indexOf(credentials.algorithm) === -1) {\n  414:             return callback(Boom.internal('Unknown algorithm'), credentials, bewit);\n  415          }\n  416  \n  417          // Calculate MAC\n  418  \n  419:         var mac = Crypto.calculateMac('bewit', credentials, {\n  420              ts: bewit.exp,\n  421              nonce: '',\n  ...\n  428  \n  429          if (!Cryptiles.fixedTimeComparison(mac, bewit.mac)) {\n  430:             return callback(Boom.unauthorized('Bad mac', 'Hawk'), credentials, bewit);\n  431          }\n  432  \n  433          // Successful authentication\n  434  \n  435:         return callback(null, credentials, bewit);\n  436      });\n  437  };\n  ...\n  443   */\n  444  \n  445: exports.authenticateMessage = function (host, port, message, authorization, credentialsFunc, options, callback) {\n  446  \n  447      callback = Hoek.nextTick(callback);\n  ...\n  467      }\n  468  \n  469:     // Fetch Hawk credentials\n  470  \n  471:     credentialsFunc(authorization.id, function (err, credentials) {\n  472  \n  473          if (err) {\n  474:             return callback(err, credentials || null);\n  475          }\n  476  \n  477:         if (!credentials) {\n  478:             return callback(Boom.unauthorized('Unknown credentials', 'Hawk'));\n  479          }\n  480  \n  481:         if (!credentials.key ||\n  482:             !credentials.algorithm) {\n  483  \n  484:             return callback(Boom.internal('Invalid credentials'), credentials);\n  485          }\n  486  \n  487:         if (Crypto.algorithms.indexOf(credentials.algorithm) === -1) {\n  488:             return callback(Boom.internal('Unknown algorithm'), credentials);\n  489          }\n  490  \n  ...\n  501          // Calculate MAC\n  502  \n  503:         var mac = Crypto.calculateMac('message', credentials, artifacts);\n  504          if (!Cryptiles.fixedTimeComparison(mac, authorization.mac)) {\n  505:             return callback(Boom.unauthorized('Bad mac', 'Hawk'), credentials);\n  506          }\n  507  \n  508          // Check payload hash\n  509  \n  510:         var hash = Crypto.calculatePayloadHash(message, credentials.algorithm);\n  511          if (!Cryptiles.fixedTimeComparison(hash, authorization.hash)) {\n  512:             return callback(Boom.unauthorized('Bad message hash', 'Hawk'), credentials);\n  513          }\n  514  \n  ...\n  518  \n  519              if (err) {\n  520:                 return callback(Boom.unauthorized('Invalid nonce', 'Hawk'), credentials);\n  521              }\n  522  \n  ...\n  524  \n  525              if (Math.abs((authorization.ts * 1000) - now) > (options.timestampSkewSec * 1000)) {\n  526:                 return callback(Boom.unauthorized('Stale timestamp'), credentials);\n  527              }\n  528  \n  529              // Successful authentication\n  530  \n  531:             return callback(null, credentials);\n  532          });\n  533      });\n\n/Users/kirkcp/Documents/node_play/slatemail_dist/slatemail.app/Contents/Resources/app.nw/node_modules/favicon/node_modules/request/node_modules/hawk/test/browser.js:\n   24  describe('Browser', function () {\n   25  \n   26:     var credentialsFunc = function (id, callback) {\n   27  \n   28:         var credentials = {\n   29              id: id,\n   30              key: 'werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn',\n   ..\n   33          };\n   34  \n   35:         return callback(null, credentials);\n   36      };\n   37  \n   ..\n   45          };\n   46  \n   47:         credentialsFunc('123456', function (err, credentials) {\n   48  \n   49:             var bewit = Browser.client.bewit('http://example.com/resource/4?a=1&b=2', { credentials: credentials, ttlSec: 60 * 60 * 24 * 365 * 100, ext: 'some-app-data' });\n   50              req.url += '&bewit=' + bewit;\n   51  \n   52:             Hawk.uri.authenticate(req, credentialsFunc, {}, function (err, credentials, attributes) {\n   53  \n   54                  expect(err).to.not.exist();\n   55:                 expect(credentials.user).to.equal('steve');\n   56                  expect(attributes.ext).to.equal('some-app-data');\n   57                  done();\n   ..\n   69          };\n   70  \n   71:         credentialsFunc('123456', function (err, credentials) {\n   72  \n   73:             var bewit = Browser.client.bewit('http://example.com/resource/4?a=1&b=2', { credentials: credentials, ttlSec: 60 * 60 * 24 * 365 * 100 });\n   74              req.url += '&bewit=' + bewit;\n   75  \n   76:             Hawk.uri.authenticate(req, credentialsFunc, {}, function (err, credentials, attributes) {\n   77  \n   78                  expect(err).to.not.exist();\n   79:                 expect(credentials.user).to.equal('steve');\n   80                  done();\n   81              });\n   ..\n   87          it('returns a valid bewit value', function (done) {\n   88  \n   89:             var credentials = {\n   90                  id: '123456',\n   91                  key: '2983d45yun89q',\n   ..\n   93              };\n   94  \n   95:             var bewit = Browser.client.bewit('https://example.com/somewhere/over/the/rainbow', { credentials: credentials, ttlSec: 300, localtimeOffsetMsec: 1356420407232 - Hawk.utils.now(), ext: 'xandyandz' });\n   96              expect(bewit).to.equal('MTIzNDU2XDEzNTY0MjA3MDdca3NjeHdOUjJ0SnBQMVQxekRMTlBiQjVVaUtJVTl0T1NKWFRVZEc3WDloOD1ceGFuZHlhbmR6');\n   97              done();\n   ..\n  100          it('returns a valid bewit value (explicit HTTP port)', function (done) {\n  101  \n  102:             var credentials = {\n  103                  id: '123456',\n  104                  key: '2983d45yun89q',\n  ...\n  106              };\n  107  \n  108:             var bewit = Browser.client.bewit('http://example.com:8080/somewhere/over/the/rainbow', { credentials: credentials, ttlSec: 300, localtimeOffsetMsec: 1356420407232 - Hawk.utils.now(), ext: 'xandyandz' });\n  109              expect(bewit).to.equal('MTIzNDU2XDEzNTY0MjA3MDdcaFpiSjNQMmNLRW80a3kwQzhqa1pBa1J5Q1p1ZWc0V1NOYnhWN3ZxM3hIVT1ceGFuZHlhbmR6');\n  110              done();\n  ...\n  113          it('returns a valid bewit value (explicit HTTPS port)', function (done) {\n  114  \n  115:             var credentials = {\n  116                  id: '123456',\n  117                  key: '2983d45yun89q',\n  ...\n  119              };\n  120  \n  121:             var bewit = Browser.client.bewit('https://example.com:8043/somewhere/over/the/rainbow', { credentials: credentials, ttlSec: 300, localtimeOffsetMsec: 1356420407232 - Hawk.utils.now(), ext: 'xandyandz' });\n  122              expect(bewit).to.equal('MTIzNDU2XDEzNTY0MjA3MDdcL2t4UjhwK0xSaTdvQTRnUXc3cWlxa3BiVHRKYkR4OEtRMC9HRUwvVytTUT1ceGFuZHlhbmR6');\n  123              done();\n  ...\n  126          it('returns a valid bewit value (null ext)', function (done) {\n  127  \n  128:             var credentials = {\n  129                  id: '123456',\n  130                  key: '2983d45yun89q',\n  ...\n  132              };\n  133  \n  134:             var bewit = Browser.client.bewit('https://example.com/somewhere/over/the/rainbow', { credentials: credentials, ttlSec: 300, localtimeOffsetMsec: 1356420407232 - Hawk.utils.now(), ext: null });\n  135              expect(bewit).to.equal('MTIzNDU2XDEzNTY0MjA3MDdcSUdZbUxnSXFMckNlOEN4dktQczRKbFdJQStValdKSm91d2dBUmlWaENBZz1c');\n  136              done();\n  ...\n  139          it('errors on invalid options', function (done) {\n  140  \n  141:             var credentials = {\n  142                  id: '123456',\n  143                  key: '2983d45yun89q',\n  ...\n  152          it('errors on missing uri', function (done) {\n  153  \n  154:             var credentials = {\n  155                  id: '123456',\n  156                  key: '2983d45yun89q',\n  ...\n  158              };\n  159  \n  160:             var bewit = Browser.client.bewit('', { credentials: credentials, ttlSec: 300, localtimeOffsetMsec: 1356420407232 - Hawk.utils.now(), ext: 'xandyandz' });\n  161              expect(bewit).to.equal('');\n  162              done();\n  ...\n  165          it('errors on invalid uri', function (done) {\n  166  \n  167:             var credentials = {\n  168                  id: '123456',\n  169                  key: '2983d45yun89q',\n  ...\n  171              };\n  172  \n  173:             var bewit = Browser.client.bewit(5, { credentials: credentials, ttlSec: 300, localtimeOffsetMsec: 1356420407232 - Hawk.utils.now(), ext: 'xandyandz' });\n  174              expect(bewit).to.equal('');\n  175              done();\n  176          });\n  177  \n  178:         it('errors on invalid credentials (id)', function (done) {\n  179  \n  180:             var credentials = {\n  181                  key: '2983d45yun89q',\n  182                  algorithm: 'sha256'\n  183              };\n  184  \n  185:             var bewit = Browser.client.bewit('https://example.com/somewhere/over/the/rainbow', { credentials: credentials, ttlSec: 3000, ext: 'xandyandz' });\n  186              expect(bewit).to.equal('');\n  187              done();\n  188          });\n  189  \n  190:         it('errors on missing credentials', function (done) {\n  191  \n  192              var bewit = Browser.client.bewit('https://example.com/somewhere/over/the/rainbow', { ttlSec: 3000, ext: 'xandyandz' });\n  ...\n  195          });\n  196  \n  197:         it('errors on invalid credentials (key)', function (done) {\n  198  \n  199:             var credentials = {\n  200                  id: '123456',\n  201                  algorithm: 'sha256'\n  202              };\n  203  \n  204:             var bewit = Browser.client.bewit('https://example.com/somewhere/over/the/rainbow', { credentials: credentials, ttlSec: 3000, ext: 'xandyandz' });\n  205              expect(bewit).to.equal('');\n  206              done();\n  ...\n  209          it('errors on invalid algorithm', function (done) {\n  210  \n  211:             var credentials = {\n  212                  id: '123456',\n  213                  key: '2983d45yun89q',\n  ...\n  215              };\n  216  \n  217:             var bewit = Browser.client.bewit('https://example.com/somewhere/over/the/rainbow', { credentials: credentials, ttlSec: 300, ext: 'xandyandz' });\n  218              expect(bewit).to.equal('');\n  219              done();\n  ...\n  222          it('errors on missing options', function (done) {\n  223  \n  224:             var credentials = {\n  225                  id: '123456',\n  226                  key: '2983d45yun89q',\n  ...\n  243          };\n  244  \n  245:         credentialsFunc('123456', function (err, credentials) {\n  246  \n  247:             req.authorization = Browser.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials, ext: 'some-app-data' }).field;\n  248              expect(req.authorization).to.exist();\n  249  \n  250:             Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials, artifacts) {\n  251  \n  252                  expect(err).to.not.exist();\n  253:                 expect(credentials.user).to.equal('steve');\n  254                  expect(artifacts.ext).to.equal('some-app-data');\n  255                  done();\n  ...\n  271          var payload = 'some not so random text';\n  272  \n  273:         credentialsFunc('123456', function (err, credentials) {\n  274  \n  275:             var reqHeader = Browser.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials, ext: 'some-app-data', payload: payload, contentType: req.headers['content-type'] });\n  276              req.headers.authorization = reqHeader.field;\n  277  \n  278:             Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials, artifacts) {\n  279  \n  280                  expect(err).to.not.exist();\n  281:                 expect(credentials.user).to.equal('steve');\n  282                  expect(artifacts.ext).to.equal('some-app-data');\n  283:                 expect(Hawk.server.authenticatePayload(payload, credentials, artifacts, req.headers['content-type'])).to.equal(true);\n  284  \n  285                  var res = {\n  ...\n  293                  };\n  294  \n  295:                 res.headers['server-authorization'] = Hawk.server.header(credentials, artifacts, { payload: 'some reply', contentType: 'text/plain', ext: 'response-specific' });\n  296                  expect(res.headers['server-authorization']).to.exist();\n  297  \n  298:                 expect(Browser.client.authenticate(res, credentials, artifacts, { payload: 'some reply' })).to.equal(true);\n  299                  done();\n  300              });\n  ...\n  315          var payload = 'some not so random text';\n  316  \n  317:         credentialsFunc('123456', function (err, credentials) {\n  318  \n  319:             var reqHeader = Browser.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials, ext: 'some-app-data', payload: payload, contentType: req.headers['content-type'] });\n  320              req.headers.authorization = reqHeader.field;\n  321  \n  322:             Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials, artifacts) {\n  323  \n  324                  expect(err).to.not.exist();\n  325:                 expect(credentials.user).to.equal('steve');\n  326                  expect(artifacts.ext).to.equal('some-app-data');\n  327:                 expect(Hawk.server.authenticatePayload(payload, credentials, artifacts, req.headers['content-type'])).to.equal(true);\n  328  \n  329                  var res = {\n  ...\n  337                  };\n  338  \n  339:                 res.headers['server-authorization'] = Hawk.server.header(credentials, artifacts, { payload: 'some reply', contentType: 'text/plain', ext: 'response-specific' });\n  340                  expect(res.headers['server-authorization']).to.exist();\n  341  \n  342:                 expect(Browser.client.authenticate(res, credentials, artifacts, { payload: 'some reply' })).to.equal(true);\n  343                  done();\n  344              });\n  ...\n  355          };\n  356  \n  357:         credentialsFunc('123456', function (err, credentials) {\n  358  \n  359:             req.authorization = Browser.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials, ext: 'some-app-data', localtimeOffsetMsec: 100000 }).field;\n  360              expect(req.authorization).to.exist();\n  361  \n  362:             Hawk.server.authenticate(req, credentialsFunc, { localtimeOffsetMsec: 100000 }, function (err, credentials, artifacts) {\n  363  \n  364                  expect(err).to.not.exist();\n  365:                 expect(credentials.user).to.equal('steve');\n  366                  expect(artifacts.ext).to.equal('some-app-data');\n  367                  done();\n  ...\n  383          var payload = 'some not so random text';\n  384  \n  385:         credentialsFunc('123456', function (err, credentials) {\n  386  \n  387:             var reqHeader = Browser.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials, ext: 'some-app-data', payload: payload, contentType: req.headers['content-type'] });\n  388              req.headers.authorization = reqHeader.field;\n  389  \n  390:             Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials, artifacts) {\n  391  \n  392                  expect(err).to.not.exist();\n  393:                 expect(credentials.user).to.equal('steve');\n  394                  expect(artifacts.ext).to.equal('some-app-data');\n  395:                 expect(Hawk.server.authenticatePayload(payload, credentials, artifacts, req.headers['content-type'])).to.equal(true);\n  396  \n  397                  var res = {\n  ...\n  405                  };\n  406  \n  407:                 res.headers['server-authorization'] = Hawk.server.header(credentials, artifacts);\n  408                  expect(res.headers['server-authorization']).to.exist();\n  409  \n  410:                 expect(Browser.client.authenticate(res, credentials, artifacts)).to.equal(true);\n  411                  done();\n  412              });\n  ...\n  427          var payload = 'some not so random text';\n  428  \n  429:         credentialsFunc('123456', function (err, credentials) {\n  430  \n  431:             var reqHeader = Browser.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials, ext: 'some-app-data', payload: payload, contentType: req.headers['content-type'] });\n  432              req.headers.authorization = reqHeader.field;\n  433  \n  434:             Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials, artifacts) {\n  435  \n  436                  expect(err).to.not.exist();\n  437:                 expect(credentials.user).to.equal('steve');\n  438                  expect(artifacts.ext).to.equal('some-app-data');\n  439:                 expect(Hawk.server.authenticatePayload(payload, credentials, artifacts, req.headers['content-type'])).to.equal(true);\n  440  \n  441                  var res = {\n  ...\n  449                  };\n  450  \n  451:                 expect(Browser.client.authenticate(res, credentials, artifacts)).to.equal(true);\n  452                  done();\n  453              });\n  ...\n  464          };\n  465  \n  466:         credentialsFunc('123456', function (err, credentials) {\n  467  \n  468              Browser.utils.setNtpOffset(60 * 60 * 1000);\n  469:             var header = Browser.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials, ext: 'some-app-data' });\n  470              req.authorization = header.field;\n  471              expect(req.authorization).to.exist();\n  472  \n  473:             Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials, artifacts) {\n  474  \n  475                  expect(err).to.exist();\n  ...\n  487  \n  488                  expect(Browser.utils.getNtpOffset()).to.equal(60 * 60 * 1000);\n  489:                 expect(Browser.client.authenticate(res, credentials, header.artifacts)).to.equal(true);\n  490                  expect(Browser.utils.getNtpOffset()).to.equal(0);\n  491  \n  492:                 req.authorization = Browser.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials, ext: 'some-app-data' }).field;\n  493                  expect(req.authorization).to.exist();\n  494  \n  495:                 Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials, artifacts) {\n  496  \n  497                      expect(err).to.not.exist();\n  498:                     expect(credentials.user).to.equal('steve');\n  499                      expect(artifacts.ext).to.equal('some-app-data');\n  500                      done();\n  ...\n  513          };\n  514  \n  515:         credentialsFunc('123456', function (err, credentials) {\n  516  \n  517              var localStorage = new Browser.internals.LocalStorage();\n  ...\n  520  \n  521              Browser.utils.setNtpOffset(60 * 60 * 1000);\n  522:             var header = Browser.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials, ext: 'some-app-data' });\n  523              req.authorization = header.field;\n  524              expect(req.authorization).to.exist();\n  525  \n  526:             Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials, artifacts) {\n  527  \n  528                  expect(err).to.exist();\n  ...\n  541                  expect(parseInt(localStorage.getItem('hawk_ntp_offset'))).to.equal(60 * 60 * 1000);\n  542                  expect(Browser.utils.getNtpOffset()).to.equal(60 * 60 * 1000);\n  543:                 expect(Browser.client.authenticate(res, credentials, header.artifacts)).to.equal(true);\n  544                  expect(Browser.utils.getNtpOffset()).to.equal(0);\n  545                  expect(parseInt(localStorage.getItem('hawk_ntp_offset'))).to.equal(0);\n  546  \n  547:                 req.authorization = Browser.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials, ext: 'some-app-data' }).field;\n  548                  expect(req.authorization).to.exist();\n  549  \n  550:                 Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials, artifacts) {\n  551  \n  552                      expect(err).to.not.exist();\n  553:                     expect(credentials.user).to.equal('steve');\n  554                      expect(artifacts.ext).to.equal('some-app-data');\n  555                      done();\n  ...\n  572          var payload = 'some not so random text';\n  573  \n  574:         credentialsFunc('123456', function (err, credentials) {\n  575  \n  576:             var reqHeader = Browser.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials, ext: 'some-app-data', payload: payload, contentType: req.headers['content-type'] });\n  577              req.headers.authorization = reqHeader.field;\n  578  \n  579:             Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials, artifacts) {\n  580  \n  581                  expect(err).to.not.exist();\n  582:                 expect(credentials.user).to.equal('steve');\n  583                  expect(artifacts.ext).to.equal('some-app-data');\n  584:                 expect(Hawk.server.authenticatePayload(payload, credentials, artifacts, req.headers['content-type'])).to.equal(true);\n  585  \n  586                  var res = {\n  ...\n  594                  };\n  595  \n  596:                 res.headers['server-authorization'] = Hawk.server.header(credentials, artifacts);\n  597                  expect(res.headers['server-authorization']).to.exist();\n  598  \n  599:                 expect(Browser.client.authenticate(res, credentials, artifacts, { payload: 'some reply' })).to.equal(false);\n  600                  done();\n  601              });\n  ...\n  612          };\n  613  \n  614:         credentialsFunc('123456', function (err, credentials) {\n  615  \n  616:             req.authorization = Browser.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials, payload: 'hola!', ext: 'some-app-data' }).field;\n  617:             Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials, artifacts) {\n  618  \n  619                  expect(err).to.not.exist();\n  620:                 expect(credentials.user).to.equal('steve');\n  621                  expect(artifacts.ext).to.equal('some-app-data');\n  622                  done();\n  ...\n  634          };\n  635  \n  636:         credentialsFunc('123456', function (err, credentials) {\n  637  \n  638:             req.authorization = Browser.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials, payload: 'hola!', ext: 'some-app-data' }).field;\n  639:             Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials, artifacts) {\n  640  \n  641                  expect(err).to.not.exist();\n  642:                 expect(credentials.user).to.equal('steve');\n  643                  expect(artifacts.ext).to.equal('some-app-data');\n  644:                 expect(Hawk.server.authenticatePayload('hola!', credentials, artifacts)).to.be.true();\n  645:                 expect(Hawk.server.authenticatePayload('hello!', credentials, artifacts)).to.be.false();\n  646                  done();\n  647              });\n  ...\n  658          };\n  659  \n  660:         credentialsFunc('123456', function (err, credentials) {\n  661  \n  662:             req.authorization = Browser.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials, ext: 'some-app-data', app: 'asd23ased' }).field;\n  663:             Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials, artifacts) {\n  664  \n  665                  expect(err).to.not.exist();\n  666:                 expect(credentials.user).to.equal('steve');\n  667                  expect(artifacts.ext).to.equal('some-app-data');\n  668                  expect(artifacts.app).to.equal('asd23ased');\n  ...\n  681          };\n  682  \n  683:         credentialsFunc('123456', function (err, credentials) {\n  684  \n  685:             req.authorization = Browser.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials, ext: 'some-app-data', app: 'asd23ased', dlg: '23434szr3q4d' }).field;\n  686:             Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials, artifacts) {\n  687  \n  688                  expect(err).to.not.exist();\n  689:                 expect(credentials.user).to.equal('steve');\n  690                  expect(artifacts.ext).to.equal('some-app-data');\n  691                  expect(artifacts.app).to.equal('asd23ased');\n  ...\n  705          };\n  706  \n  707:         credentialsFunc('123456', function (err, credentials) {\n  708  \n  709:             req.authorization = Browser.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials, payload: 'hola!', ext: 'some-app-data' }).field;\n  710:             Hawk.server.authenticate(req, credentialsFunc, { payload: 'byebye!' }, function (err, credentials, artifacts) {\n  711  \n  712                  expect(err).to.exist();\n  ...\n  726          };\n  727  \n  728:         credentialsFunc('123456', function (err, credentials) {\n  729  \n  730:             req.authorization = Browser.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials, ext: 'some-app-data' }).field;\n  731              req.url = '/something/else';\n  732  \n  733:             Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials, artifacts) {\n  734  \n  735                  expect(err).to.exist();\n  736:                 expect(credentials).to.exist();\n  737                  done();\n  738              });\n  ...\n  746              it('returns a valid authorization header (sha1)', function (done) {\n  747  \n  748:                 var credentials = {\n  749                      id: '123456',\n  750                      key: '2983d45yun89q',\n  ...\n  752                  };\n  753  \n  754:                 var header = Browser.client.header('http://example.net/somewhere/over/the/rainbow', 'POST', { credentials: credentials, ext: 'Bazinga!', timestamp: 1353809207, nonce: 'Ygvqdz', payload: 'something to write about' }).field;\n  755                  expect(header).to.equal('Hawk id=\"123456\", ts=\"1353809207\", nonce=\"Ygvqdz\", hash=\"bsvY3IfUllw6V5rvk4tStEvpBhE=\", ext=\"Bazinga!\", mac=\"qbf1ZPG/r/e06F4ht+T77LXi5vw=\"');\n  756                  done();\n  ...\n  759              it('returns a valid authorization header (sha256)', function (done) {\n  760  \n  761:                 var credentials = {\n  762                      id: '123456',\n  763                      key: '2983d45yun89q',\n  ...\n  765                  };\n  766  \n  767:                 var header = Browser.client.header('https://example.net/somewhere/over/the/rainbow', 'POST', { credentials: credentials, ext: 'Bazinga!', timestamp: 1353809207, nonce: 'Ygvqdz', payload: 'something to write about', contentType: 'text/plain' }).field;\n  768                  expect(header).to.equal('Hawk id=\"123456\", ts=\"1353809207\", nonce=\"Ygvqdz\", hash=\"2QfCt3GuY9HQnHWyWD3wX68ZOKbynqlfYmuO2ZBRqtY=\", ext=\"Bazinga!\", mac=\"q1CwFoSHzPZSkbIvl0oYlD+91rBUEvFk763nMjMndj8=\"');\n  769                  done();\n  ...\n  772              it('returns a valid authorization header (empty payload)', function (done) {\n  773  \n  774:                 var credentials = {\n  775                      id: '123456',\n  776                      key: '2983d45yun89q',\n  ...\n  778                  };\n  779  \n  780:                 var header = Browser.client.header('http://example.net/somewhere/over/the/rainbow', 'POST', { credentials: credentials, ext: 'Bazinga!', timestamp: 1353809207, nonce: 'Ygvqdz', payload: '' }).field;\n  781                  expect(header).to.equal('Hawk id=\\\"123456\\\", ts=\\\"1353809207\\\", nonce=\\\"Ygvqdz\\\", hash=\\\"404ghL7K+hfyhByKKejFBRGgTjU=\\\", ext=\\\"Bazinga!\\\", mac=\\\"Bh1sj1DOfFRWOdi3ww52nLCJdBE=\\\"');\n  782                  done();\n  ...\n  785              it('returns a valid authorization header (no ext)', function (done) {\n  786  \n  787:                 var credentials = {\n  788                      id: '123456',\n  789                      key: '2983d45yun89q',\n  ...\n  791                  };\n  792  \n  793:                 var header = Browser.client.header('https://example.net/somewhere/over/the/rainbow', 'POST', { credentials: credentials, timestamp: 1353809207, nonce: 'Ygvqdz', payload: 'something to write about', contentType: 'text/plain' }).field;\n  794                  expect(header).to.equal('Hawk id=\"123456\", ts=\"1353809207\", nonce=\"Ygvqdz\", hash=\"2QfCt3GuY9HQnHWyWD3wX68ZOKbynqlfYmuO2ZBRqtY=\", mac=\"HTgtd0jPI6E4izx8e4OHdO36q00xFCU0FolNq3RiCYs=\"');\n  795                  done();\n  ...\n  798              it('returns a valid authorization header (null ext)', function (done) {\n  799  \n  800:                 var credentials = {\n  801                      id: '123456',\n  802                      key: '2983d45yun89q',\n  ...\n  804                  };\n  805  \n  806:                 var header = Browser.client.header('https://example.net/somewhere/over/the/rainbow', 'POST', { credentials: credentials, timestamp: 1353809207, nonce: 'Ygvqdz', payload: 'something to write about', contentType: 'text/plain', ext: null }).field;\n  807                  expect(header).to.equal('Hawk id=\"123456\", ts=\"1353809207\", nonce=\"Ygvqdz\", hash=\"2QfCt3GuY9HQnHWyWD3wX68ZOKbynqlfYmuO2ZBRqtY=\", mac=\"HTgtd0jPI6E4izx8e4OHdO36q00xFCU0FolNq3RiCYs=\"');\n  808                  done();\n  ...\n  811              it('returns a valid authorization header (uri object)', function (done) {\n  812  \n  813:                 var credentials = {\n  814                      id: '123456',\n  815                      key: '2983d45yun89q',\n  ...\n  818  \n  819                  var uri = Browser.utils.parseUri('https://example.net/somewhere/over/the/rainbow');\n  820:                 var header = Browser.client.header(uri, 'POST', { credentials: credentials, timestamp: 1353809207, nonce: 'Ygvqdz', payload: 'something to write about', contentType: 'text/plain' }).field;\n  821                  expect(header).to.equal('Hawk id=\"123456\", ts=\"1353809207\", nonce=\"Ygvqdz\", hash=\"2QfCt3GuY9HQnHWyWD3wX68ZOKbynqlfYmuO2ZBRqtY=\", mac=\"HTgtd0jPI6E4izx8e4OHdO36q00xFCU0FolNq3RiCYs=\"');\n  822                  done();\n  ...\n  833              it('errors on empty uri', function (done) {\n  834  \n  835:                 var credentials = {\n  836                      id: '123456',\n  837                      key: '2983d45yun89q',\n  ...\n  839                  };\n  840  \n  841:                 var header = Browser.client.header('', 'POST', { credentials: credentials, timestamp: 1353809207, nonce: 'Ygvqdz', payload: 'something to write about', contentType: 'text/plain' });\n  842                  expect(header.field).to.equal('');\n  843                  expect(header.err).to.equal('Invalid argument type');\n  ...\n  847              it('errors on invalid uri', function (done) {\n  848  \n  849:                 var credentials = {\n  850                      id: '123456',\n  851                      key: '2983d45yun89q',\n  ...\n  853                  };\n  854  \n  855:                 var header = Browser.client.header(4, 'POST', { credentials: credentials, timestamp: 1353809207, nonce: 'Ygvqdz', payload: 'something to write about', contentType: 'text/plain' });\n  856                  expect(header.field).to.equal('');\n  857                  expect(header.err).to.equal('Invalid argument type');\n  ...\n  861              it('errors on missing method', function (done) {\n  862  \n  863:                 var credentials = {\n  864                      id: '123456',\n  865                      key: '2983d45yun89q',\n  ...\n  867                  };\n  868  \n  869:                 var header = Browser.client.header('https://example.net/somewhere/over/the/rainbow', '', { credentials: credentials, timestamp: 1353809207, nonce: 'Ygvqdz', payload: 'something to write about', contentType: 'text/plain' });\n  870                  expect(header.field).to.equal('');\n  871                  expect(header.err).to.equal('Invalid argument type');\n  ...\n  875              it('errors on invalid method', function (done) {\n  876  \n  877:                 var credentials = {\n  878                      id: '123456',\n  879                      key: '2983d45yun89q',\n  ...\n  881                  };\n  882  \n  883:                 var header = Browser.client.header('https://example.net/somewhere/over/the/rainbow', 5, { credentials: credentials, timestamp: 1353809207, nonce: 'Ygvqdz', payload: 'something to write about', contentType: 'text/plain' });\n  884                  expect(header.field).to.equal('');\n  885                  expect(header.err).to.equal('Invalid argument type');\n  ...\n  887              });\n  888  \n  889:             it('errors on missing credentials', function (done) {\n  890  \n  891                  var header = Browser.client.header('https://example.net/somewhere/over/the/rainbow', 'POST', { ext: 'Bazinga!', timestamp: 1353809207 });\n  892                  expect(header.field).to.equal('');\n  893:                 expect(header.err).to.equal('Invalid credentials object');\n  894                  done();\n  895              });\n  896  \n  897:             it('errors on invalid credentials (id)', function (done) {\n  898  \n  899:                 var credentials = {\n  900                      key: '2983d45yun89q',\n  901                      algorithm: 'sha256'\n  902                  };\n  903  \n  904:                 var header = Browser.client.header('https://example.net/somewhere/over/the/rainbow', 'POST', { credentials: credentials, ext: 'Bazinga!', timestamp: 1353809207 });\n  905                  expect(header.field).to.equal('');\n  906:                 expect(header.err).to.equal('Invalid credentials object');\n  907                  done();\n  908              });\n  909  \n  910:             it('errors on invalid credentials (key)', function (done) {\n  911  \n  912:                 var credentials = {\n  913                      id: '123456',\n  914                      algorithm: 'sha256'\n  915                  };\n  916  \n  917:                 var header = Browser.client.header('https://example.net/somewhere/over/the/rainbow', 'POST', { credentials: credentials, ext: 'Bazinga!', timestamp: 1353809207 });\n  918                  expect(header.field).to.equal('');\n  919:                 expect(header.err).to.equal('Invalid credentials object');\n  920                  done();\n  921              });\n  ...\n  923              it('errors on invalid algorithm', function (done) {\n  924  \n  925:                 var credentials = {\n  926                      id: '123456',\n  927                      key: '2983d45yun89q',\n  ...\n  929                  };\n  930  \n  931:                 var header = Browser.client.header('https://example.net/somewhere/over/the/rainbow', 'POST', { credentials: credentials, payload: 'something, anything!', ext: 'Bazinga!', timestamp: 1353809207 });\n  932                  expect(header.field).to.equal('');\n  933                  expect(header.err).to.equal('Unknown algorithm');\n  ...\n  937              it('uses a pre-calculated payload hash', function (done) {\n  938  \n  939:                 var credentials = {\n  940                      id: '123456',\n  941                      key: '2983d45yun89q',\n  ...\n  943                  };\n  944  \n  945:                 var options = { credentials: credentials, ext: 'Bazinga!', timestamp: 1353809207, nonce: 'Ygvqdz', payload: 'something to write about', contentType: 'text/plain' };\n  946:                 options.hash = Browser.crypto.calculatePayloadHash(options.payload, credentials.algorithm, options.contentType);\n  947                  var header = Browser.client.header('https://example.net/somewhere/over/the/rainbow', 'POST', options).field;\n  948                  expect(header).to.equal('Hawk id=\"123456\", ts=\"1353809207\", nonce=\"Ygvqdz\", hash=\"2QfCt3GuY9HQnHWyWD3wX68ZOKbynqlfYmuO2ZBRqtY=\", ext=\"Bazinga!\", mac=\"q1CwFoSHzPZSkbIvl0oYlD+91rBUEvFk763nMjMndj8=\"');\n  ...\n  965                  };\n  966  \n  967:                 var credentials = {\n  968                      id: '123456',\n  969                      key: 'werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn',\n  ...\n  982                  };\n  983  \n  984:                 expect(Browser.client.authenticate(res, credentials, artifacts)).to.equal(true);\n  985                  done();\n  986              });\n  ...\n 1030                  };\n 1031  \n 1032:                 var credentials = {\n 1033                      id: '123456',\n 1034                      key: 'werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn',\n ....\n 1037                  };\n 1038  \n 1039:                 expect(Browser.client.authenticate(res, credentials, artifacts)).to.equal(false);\n 1040                  done();\n 1041              });\n ....\n 1069                  };\n 1070  \n 1071:                 var credentials = {\n 1072                      id: '123456',\n 1073                      key: 'werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn',\n ....\n 1076                  };\n 1077  \n 1078:                 expect(Browser.client.authenticate(res, credentials, artifacts)).to.equal(true);\n 1079                  done();\n 1080              });\n ....\n 1098              it('errors on invalid WWW-Authenticate header format', function (done) {\n 1099  \n 1100:                 var credentials = {\n 1101                      id: '123456',\n 1102                      key: 'werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn',\n ....\n 1115                  };\n 1116  \n 1117:                 expect(Browser.client.authenticate(res, credentials)).to.equal(false);\n 1118                  done();\n 1119              });\n ....\n 1124              it('generates an authorization then successfully parse it', function (done) {\n 1125  \n 1126:                 credentialsFunc('123456', function (err, credentials) {\n 1127  \n 1128:                     var auth = Browser.client.message('example.com', 8080, 'some message', { credentials: credentials });\n 1129                      expect(auth).to.exist();\n 1130  \n 1131:                     Hawk.server.authenticateMessage('example.com', 8080, 'some message', auth, credentialsFunc, {}, function (err, credentials) {\n 1132  \n 1133                          expect(err).to.not.exist();\n 1134:                         expect(credentials.user).to.equal('steve');\n 1135                          done();\n 1136                      });\n ....\n 1140              it('generates an authorization using custom nonce/timestamp', function (done) {\n 1141  \n 1142:                 credentialsFunc('123456', function (err, credentials) {\n 1143  \n 1144:                     var auth = Browser.client.message('example.com', 8080, 'some message', { credentials: credentials, nonce: 'abc123', timestamp: 1398536270957 });\n 1145                      expect(auth).to.exist();\n 1146                      expect(auth.nonce).to.equal('abc123');\n ....\n 1152              it('errors on missing host', function (done) {\n 1153  \n 1154:                 credentialsFunc('123456', function (err, credentials) {\n 1155  \n 1156:                     var auth = Browser.client.message(null, 8080, 'some message', { credentials: credentials });\n 1157                      expect(auth).to.not.exist();\n 1158                      done();\n ....\n 1162              it('errors on invalid host', function (done) {\n 1163  \n 1164:                 credentialsFunc('123456', function (err, credentials) {\n 1165  \n 1166:                     var auth = Browser.client.message(5, 8080, 'some message', { credentials: credentials });\n 1167                      expect(auth).to.not.exist();\n 1168                      done();\n ....\n 1172              it('errors on missing port', function (done) {\n 1173  \n 1174:                 credentialsFunc('123456', function (err, credentials) {\n 1175  \n 1176:                     var auth = Browser.client.message('example.com', 0, 'some message', { credentials: credentials });\n 1177                      expect(auth).to.not.exist();\n 1178                      done();\n ....\n 1182              it('errors on invalid port', function (done) {\n 1183  \n 1184:                 credentialsFunc('123456', function (err, credentials) {\n 1185  \n 1186:                     var auth = Browser.client.message('example.com', 'a', 'some message', { credentials: credentials });\n 1187                      expect(auth).to.not.exist();\n 1188                      done();\n ....\n 1192              it('errors on missing message', function (done) {\n 1193  \n 1194:                 credentialsFunc('123456', function (err, credentials) {\n 1195  \n 1196:                     var auth = Browser.client.message('example.com', 8080, undefined, { credentials: credentials });\n 1197                      expect(auth).to.not.exist();\n 1198                      done();\n ....\n 1202              it('errors on null message', function (done) {\n 1203  \n 1204:                 credentialsFunc('123456', function (err, credentials) {\n 1205  \n 1206:                     var auth = Browser.client.message('example.com', 8080, null, { credentials: credentials });\n 1207                      expect(auth).to.not.exist();\n 1208                      done();\n ....\n 1212              it('errors on invalid message', function (done) {\n 1213  \n 1214:                 credentialsFunc('123456', function (err, credentials) {\n 1215  \n 1216:                     var auth = Browser.client.message('example.com', 8080, 5, { credentials: credentials });\n 1217                      expect(auth).to.not.exist();\n 1218                      done();\n ....\n 1220              });\n 1221  \n 1222:             it('errors on missing credentials', function (done) {\n 1223  \n 1224                  var auth = Browser.client.message('example.com', 8080, 'some message', {});\n ....\n 1234              });\n 1235  \n 1236:             it('errors on invalid credentials (id)', function (done) {\n 1237  \n 1238:                 credentialsFunc('123456', function (err, credentials) {\n 1239  \n 1240:                     var creds = Hoek.clone(credentials);\n 1241                      delete creds.id;\n 1242:                     var auth = Browser.client.message('example.com', 8080, 'some message', { credentials: creds });\n 1243                      expect(auth).to.not.exist();\n 1244                      done();\n ....\n 1246              });\n 1247  \n 1248:             it('errors on invalid credentials (key)', function (done) {\n 1249  \n 1250:                 credentialsFunc('123456', function (err, credentials) {\n 1251  \n 1252:                     var creds = Hoek.clone(credentials);\n 1253                      delete creds.key;\n 1254:                     var auth = Browser.client.message('example.com', 8080, 'some message', { credentials: creds });\n 1255                      expect(auth).to.not.exist();\n 1256                      done();\n ....\n 1260              it('errors on invalid algorithm', function (done) {\n 1261  \n 1262:                 credentialsFunc('123456', function (err, credentials) {\n 1263  \n 1264:                     var creds = Hoek.clone(credentials);\n 1265                      creds.algorithm = 'blah';\n 1266:                     var auth = Browser.client.message('example.com', 8080, 'some message', { credentials: creds });\n 1267                      expect(auth).to.not.exist();\n 1268                      done();\n ....\n 1275              it('validates a timestamp', function (done) {\n 1276  \n 1277:                 credentialsFunc('123456', function (err, credentials) {\n 1278  \n 1279:                     var tsm = Hawk.crypto.timestampMessage(credentials);\n 1280:                     expect(Browser.client.authenticateTimestamp(tsm, credentials)).to.equal(true);\n 1281                      done();\n 1282                  });\n ....\n 1285              it('validates a timestamp without updating local time', function (done) {\n 1286  \n 1287:                 credentialsFunc('123456', function (err, credentials) {\n 1288  \n 1289                      var offset = Browser.utils.getNtpOffset();\n 1290:                     var tsm = Hawk.crypto.timestampMessage(credentials, 10000);\n 1291:                     expect(Browser.client.authenticateTimestamp(tsm, credentials, false)).to.equal(true);\n 1292                      expect(offset).to.equal(Browser.utils.getNtpOffset());\n 1293                      done();\n ....\n 1297              it('detects a bad timestamp', function (done) {\n 1298  \n 1299:                 credentialsFunc('123456', function (err, credentials) {\n 1300  \n 1301:                     var tsm = Hawk.crypto.timestampMessage(credentials);\n 1302                      tsm.ts = 4;\n 1303:                     expect(Browser.client.authenticateTimestamp(tsm, credentials)).to.equal(false);\n 1304                      done();\n 1305                  });\n\n/Users/kirkcp/Documents/node_play/slatemail_dist/slatemail.app/Contents/Resources/app.nw/node_modules/favicon/node_modules/request/node_modules/hawk/test/client.js:\n   28              it('returns a valid authorization header (sha1)', function (done) {\n   29  \n   30:                 var credentials = {\n   31                      id: '123456',\n   32                      key: '2983d45yun89q',\n   ..\n   34                  };\n   35  \n   36:                 var header = Hawk.client.header('http://example.net/somewhere/over/the/rainbow', 'POST', { credentials: credentials, ext: 'Bazinga!', timestamp: 1353809207, nonce: 'Ygvqdz', payload: 'something to write about' }).field;\n   37                  expect(header).to.equal('Hawk id=\"123456\", ts=\"1353809207\", nonce=\"Ygvqdz\", hash=\"bsvY3IfUllw6V5rvk4tStEvpBhE=\", ext=\"Bazinga!\", mac=\"qbf1ZPG/r/e06F4ht+T77LXi5vw=\"');\n   38                  done();\n   ..\n   41              it('returns a valid authorization header (sha256)', function (done) {\n   42  \n   43:                 var credentials = {\n   44                      id: '123456',\n   45                      key: '2983d45yun89q',\n   ..\n   47                  };\n   48  \n   49:                 var header = Hawk.client.header('https://example.net/somewhere/over/the/rainbow', 'POST', { credentials: credentials, ext: 'Bazinga!', timestamp: 1353809207, nonce: 'Ygvqdz', payload: 'something to write about', contentType: 'text/plain' }).field;\n   50                  expect(header).to.equal('Hawk id=\"123456\", ts=\"1353809207\", nonce=\"Ygvqdz\", hash=\"2QfCt3GuY9HQnHWyWD3wX68ZOKbynqlfYmuO2ZBRqtY=\", ext=\"Bazinga!\", mac=\"q1CwFoSHzPZSkbIvl0oYlD+91rBUEvFk763nMjMndj8=\"');\n   51                  done();\n   ..\n   54              it('returns a valid authorization header (no ext)', function (done) {\n   55  \n   56:                 var credentials = {\n   57                      id: '123456',\n   58                      key: '2983d45yun89q',\n   ..\n   60                  };\n   61  \n   62:                 var header = Hawk.client.header('https://example.net/somewhere/over/the/rainbow', 'POST', { credentials: credentials, timestamp: 1353809207, nonce: 'Ygvqdz', payload: 'something to write about', contentType: 'text/plain' }).field;\n   63                  expect(header).to.equal('Hawk id=\"123456\", ts=\"1353809207\", nonce=\"Ygvqdz\", hash=\"2QfCt3GuY9HQnHWyWD3wX68ZOKbynqlfYmuO2ZBRqtY=\", mac=\"HTgtd0jPI6E4izx8e4OHdO36q00xFCU0FolNq3RiCYs=\"');\n   64                  done();\n   ..\n   67              it('returns a valid authorization header (null ext)', function (done) {\n   68  \n   69:                 var credentials = {\n   70                      id: '123456',\n   71                      key: '2983d45yun89q',\n   ..\n   73                  };\n   74  \n   75:                 var header = Hawk.client.header('https://example.net/somewhere/over/the/rainbow', 'POST', { credentials: credentials, timestamp: 1353809207, nonce: 'Ygvqdz', payload: 'something to write about', contentType: 'text/plain', ext: null }).field;\n   76                  expect(header).to.equal('Hawk id=\"123456\", ts=\"1353809207\", nonce=\"Ygvqdz\", hash=\"2QfCt3GuY9HQnHWyWD3wX68ZOKbynqlfYmuO2ZBRqtY=\", mac=\"HTgtd0jPI6E4izx8e4OHdO36q00xFCU0FolNq3RiCYs=\"');\n   77                  done();\n   ..\n   80              it('returns a valid authorization header (empty payload)', function (done) {\n   81  \n   82:                 var credentials = {\n   83                      id: '123456',\n   84                      key: '2983d45yun89q',\n   ..\n   86                  };\n   87  \n   88:                 var header = Hawk.client.header('https://example.net/somewhere/over/the/rainbow', 'POST', { credentials: credentials, timestamp: 1353809207, nonce: 'Ygvqdz', payload: '', contentType: 'text/plain' }).field;\n   89                  expect(header).to.equal('Hawk id=\\\"123456\\\", ts=\\\"1353809207\\\", nonce=\\\"Ygvqdz\\\", hash=\\\"q/t+NNAkQZNlq/aAD6PlexImwQTxwgT2MahfTa9XRLA=\\\", mac=\\\"U5k16YEzn3UnBHKeBzsDXn067Gu3R4YaY6xOt9PYRZM=\\\"');\n   90                  done();\n   ..\n   93              it('returns a valid authorization header (pre hashed payload)', function (done) {\n   94  \n   95:                 var credentials = {\n   96                      id: '123456',\n   97                      key: '2983d45yun89q',\n   ..\n   99                  };\n  100  \n  101:                 var options = { credentials: credentials, timestamp: 1353809207, nonce: 'Ygvqdz', payload: 'something to write about', contentType: 'text/plain' };\n  102:                 options.hash = Hawk.crypto.calculatePayloadHash(options.payload, credentials.algorithm, options.contentType);\n  103                  var header = Hawk.client.header('https://example.net/somewhere/over/the/rainbow', 'POST', options).field;\n  104                  expect(header).to.equal('Hawk id=\"123456\", ts=\"1353809207\", nonce=\"Ygvqdz\", hash=\"2QfCt3GuY9HQnHWyWD3wX68ZOKbynqlfYmuO2ZBRqtY=\", mac=\"HTgtd0jPI6E4izx8e4OHdO36q00xFCU0FolNq3RiCYs=\"');\n  ...\n  146              });\n  147  \n  148:             it('errors on invalid credentials (id)', function (done) {\n  149  \n  150:                 var credentials = {\n  151                      key: '2983d45yun89q',\n  152                      algorithm: 'sha256'\n  153                  };\n  154  \n  155:                 var header = Hawk.client.header('https://example.net/somewhere/over/the/rainbow', 'POST', { credentials: credentials, ext: 'Bazinga!', timestamp: 1353809207 });\n  156                  expect(header.field).to.equal('');\n  157                  expect(header.err).to.equal('Invalid credential object');\n  ...\n  159              });\n  160  \n  161:             it('errors on missing credentials', function (done) {\n  162  \n  163                  var header = Hawk.client.header('https://example.net/somewhere/over/the/rainbow', 'POST', { ext: 'Bazinga!', timestamp: 1353809207 });\n  ...\n  167              });\n  168  \n  169:             it('errors on invalid credentials', function (done) {\n  170  \n  171:                 var credentials = {\n  172                      id: '123456',\n  173                      algorithm: 'sha256'\n  174                  };\n  175  \n  176:                 var header = Hawk.client.header('https://example.net/somewhere/over/the/rainbow', 'POST', { credentials: credentials, ext: 'Bazinga!', timestamp: 1353809207 });\n  177                  expect(header.field).to.equal('');\n  178                  expect(header.err).to.equal('Invalid credential object');\n  ...\n  182              it('errors on invalid algorithm', function (done) {\n  183  \n  184:                 var credentials = {\n  185                      id: '123456',\n  186                      key: '2983d45yun89q',\n  ...\n  188                  };\n  189  \n  190:                 var header = Hawk.client.header('https://example.net/somewhere/over/the/rainbow', 'POST', { credentials: credentials, payload: 'something, anything!', ext: 'Bazinga!', timestamp: 1353809207 });\n  191                  expect(header.field).to.equal('');\n  192                  expect(header.err).to.equal('Unknown algorithm');\n  ...\n  233                  };\n  234  \n  235:                 var credentials = {\n  236                      id: '123456',\n  237                      key: 'werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn',\n  ...\n  240                  };\n  241  \n  242:                 expect(Hawk.client.authenticate(res, credentials, artifacts)).to.equal(false);\n  243                  done();\n  244              });\n  ...\n  268                  };\n  269  \n  270:                 var credentials = {\n  271                      id: '123456',\n  272                      key: 'werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn',\n  ...\n  275                  };\n  276  \n  277:                 expect(Hawk.client.authenticate(res, credentials, artifacts)).to.equal(true);\n  278                  done();\n  279              });\n  ...\n  288              it('fails on invalid WWW-Authenticate header format', function (done) {\n  289  \n  290:                 var credentials = {\n  291                      id: '123456',\n  292                      key: 'werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn',\n  ...\n  296  \n  297                  var header = 'Hawk ts=\"1362346425875\", tsm=\"hwayS28vtnn3qbv0mqRBYSXebN/zggEtucfeZ620Zo=\", error=\"Stale timestamp\"';\n  298:                 expect(Hawk.client.authenticate({ headers: { 'www-authenticate': header } }, credentials)).to.equal(false);\n  299                  done();\n  300              });\n  ...\n  312              it('generates authorization', function (done) {\n  313  \n  314:                 var credentials = {\n  315                      id: '123456',\n  316                      key: '2983d45yun89q',\n  ...\n  318                  };\n  319  \n  320:                 var auth = Hawk.client.message('example.com', 80, 'I am the boodyman', { credentials: credentials, timestamp: 1353809207, nonce: 'abc123' });\n  321                  expect(auth).to.exist();\n  322                  expect(auth.ts).to.equal(1353809207);\n  ...\n  327              it('errors on invalid host', function (done) {\n  328  \n  329:                 var credentials = {\n  330                      id: '123456',\n  331                      key: '2983d45yun89q',\n  ...\n  333                  };\n  334  \n  335:                 var auth = Hawk.client.message(5, 80, 'I am the boodyman', { credentials: credentials, timestamp: 1353809207, nonce: 'abc123' });\n  336                  expect(auth).to.not.exist();\n  337                  done();\n  ...\n  340              it('errors on invalid port', function (done) {\n  341  \n  342:                 var credentials = {\n  343                      id: '123456',\n  344                      key: '2983d45yun89q',\n  ...\n  346                  };\n  347  \n  348:                 var auth = Hawk.client.message('example.com', '80', 'I am the boodyman', { credentials: credentials, timestamp: 1353809207, nonce: 'abc123' });\n  349                  expect(auth).to.not.exist();\n  350                  done();\n  ...\n  353              it('errors on missing host', function (done) {\n  354  \n  355:                 var credentials = {\n  356                      id: '123456',\n  357                      key: '2983d45yun89q',\n  ...\n  359                  };\n  360  \n  361:                 var auth = Hawk.client.message('example.com', 0, 'I am the boodyman', { credentials: credentials, timestamp: 1353809207, nonce: 'abc123' });\n  362                  expect(auth).to.not.exist();\n  363                  done();\n  ...\n  366              it('errors on null message', function (done) {\n  367  \n  368:                 var credentials = {\n  369                      id: '123456',\n  370                      key: '2983d45yun89q',\n  ...\n  372                  };\n  373  \n  374:                 var auth = Hawk.client.message('example.com', 80, null, { credentials: credentials, timestamp: 1353809207, nonce: 'abc123' });\n  375                  expect(auth).to.not.exist();\n  376                  done();\n  ...\n  379              it('errors on missing message', function (done) {\n  380  \n  381:                 var credentials = {\n  382                      id: '123456',\n  383                      key: '2983d45yun89q',\n  ...\n  385                  };\n  386  \n  387:                 var auth = Hawk.client.message('example.com', 80, undefined, { credentials: credentials, timestamp: 1353809207, nonce: 'abc123' });\n  388                  expect(auth).to.not.exist();\n  389                  done();\n  ...\n  392              it('errors on invalid message', function (done) {\n  393  \n  394:                 var credentials = {\n  395                      id: '123456',\n  396                      key: '2983d45yun89q',\n  ...\n  398                  };\n  399  \n  400:                 var auth = Hawk.client.message('example.com', 80, 5, { credentials: credentials, timestamp: 1353809207, nonce: 'abc123' });\n  401                  expect(auth).to.not.exist();\n  402                  done();\n  ...\n  405              it('errors on missing options', function (done) {\n  406  \n  407:                 var credentials = {\n  408                      id: '123456',\n  409                      key: '2983d45yun89q',\n  ...\n  416              });\n  417  \n  418:             it('errors on invalid credentials (id)', function (done) {\n  419  \n  420:                 var credentials = {\n  421                      key: '2983d45yun89q',\n  422                      algorithm: 'sha1'\n  423                  };\n  424  \n  425:                 var auth = Hawk.client.message('example.com', 80, 'I am the boodyman', { credentials: credentials, timestamp: 1353809207, nonce: 'abc123' });\n  426                  expect(auth).to.not.exist();\n  427                  done();\n  428              });\n  429  \n  430:             it('errors on invalid credentials (key)', function (done) {\n  431  \n  432:                 var credentials = {\n  433                      id: '123456',\n  434                      algorithm: 'sha1'\n  435                  };\n  436  \n  437:                 var auth = Hawk.client.message('example.com', 80, 'I am the boodyman', { credentials: credentials, timestamp: 1353809207, nonce: 'abc123' });\n  438                  expect(auth).to.not.exist();\n  439                  done();\n\n/Users/kirkcp/Documents/node_play/slatemail_dist/slatemail.app/Contents/Resources/app.nw/node_modules/favicon/node_modules/request/node_modules/hawk/test/crypto.js:\n   28  \n   29                  expect(Hawk.crypto.generateNormalizedString('header', {\n   30:                     credentials: {\n   31                          key: 'dasdfasdf',\n   32                          algorithm: 'sha256'\n   ..\n   46  \n   47                  expect(Hawk.crypto.generateNormalizedString('header', {\n   48:                     credentials: {\n   49                          key: 'dasdfasdf',\n   50                          algorithm: 'sha256'\n   ..\n   65  \n   66                  expect(Hawk.crypto.generateNormalizedString('header', {\n   67:                     credentials: {\n   68                          key: 'dasdfasdf',\n   69                          algorithm: 'sha256'\n\n/Users/kirkcp/Documents/node_play/slatemail_dist/slatemail.app/Contents/Resources/app.nw/node_modules/favicon/node_modules/request/node_modules/hawk/test/index.js:\n   22  describe('Hawk', function () {\n   23  \n   24:     var credentialsFunc = function (id, callback) {\n   25  \n   26:         var credentials = {\n   27              id: id,\n   28              key: 'werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn',\n   ..\n   31          };\n   32  \n   33:         return callback(null, credentials);\n   34      };\n   35  \n   ..\n   43          };\n   44  \n   45:         credentialsFunc('123456', function (err, credentials) {\n   46  \n   47:             req.authorization = Hawk.client.header(Url.parse('http://example.com:8080/resource/4?filter=a'), req.method, { credentials: credentials, ext: 'some-app-data' }).field;\n   48              expect(req.authorization).to.exist();\n   49  \n   50:             Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials, artifacts) {\n   51  \n   52                  expect(err).to.not.exist();\n   53:                 expect(credentials.user).to.equal('steve');\n   54                  expect(artifacts.ext).to.equal('some-app-data');\n   55                  done();\n   ..\n   71          var payload = 'some not so random text';\n   72  \n   73:         credentialsFunc('123456', function (err, credentials) {\n   74  \n   75:             var reqHeader = Hawk.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials, ext: 'some-app-data', payload: payload, contentType: req.headers['content-type'] });\n   76              req.headers.authorization = reqHeader.field;\n   77  \n   78:             Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials, artifacts) {\n   79  \n   80                  expect(err).to.not.exist();\n   81:                 expect(credentials.user).to.equal('steve');\n   82                  expect(artifacts.ext).to.equal('some-app-data');\n   83:                 expect(Hawk.server.authenticatePayload(payload, credentials, artifacts, req.headers['content-type'])).to.equal(true);\n   84  \n   85                  var res = {\n   ..\n   89                  };\n   90  \n   91:                 res.headers['server-authorization'] = Hawk.server.header(credentials, artifacts, { payload: 'some reply', contentType: 'text/plain', ext: 'response-specific' });\n   92                  expect(res.headers['server-authorization']).to.exist();\n   93  \n   94:                 expect(Hawk.client.authenticate(res, credentials, artifacts, { payload: 'some reply' })).to.equal(true);\n   95                  done();\n   96              });\n   ..\n  111          var payload = 'some not so random text';\n  112  \n  113:         credentialsFunc('123456', function (err, credentials) {\n  114  \n  115:             var reqHeader = Hawk.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials, ext: 'some-app-data', payload: payload, contentType: req.headers['content-type'] });\n  116              req.headers.authorization = reqHeader.field;\n  117  \n  118:             Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials, artifacts) {\n  119  \n  120                  expect(err).to.not.exist();\n  121:                 expect(credentials.user).to.equal('steve');\n  122                  expect(artifacts.ext).to.equal('some-app-data');\n  123:                 expect(Hawk.server.authenticatePayload(payload, credentials, artifacts, req.headers['content-type'])).to.equal(true);\n  124  \n  125                  var res = {\n  ...\n  129                  };\n  130  \n  131:                 res.headers['server-authorization'] = Hawk.server.header(credentials, artifacts, { payload: 'some reply', contentType: 'text/plain', ext: 'response-specific' });\n  132                  expect(res.headers['server-authorization']).to.exist();\n  133  \n  134:                 expect(Hawk.client.authenticate(res, credentials, artifacts, { payload: 'some reply' })).to.equal(true);\n  135                  done();\n  136              });\n  ...\n  151          var payload = 'some not so random text';\n  152  \n  153:         credentialsFunc('123456', function (err, credentials) {\n  154  \n  155:             var reqHeader = Hawk.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials, ext: 'some-app-data', payload: payload, contentType: req.headers['content-type'] });\n  156              req.headers.authorization = reqHeader.field;\n  157  \n  158:             Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials, artifacts) {\n  159  \n  160                  expect(err).to.not.exist();\n  161:                 expect(credentials.user).to.equal('steve');\n  162                  expect(artifacts.ext).to.equal('some-app-data');\n  163:                 expect(Hawk.server.authenticatePayload(payload, credentials, artifacts, req.headers['content-type'])).to.equal(true);\n  164  \n  165                  var res = {\n  ...\n  169                  };\n  170  \n  171:                 res.headers['server-authorization'] = Hawk.server.header(credentials, artifacts);\n  172                  expect(res.headers['server-authorization']).to.exist();\n  173  \n  174:                 expect(Hawk.client.authenticate(res, credentials, artifacts)).to.equal(true);\n  175                  done();\n  176              });\n  ...\n  191          var payload = 'some not so random text';\n  192  \n  193:         credentialsFunc('123456', function (err, credentials) {\n  194  \n  195:             var reqHeader = Hawk.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials, ext: 'some-app-data', payload: payload, contentType: req.headers['content-type'] });\n  196              req.headers.authorization = reqHeader.field;\n  197  \n  198:             Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials, artifacts) {\n  199  \n  200                  expect(err).to.not.exist();\n  201:                 expect(credentials.user).to.equal('steve');\n  202                  expect(artifacts.ext).to.equal('some-app-data');\n  203:                 expect(Hawk.server.authenticatePayload(payload, credentials, artifacts, req.headers['content-type'])).to.equal(true);\n  204  \n  205                  var res = {\n  ...\n  209                  };\n  210  \n  211:                 res.headers['server-authorization'] = Hawk.server.header(credentials, artifacts);\n  212                  expect(res.headers['server-authorization']).to.exist();\n  213  \n  214:                 expect(Hawk.client.authenticate(res, credentials, artifacts, { payload: 'some reply' })).to.equal(false);\n  215                  done();\n  216              });\n  ...\n  227          };\n  228  \n  229:         credentialsFunc('123456', function (err, credentials) {\n  230  \n  231:             req.authorization = Hawk.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials, payload: 'hola!', ext: 'some-app-data' }).field;\n  232:             Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials, artifacts) {\n  233  \n  234                  expect(err).to.not.exist();\n  235:                 expect(credentials.user).to.equal('steve');\n  236                  expect(artifacts.ext).to.equal('some-app-data');\n  237                  done();\n  ...\n  249          };\n  250  \n  251:         credentialsFunc('123456', function (err, credentials) {\n  252  \n  253:             req.authorization = Hawk.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials, payload: 'hola!', ext: 'some-app-data' }).field;\n  254:             Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials, artifacts) {\n  255  \n  256                  expect(err).to.not.exist();\n  257:                 expect(credentials.user).to.equal('steve');\n  258                  expect(artifacts.ext).to.equal('some-app-data');\n  259:                 expect(Hawk.server.authenticatePayload('hola!', credentials, artifacts)).to.be.true();\n  260:                 expect(Hawk.server.authenticatePayload('hello!', credentials, artifacts)).to.be.false();\n  261                  done();\n  262              });\n  ...\n  273          };\n  274  \n  275:         credentialsFunc('123456', function (err, credentials) {\n  276  \n  277:             req.authorization = Hawk.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials, payload: 'hola!', ext: 'some-app-data' }).field;\n  278:             Hawk.server.authenticate(req, credentialsFunc, { payload: 'hola!' }, function (err, credentials, artifacts) {\n  279  \n  280                  expect(err).to.not.exist();\n  281:                 expect(credentials.user).to.equal('steve');\n  282                  expect(artifacts.ext).to.equal('some-app-data');\n  283                  done();\n  ...\n  295          };\n  296  \n  297:         credentialsFunc('123456', function (err, credentials) {\n  298  \n  299:             req.authorization = Hawk.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials, ext: 'some-app-data', app: 'asd23ased' }).field;\n  300:             Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials, artifacts) {\n  301  \n  302                  expect(err).to.not.exist();\n  303:                 expect(credentials.user).to.equal('steve');\n  304                  expect(artifacts.ext).to.equal('some-app-data');\n  305                  expect(artifacts.app).to.equal('asd23ased');\n  ...\n  318          };\n  319  \n  320:         credentialsFunc('123456', function (err, credentials) {\n  321  \n  322:             req.authorization = Hawk.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials, ext: 'some-app-data', app: 'asd23ased', dlg: '23434szr3q4d' }).field;\n  323:             Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials, artifacts) {\n  324  \n  325                  expect(err).to.not.exist();\n  326:                 expect(credentials.user).to.equal('steve');\n  327                  expect(artifacts.ext).to.equal('some-app-data');\n  328                  expect(artifacts.app).to.equal('asd23ased');\n  ...\n  342          };\n  343  \n  344:         credentialsFunc('123456', function (err, credentials) {\n  345  \n  346:             req.authorization = Hawk.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials, payload: 'hola!', ext: 'some-app-data' }).field;\n  347:             Hawk.server.authenticate(req, credentialsFunc, { payload: 'byebye!' }, function (err, credentials, artifacts) {\n  348  \n  349                  expect(err).to.exist();\n  ...\n  363          };\n  364  \n  365:         credentialsFunc('123456', function (err, credentials) {\n  366  \n  367:             req.authorization = Hawk.client.header('http://example.com:8080/resource/4?filter=a', req.method, { credentials: credentials, ext: 'some-app-data' }).field;\n  368              req.url = '/something/else';\n  369  \n  370:             Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials, artifacts) {\n  371  \n  372                  expect(err).to.exist();\n  373:                 expect(credentials).to.exist();\n  374                  done();\n  375              });\n\n/Users/kirkcp/Documents/node_play/slatemail_dist/slatemail.app/Contents/Resources/app.nw/node_modules/favicon/node_modules/request/node_modules/hawk/test/message.js:\n   23  describe('Hawk', function () {\n   24  \n   25:     var credentialsFunc = function (id, callback) {\n   26  \n   27:         var credentials = {\n   28              id: id,\n   29              key: 'werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn',\n   ..\n   32          };\n   33  \n   34:         return callback(null, credentials);\n   35      };\n   36  \n   37      it('should generate an authorization then successfully parse it', function (done) {\n   38  \n   39:         credentialsFunc('123456', function (err, credentials) {\n   40  \n   41:             var auth = Hawk.client.message('example.com', 8080, 'some message', { credentials: credentials });\n   42              expect(auth).to.exist();\n   43  \n   44:             Hawk.server.authenticateMessage('example.com', 8080, 'some message', auth, credentialsFunc, {}, function (err, credentials) {\n   45  \n   46                  expect(err).to.not.exist();\n   47:                 expect(credentials.user).to.equal('steve');\n   48                  done();\n   49              });\n   ..\n   53      it('should fail authorization on mismatching host', function (done) {\n   54  \n   55:         credentialsFunc('123456', function (err, credentials) {\n   56  \n   57:             var auth = Hawk.client.message('example.com', 8080, 'some message', { credentials: credentials });\n   58              expect(auth).to.exist();\n   59  \n   60:             Hawk.server.authenticateMessage('example1.com', 8080, 'some message', auth, credentialsFunc, {}, function (err, credentials) {\n   61  \n   62                  expect(err).to.exist();\n   ..\n   69      it('should fail authorization on stale timestamp', function (done) {\n   70  \n   71:         credentialsFunc('123456', function (err, credentials) {\n   72  \n   73:             var auth = Hawk.client.message('example.com', 8080, 'some message', { credentials: credentials });\n   74              expect(auth).to.exist();\n   75  \n   76:             Hawk.server.authenticateMessage('example.com', 8080, 'some message', auth, credentialsFunc, { localtimeOffsetMsec: 100000 }, function (err, credentials) {\n   77  \n   78                  expect(err).to.exist();\n   ..\n   85      it('overrides timestampSkewSec', function (done) {\n   86  \n   87:         credentialsFunc('123456', function (err, credentials) {\n   88  \n   89:             var auth = Hawk.client.message('example.com', 8080, 'some message', { credentials: credentials, localtimeOffsetMsec: 100000 });\n   90              expect(auth).to.exist();\n   91  \n   92:             Hawk.server.authenticateMessage('example.com', 8080, 'some message', auth, credentialsFunc, { timestampSkewSec: 500 }, function (err, credentials) {\n   93  \n   94                  expect(err).to.not.exist();\n   ..\n  100      it('should fail authorization on invalid authorization', function (done) {\n  101  \n  102:         credentialsFunc('123456', function (err, credentials) {\n  103  \n  104:             var auth = Hawk.client.message('example.com', 8080, 'some message', { credentials: credentials });\n  105              expect(auth).to.exist();\n  106              delete auth.id;\n  107  \n  108:             Hawk.server.authenticateMessage('example.com', 8080, 'some message', auth, credentialsFunc, {}, function (err, credentials) {\n  109  \n  110                  expect(err).to.exist();\n  ...\n  117      it('should fail authorization on bad hash', function (done) {\n  118  \n  119:         credentialsFunc('123456', function (err, credentials) {\n  120  \n  121:             var auth = Hawk.client.message('example.com', 8080, 'some message', { credentials: credentials });\n  122              expect(auth).to.exist();\n  123  \n  124:             Hawk.server.authenticateMessage('example.com', 8080, 'some message1', auth, credentialsFunc, {}, function (err, credentials) {\n  125  \n  126                  expect(err).to.exist();\n  ...\n  133      it('should fail authorization on nonce error', function (done) {\n  134  \n  135:         credentialsFunc('123456', function (err, credentials) {\n  136  \n  137:             var auth = Hawk.client.message('example.com', 8080, 'some message', { credentials: credentials });\n  138              expect(auth).to.exist();\n  139  \n  140:             Hawk.server.authenticateMessage('example.com', 8080, 'some message', auth, credentialsFunc, { nonceFunc: function (nonce, ts, callback) { callback (new Error('kaboom')); } }, function (err, credentials) {\n  141  \n  142                  expect(err).to.exist();\n  ...\n  147      });\n  148  \n  149:     it('should fail authorization on credentials error', function (done) {\n  150  \n  151:         credentialsFunc('123456', function (err, credentials) {\n  152  \n  153:             var auth = Hawk.client.message('example.com', 8080, 'some message', { credentials: credentials });\n  154              expect(auth).to.exist();\n  155  \n  ...\n  159              };\n  160  \n  161:             Hawk.server.authenticateMessage('example.com', 8080, 'some message', auth, errFunc, {}, function (err, credentials) {\n  162  \n  163                  expect(err).to.exist();\n  ...\n  168      });\n  169  \n  170:     it('should fail authorization on missing credentials', function (done) {\n  171  \n  172:         credentialsFunc('123456', function (err, credentials) {\n  173  \n  174:             var auth = Hawk.client.message('example.com', 8080, 'some message', { credentials: credentials });\n  175              expect(auth).to.exist();\n  176  \n  ...\n  180              };\n  181  \n  182:             Hawk.server.authenticateMessage('example.com', 8080, 'some message', auth, errFunc, {}, function (err, credentials) {\n  183  \n  184                  expect(err).to.exist();\n  185:                 expect(err.message).to.equal('Unknown credentials');\n  186                  done();\n  187              });\n  ...\n  189      });\n  190  \n  191:     it('should fail authorization on invalid credentials', function (done) {\n  192  \n  193:         credentialsFunc('123456', function (err, credentials) {\n  194  \n  195:             var auth = Hawk.client.message('example.com', 8080, 'some message', { credentials: credentials });\n  196              expect(auth).to.exist();\n  197  \n  ...\n  201              };\n  202  \n  203:             Hawk.server.authenticateMessage('example.com', 8080, 'some message', auth, errFunc, {}, function (err, credentials) {\n  204  \n  205                  expect(err).to.exist();\n  206:                 expect(err.message).to.equal('Invalid credentials');\n  207                  done();\n  208              });\n  ...\n  210      });\n  211  \n  212:     it('should fail authorization on invalid credentials algorithm', function (done) {\n  213  \n  214:         credentialsFunc('123456', function (err, credentials) {\n  215  \n  216:             var auth = Hawk.client.message('example.com', 8080, 'some message', { credentials: credentials });\n  217              expect(auth).to.exist();\n  218  \n  ...\n  222              };\n  223  \n  224:             Hawk.server.authenticateMessage('example.com', 8080, 'some message', auth, errFunc, {}, function (err, credentials) {\n  225  \n  226                  expect(err).to.exist();\n  ...\n  233      it('should fail on missing host', function (done) {\n  234  \n  235:         credentialsFunc('123456', function (err, credentials) {\n  236  \n  237:             var auth = Hawk.client.message(null, 8080, 'some message', { credentials: credentials });\n  238              expect(auth).to.not.exist();\n  239              done();\n  ...\n  241      });\n  242  \n  243:     it('should fail on missing credentials', function (done) {\n  244  \n  245          var auth = Hawk.client.message('example.com', 8080, 'some message', {});\n  ...\n  250      it('should fail on invalid algorithm', function (done) {\n  251  \n  252:         credentialsFunc('123456', function (err, credentials) {\n  253  \n  254:             var creds = Hoek.clone(credentials);\n  255              creds.algorithm = 'blah';\n  256:             var auth = Hawk.client.message('example.com', 8080, 'some message', { credentials: creds });\n  257              expect(auth).to.not.exist();\n  258              done();\n\n/Users/kirkcp/Documents/node_play/slatemail_dist/slatemail.app/Contents/Resources/app.nw/node_modules/favicon/node_modules/request/node_modules/hawk/test/readme.js:\n   26          describe('core', function () {\n   27  \n   28:             var credentials = {\n   29                  id: 'dh37fgj492je',\n   30                  key: 'werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn',\n   ..\n   33  \n   34              var options = {\n   35:                 credentials: credentials,\n   36                  timestamp: 1353832234,\n   37                  nonce: 'j4h3g2',\n   ..\n   50  \n   51                  var normalized = Hawk.crypto.generateNormalizedString('header', {\n   52:                     credentials: credentials,\n   53                      ts: options.timestamp,\n   54                      nonce: options.nonce,\n   ..\n   79  \n   80                  var normalized = Hawk.crypto.generateNormalizedString('header', {\n   81:                     credentials: credentials,\n   82                      ts: options.timestamp,\n   83                      nonce: options.nonce,\n   ..\n   86                      host: 'example.com',\n   87                      port: 8000,\n   88:                     hash: Hawk.crypto.calculatePayloadHash(payloadOptions.payload, credentials.algorithm, payloadOptions.contentType),\n   89                      ext: options.ext\n   90                  });\n\n/Users/kirkcp/Documents/node_play/slatemail_dist/slatemail.app/Contents/Resources/app.nw/node_modules/favicon/node_modules/request/node_modules/hawk/test/server.js:\n   24      describe('server', function () {\n   25  \n   26:         var credentialsFunc = function (id, callback) {\n   27  \n   28:             var credentials = {\n   29                  id: id,\n   30                  key: 'werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn',\n   ..\n   33              };\n   34  \n   35:             return callback(null, credentials);\n   36          };\n   37  \n   ..\n   48                  };\n   49  \n   50:                 Hawk.server.authenticate(req, credentialsFunc, { localtimeOffsetMsec: 1353788437000 - Hawk.utils.now() }, function (err, credentials, artifacts) {\n   51  \n   52                      expect(err).to.not.exist();\n   53:                     expect(credentials.user).to.equal('steve');\n   54                      done();\n   55                  });\n   ..\n   66                  };\n   67  \n   68:                 Hawk.server.authenticate(req, credentialsFunc, { localtimeOffsetMsec: 1353832234000 - Hawk.utils.now() }, function (err, credentials, artifacts) {\n   69  \n   70                      expect(err).to.not.exist();\n   71:                     expect(credentials.user).to.equal('steve');\n   72                      done();\n   73                  });\n   ..\n   85                  };\n   86  \n   87:                 Hawk.server.authenticate(req, credentialsFunc, { host: 'example.com', localtimeOffsetMsec: 1353788437000 - Hawk.utils.now() }, function (err, credentials, artifacts) {\n   88  \n   89                      expect(err).to.not.exist();\n   90:                     expect(credentials.user).to.equal('steve');\n   91                      done();\n   92                  });\n   ..\n  104                  };\n  105  \n  106:                 Hawk.server.authenticate(req, credentialsFunc, { host: 'example.com', port: 8080, localtimeOffsetMsec: 1353788437000 - Hawk.utils.now() }, function (err, credentials, artifacts) {\n  107  \n  108                      expect(err).to.not.exist();\n  109:                     expect(credentials.user).to.equal('steve');\n  110                      done();\n  111                  });\n  ...\n  122                  };\n  123  \n  124:                 Hawk.server.authenticate(req, credentialsFunc, { localtimeOffsetMsec: 1357926341000 - Hawk.utils.now() }, function (err, credentials, artifacts) {\n  125  \n  126                      expect(err).to.not.exist();\n  127:                     expect(credentials.user).to.equal('steve');\n  128                      done();\n  129                  });\n  ...\n  140                  };\n  141  \n  142:                 Hawk.server.authenticate(req, credentialsFunc, { payload: 'body', localtimeOffsetMsec: 1353832234000 - Hawk.utils.now() }, function (err, credentials, artifacts) {\n  143  \n  144                      expect(err).to.exist();\n  ...\n  158                  };\n  159  \n  160:                 Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials, artifacts) {\n  161  \n  162                      expect(err).to.exist();\n  ...\n  173                      };\n  174  \n  175:                     expect(Hawk.client.authenticate(res, credentials, artifacts)).to.equal(true);\n  176                      done();\n  177                  });\n  ...\n  202                  };\n  203  \n  204:                 Hawk.server.authenticate(req, credentialsFunc, options, function (err, credentials, artifacts) {\n  205  \n  206                      expect(err).to.not.exist();\n  207:                     expect(credentials.user).to.equal('steve');\n  208  \n  209:                     Hawk.server.authenticate(req, credentialsFunc, options, function (err, credentials, artifacts) {\n  210  \n  211                          expect(err).to.exist();\n  ...\n  226                  };\n  227  \n  228:                 Hawk.server.authenticate(req, credentialsFunc, { localtimeOffsetMsec: 1353788437000 - Hawk.utils.now() }, function (err, credentials, artifacts) {\n  229  \n  230                      expect(err).to.exist();\n  ...\n  244                  };\n  245  \n  246:                 Hawk.server.authenticate(req, credentialsFunc, { localtimeOffsetMsec: 1353788437000 - Hawk.utils.now() }, function (err, credentials, artifacts) {\n  247  \n  248                      expect(err).to.exist();\n  ...\n  261                  };\n  262  \n  263:                 Hawk.server.authenticate(req, credentialsFunc, {}, function (err, credentials, artifacts) {\n  264  \n  265                      expect(err).to.exist();\n  ...\n  279                  };\n  280  \n  281:                 Hawk.server.authenticate(req, credentialsFunc, { localtimeOffsetMsec: 1353788437000 - Hawk.utils.now() }, function (err, credentials, artifacts) {\n  282  \n  283                      expect(err).to.exist();\n  ...\n  297                  };\n  298  \n  299:                 Hawk.server.authenticate(req, credentialsFunc, { localtimeOffsetMsec: 1353788437000 - Hawk.utils.now() }, function (err, credentials, artifacts) {\n  300  \n  301                      expect(err).to.exist();\n  ...\n  315                  };\n  316  \n  317:                 Hawk.server.authenticate(req, credentialsFunc, { localtimeOffsetMsec: 1353788437000 - Hawk.utils.now() }, function (err, credentials, artifacts) {\n  318  \n  319                      expect(err).to.exist();\n  ...\n  333                  };\n  334  \n  335:                 Hawk.server.authenticate(req, credentialsFunc, { localtimeOffsetMsec: 1353788437000 - Hawk.utils.now() }, function (err, credentials, artifacts) {\n  336  \n  337                      expect(err).to.exist();\n  ...\n  351                  };\n  352  \n  353:                 Hawk.server.authenticate(req, credentialsFunc, { localtimeOffsetMsec: 1353788437000 - Hawk.utils.now() }, function (err, credentials, artifacts) {\n  354  \n  355                      expect(err).to.exist();\n  ...\n  369                  };\n  370  \n  371:                 Hawk.server.authenticate(req, credentialsFunc, { localtimeOffsetMsec: 1353788437000 - Hawk.utils.now() }, function (err, credentials, artifacts) {\n  372  \n  373                      expect(err).to.exist();\n  ...\n  387                  };\n  388  \n  389:                 Hawk.server.authenticate(req, credentialsFunc, { localtimeOffsetMsec: 1353788437000 - Hawk.utils.now() }, function (err, credentials, artifacts) {\n  390  \n  391                      expect(err).to.exist();\n  ...\n  405                  };\n  406  \n  407:                 Hawk.server.authenticate(req, credentialsFunc, { localtimeOffsetMsec: 1353788437000 - Hawk.utils.now() }, function (err, credentials, artifacts) {\n  408  \n  409                      expect(err).to.exist();\n  ...\n  423                  };\n  424  \n  425:                 Hawk.server.authenticate(req, credentialsFunc, { localtimeOffsetMsec: 1353788437000 - Hawk.utils.now() }, function (err, credentials, artifacts) {\n  426  \n  427                      expect(err).to.exist();\n  ...\n  441                  };\n  442  \n  443:                 Hawk.server.authenticate(req, credentialsFunc, { localtimeOffsetMsec: 1353788437000 - Hawk.utils.now() }, function (err, credentials, artifacts) {\n  444  \n  445                      expect(err).to.exist();\n  ...\n  459                  };\n  460  \n  461:                 Hawk.server.authenticate(req, credentialsFunc, { localtimeOffsetMsec: 1353788437000 - Hawk.utils.now() }, function (err, credentials, artifacts) {\n  462  \n  463                      expect(err).to.exist();\n  ...\n  478                  };\n  479  \n  480:                 Hawk.server.authenticate(req, credentialsFunc, { localtimeOffsetMsec: 1353788437000 - Hawk.utils.now() }, function (err, credentials, artifacts) {\n  481  \n  482                      expect(err).to.exist();\n  ...\n  497                  };\n  498  \n  499:                 Hawk.server.authenticate(req, credentialsFunc, { localtimeOffsetMsec: 1353788437000 - Hawk.utils.now() }, function (err, credentials, artifacts) {\n  500  \n  501                      expect(err).to.exist();\n  ...\n  505              });\n  506  \n  507:             it('errors on credentialsFunc error', function (done) {\n  508  \n  509                  var req = {\n  ...\n  515                  };\n  516  \n  517:                 var credentialsFunc = function (id, callback) {\n  518  \n  519                      return callback(new Error('Unknown user'));\n  520                  };\n  521  \n  522:                 Hawk.server.authenticate(req, credentialsFunc, { localtimeOffsetMsec: 1353788437000 - Hawk.utils.now() }, function (err, credentials, artifacts) {\n  523  \n  524                      expect(err).to.exist();\n  ...\n  528              });\n  529  \n  530:             it('errors on credentialsFunc error (with credentials)', function (done) {\n  531  \n  532                  var req = {\n  ...\n  538                  };\n  539  \n  540:                 var credentialsFunc = function (id, callback) {\n  541  \n  542                      return callback(new Error('Unknown user'), { some: 'value' });\n  543                  };\n  544  \n  545:                 Hawk.server.authenticate(req, credentialsFunc, { localtimeOffsetMsec: 1353788437000 - Hawk.utils.now() }, function (err, credentials, artifacts) {\n  546  \n  547                      expect(err).to.exist();\n  548                      expect(err.message).to.equal('Unknown user');\n  549:                     expect(credentials.some).to.equal('value');\n  550                      done();\n  551                  });\n  552              });\n  553  \n  554:             it('errors on missing credentials', function (done) {\n  555  \n  556                  var req = {\n  ...\n  562                  };\n  563  \n  564:                 var credentialsFunc = function (id, callback) {\n  565  \n  566                      return callback(null, null);\n  567                  };\n  568  \n  569:                 Hawk.server.authenticate(req, credentialsFunc, { localtimeOffsetMsec: 1353788437000 - Hawk.utils.now() }, function (err, credentials, artifacts) {\n  570  \n  571                      expect(err).to.exist();\n  572:                     expect(err.output.payload.message).to.equal('Unknown credentials');\n  573                      done();\n  574                  });\n  575              });\n  576  \n  577:             it('errors on invalid credentials (id)', function (done) {\n  578  \n  579                  var req = {\n  ...\n  585                  };\n  586  \n  587:                 var credentialsFunc = function (id, callback) {\n  588  \n  589:                     var credentials = {\n  590                          key: 'werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn',\n  591                          user: 'steve'\n  592                      };\n  593  \n  594:                     return callback(null, credentials);\n  595                  };\n  596  \n  597:                 Hawk.server.authenticate(req, credentialsFunc, { localtimeOffsetMsec: 1353788437000 - Hawk.utils.now() }, function (err, credentials, artifacts) {\n  598  \n  599                      expect(err).to.exist();\n  600:                     expect(err.message).to.equal('Invalid credentials');\n  601                      expect(err.output.payload.message).to.equal('An internal server error occurred');\n  602                      done();\n  ...\n  604              });\n  605  \n  606:             it('errors on invalid credentials (key)', function (done) {\n  607  \n  608                  var req = {\n  ...\n  614                  };\n  615  \n  616:                 var credentialsFunc = function (id, callback) {\n  617  \n  618:                     var credentials = {\n  619                          id: '23434d3q4d5345d',\n  620                          user: 'steve'\n  621                      };\n  622  \n  623:                     return callback(null, credentials);\n  624                  };\n  625  \n  626:                 Hawk.server.authenticate(req, credentialsFunc, { localtimeOffsetMsec: 1353788437000 - Hawk.utils.now() }, function (err, credentials, artifacts) {\n  627  \n  628                      expect(err).to.exist();\n  629:                     expect(err.message).to.equal('Invalid credentials');\n  630                      expect(err.output.payload.message).to.equal('An internal server error occurred');\n  631                      done();\n  ...\n  633              });\n  634  \n  635:             it('errors on unknown credentials algorithm', function (done) {\n  636  \n  637                  var req = {\n  ...\n  643                  };\n  644  \n  645:                 var credentialsFunc = function (id, callback) {\n  646  \n  647:                     var credentials = {\n  648                          key: 'werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn',\n  649                          algorithm: 'hmac-sha-0',\n  ...\n  651                      };\n  652  \n  653:                     return callback(null, credentials);\n  654                  };\n  655  \n  656:                 Hawk.server.authenticate(req, credentialsFunc, { localtimeOffsetMsec: 1353788437000 - Hawk.utils.now() }, function (err, credentials, artifacts) {\n  657  \n  658                      expect(err).to.exist();\n  ...\n  673                  };\n  674  \n  675:                 var credentialsFunc = function (id, callback) {\n  676  \n  677:                     var credentials = {\n  678                          key: 'werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn',\n  679                          algorithm: 'sha256',\n  ...\n  681                      };\n  682  \n  683:                     return callback(null, credentials);\n  684                  };\n  685  \n  686:                 Hawk.server.authenticate(req, credentialsFunc, { localtimeOffsetMsec: 1353788437000 - Hawk.utils.now() }, function (err, credentials, artifacts) {\n  687  \n  688                      expect(err).to.exist();\n  ...\n  697              it('generates header', function (done) {\n  698  \n  699:                 var credentials = {\n  700                      id: '123456',\n  701                      key: 'werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn',\n  ...\n  717                  };\n  718  \n  719:                 var header = Hawk.server.header(credentials, artifacts, { payload: 'some reply', contentType: 'text/plain', ext: 'response-specific' });\n  720                  expect(header).to.equal('Hawk mac=\\\"n14wVJK4cOxAytPUMc5bPezQzuJGl5n7MYXhFQgEKsE=\\\", hash=\\\"f9cDF/TDm7TkYRLnGwRMfeDzT6LixQVLvrIKhh0vgmM=\\\", ext=\\\"response-specific\\\"');\n  721                  done();\n  ...\n  724              it('generates header (empty payload)', function (done) {\n  725  \n  726:                 var credentials = {\n  727                      id: '123456',\n  728                      key: 'werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn',\n  ...\n  744                  };\n  745  \n  746:                 var header = Hawk.server.header(credentials, artifacts, { payload: '', contentType: 'text/plain', ext: 'response-specific' });\n  747                  expect(header).to.equal('Hawk mac=\\\"i8/kUBDx0QF+PpCtW860kkV/fa9dbwEoe/FpGUXowf0=\\\", hash=\\\"q/t+NNAkQZNlq/aAD6PlexImwQTxwgT2MahfTa9XRLA=\\\", ext=\\\"response-specific\\\"');\n  748                  done();\n  ...\n  751              it('generates header (pre calculated hash)', function (done) {\n  752  \n  753:                 var credentials = {\n  754                      id: '123456',\n  755                      key: 'werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn',\n  ...\n  772  \n  773                  var options = { payload: 'some reply', contentType: 'text/plain', ext: 'response-specific' };\n  774:                 options.hash = Hawk.crypto.calculatePayloadHash(options.payload, credentials.algorithm, options.contentType);\n  775:                 var header = Hawk.server.header(credentials, artifacts, options);\n  776                  expect(header).to.equal('Hawk mac=\\\"n14wVJK4cOxAytPUMc5bPezQzuJGl5n7MYXhFQgEKsE=\\\", hash=\\\"f9cDF/TDm7TkYRLnGwRMfeDzT6LixQVLvrIKhh0vgmM=\\\", ext=\\\"response-specific\\\"');\n  777                  done();\n  ...\n  780              it('generates header (null ext)', function (done) {\n  781  \n  782:                 var credentials = {\n  783                      id: '123456',\n  784                      key: 'werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn',\n  ...\n  799                  };\n  800  \n  801:                 var header = Hawk.server.header(credentials, artifacts, { payload: 'some reply', contentType: 'text/plain', ext: null });\n  802                  expect(header).to.equal('Hawk mac=\\\"6PrybJTJs20jsgBw5eilXpcytD8kUbaIKNYXL+6g0ns=\\\", hash=\\\"f9cDF/TDm7TkYRLnGwRMfeDzT6LixQVLvrIKhh0vgmM=\\\"');\n  803                  done();\n  ...\n  806              it('errors on missing artifacts', function (done) {\n  807  \n  808:                 var credentials = {\n  809                      id: '123456',\n  810                      key: 'werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn',\n  ...\n  813                  };\n  814  \n  815:                 var header = Hawk.server.header(credentials, null, { payload: 'some reply', contentType: 'text/plain', ext: 'response-specific' });\n  816                  expect(header).to.equal('');\n  817                  done();\n  ...\n  820              it('errors on invalid artifacts', function (done) {\n  821  \n  822:                 var credentials = {\n  823                      id: '123456',\n  824                      key: 'werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn',\n  ...\n  827                  };\n  828  \n  829:                 var header = Hawk.server.header(credentials, 5, { payload: 'some reply', contentType: 'text/plain', ext: 'response-specific' });\n  830                  expect(header).to.equal('');\n  831                  done();\n  832              });\n  833  \n  834:             it('errors on missing credentials', function (done) {\n  835  \n  836                  var artifacts = {\n  ...\n  852              });\n  853  \n  854:             it('errors on invalid credentials (key)', function (done) {\n  855  \n  856:                 var credentials = {\n  857                      id: '123456',\n  858                      algorithm: 'sha256',\n  ...\n  873                  };\n  874  \n  875:                 var header = Hawk.server.header(credentials, artifacts, { payload: 'some reply', contentType: 'text/plain', ext: 'response-specific' });\n  876                  expect(header).to.equal('');\n  877                  done();\n  ...\n  880              it('errors on invalid algorithm', function (done) {\n  881  \n  882:                 var credentials = {\n  883                      id: '123456',\n  884                      key: 'werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn',\n  ...\n  900                  };\n  901  \n  902:                 var header = Hawk.server.header(credentials, artifacts, { payload: 'some reply', contentType: 'text/plain', ext: 'response-specific' });\n  903                  expect(header).to.equal('');\n  904                  done();\n  ...\n  910              it('errors on invalid authorization (ts)', function (done) {\n  911  \n  912:                 credentialsFunc('123456', function (err, credentials) {\n  913  \n  914:                     var auth = Hawk.client.message('example.com', 8080, 'some message', { credentials: credentials });\n  915                      delete auth.ts;\n  916  \n  917:                     Hawk.server.authenticateMessage('example.com', 8080, 'some message', auth, credentialsFunc, {}, function (err, credentials) {\n  918  \n  919                          expect(err).to.exist();\n  ...\n  926              it('errors on invalid authorization (nonce)', function (done) {\n  927  \n  928:                 credentialsFunc('123456', function (err, credentials) {\n  929  \n  930:                     var auth = Hawk.client.message('example.com', 8080, 'some message', { credentials: credentials });\n  931                      delete auth.nonce;\n  932  \n  933:                     Hawk.server.authenticateMessage('example.com', 8080, 'some message', auth, credentialsFunc, {}, function (err, credentials) {\n  934  \n  935                          expect(err).to.exist();\n  ...\n  942              it('errors on invalid authorization (hash)', function (done) {\n  943  \n  944:                 credentialsFunc('123456', function (err, credentials) {\n  945  \n  946:                     var auth = Hawk.client.message('example.com', 8080, 'some message', { credentials: credentials });\n  947                      delete auth.hash;\n  948  \n  949:                     Hawk.server.authenticateMessage('example.com', 8080, 'some message', auth, credentialsFunc, {}, function (err, credentials) {\n  950  \n  951                          expect(err).to.exist();\n  ...\n  956              });\n  957  \n  958:             it('errors with credentials', function (done) {\n  959  \n  960:                 credentialsFunc('123456', function (err, credentials) {\n  961  \n  962:                     var auth = Hawk.client.message('example.com', 8080, 'some message', { credentials: credentials });\n  963  \n  964:                     Hawk.server.authenticateMessage('example.com', 8080, 'some message', auth, function (id, callback) { callback(new Error('something'), { some: 'value' }); }, {}, function (err, credentials) {\n  965  \n  966                          expect(err).to.exist();\n  967                          expect(err.message).to.equal('something');\n  968:                         expect(credentials.some).to.equal('value');\n  969                          done();\n  970                      });\n\n/Users/kirkcp/Documents/node_play/slatemail_dist/slatemail.app/Contents/Resources/app.nw/node_modules/favicon/node_modules/request/node_modules/hawk/test/uri.js:\n   26      describe('Uri', function () {\n   27  \n   28:         var credentialsFunc = function (id, callback) {\n   29  \n   30:             var credentials = {\n   31                  id: id,\n   32                  key: 'werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn',\n   ..\n   35              };\n   36  \n   37:             return callback(null, credentials);\n   38          };\n   39  \n   ..\n   47              };\n   48  \n   49:             credentialsFunc('123456', function (err, credentials) {\n   50  \n   51:                 var bewit = Hawk.uri.getBewit('http://example.com/resource/4?a=1&b=2', { credentials: credentials, ttlSec: 60 * 60 * 24 * 365 * 100, ext: 'some-app-data' });\n   52                  req.url += '&bewit=' + bewit;\n   53  \n   54:                 Hawk.uri.authenticate(req, credentialsFunc, {}, function (err, credentials, attributes) {\n   55  \n   56                      expect(err).to.not.exist();\n   57:                     expect(credentials.user).to.equal('steve');\n   58                      expect(attributes.ext).to.equal('some-app-data');\n   59                      done();\n   ..\n   71              };\n   72  \n   73:             credentialsFunc('123456', function (err, credentials) {\n   74  \n   75:                 var bewit = Hawk.uri.getBewit('http://example.com/resource/4?a=1&b=2', { credentials: credentials, ttlSec: 60 * 60 * 24 * 365 * 100 });\n   76                  req.url += '&bewit=' + bewit;\n   77  \n   78:                 Hawk.uri.authenticate(req, credentialsFunc, {}, function (err, credentials, attributes) {\n   79  \n   80                      expect(err).to.not.exist();\n   81:                     expect(credentials.user).to.equal('steve');\n   82                      done();\n   83                  });\n   ..\n   94              };\n   95  \n   96:             Hawk.uri.authenticate(req, credentialsFunc, {}, function (err, credentials, attributes) {\n   97  \n   98                  expect(err).to.not.exist();\n   99:                 expect(credentials.user).to.equal('steve');\n  100                  expect(attributes.ext).to.equal('some-app-data');\n  101                  done();\n  ...\n  112              };\n  113  \n  114:             Hawk.uri.authenticate(req, credentialsFunc, {}, function (err, credentials, attributes) {\n  115  \n  116                  expect(err).to.not.exist();\n  117:                 expect(credentials.user).to.equal('steve');\n  118                  expect(attributes.ext).to.equal('some-app-data');\n  119                  done();\n  ...\n  130              };\n  131  \n  132:             Hawk.uri.authenticate(req, credentialsFunc, {}, function (err, credentials, attributes) {\n  133  \n  134                  expect(err).to.not.exist();\n  135:                 expect(credentials.user).to.equal('steve');\n  136                  expect(attributes.ext).to.equal('some-app-data');\n  137                  done();\n  ...\n  149              };\n  150  \n  151:             Hawk.uri.authenticate(req, credentialsFunc, {}, function (err, credentials, attributes) {\n  152  \n  153                  expect(err).to.exist();\n  ...\n  159          it('should fail on method other than GET', function (done) {\n  160  \n  161:             credentialsFunc('123456', function (err, credentials) {\n  162  \n  163                  var req = {\n  ...\n  170                  var exp = Math.floor(Hawk.utils.now() / 1000) + 60;\n  171                  var ext = 'some-app-data';\n  172:                 var mac = Hawk.crypto.calculateMac('bewit', credentials, {\n  173                      timestamp: exp,\n  174                      nonce: '',\n  ...\n  180                  });\n  181  \n  182:                 var bewit = credentials.id + '\\\\' + exp + '\\\\' + mac + '\\\\' + ext;\n  183  \n  184                  req.url += '&bewit=' + Hoek.base64urlEncode(bewit);\n  185  \n  186:                 Hawk.uri.authenticate(req, credentialsFunc, {}, function (err, credentials, attributes) {\n  187  \n  188                      expect(err).to.exist();\n  ...\n  203              };\n  204  \n  205:             Hawk.uri.authenticate(req, credentialsFunc, {}, function (err, credentials, attributes) {\n  206  \n  207                  expect(err).to.exist();\n  ...\n  220              };\n  221  \n  222:             Hawk.uri.authenticate(req, credentialsFunc, {}, function (err, credentials, attributes) {\n  223  \n  224                  expect(err).to.exist();\n  ...\n  238              };\n  239  \n  240:             Hawk.uri.authenticate(req, credentialsFunc, {}, function (err, credentials, attributes) {\n  241  \n  242                  expect(err).to.exist();\n  ...\n  256              };\n  257  \n  258:             Hawk.uri.authenticate(req, credentialsFunc, {}, function (err, credentials, attributes) {\n  259  \n  260                  expect(err).to.exist();\n  ...\n  274              };\n  275  \n  276:             Hawk.uri.authenticate(req, credentialsFunc, {}, function (err, credentials, attributes) {\n  277  \n  278                  expect(err).to.exist();\n  ...\n  291              };\n  292  \n  293:             Hawk.uri.authenticate(req, credentialsFunc, {}, function (err, credentials, attributes) {\n  294  \n  295                  expect(err).to.exist();\n  ...\n  308              };\n  309  \n  310:             Hawk.uri.authenticate(req, credentialsFunc, {}, function (err, credentials, attributes) {\n  311  \n  312                  expect(err).to.exist();\n  ...\n  325              };\n  326  \n  327:             Hawk.uri.authenticate(req, credentialsFunc, {}, function (err, credentials, attributes) {\n  328  \n  329                  expect(err).to.exist();\n  ...\n  333          });\n  334  \n  335:         it('should fail on credentials function error', function (done) {\n  336  \n  337              var req = {\n  ...\n  342              };\n  343  \n  344:             Hawk.uri.authenticate(req, function (id, callback) { callback(Hawk.error.badRequest('Boom')); }, {}, function (err, credentials, attributes) {\n  345  \n  346                  expect(err).to.exist();\n  ...\n  350          });\n  351  \n  352:         it('should fail on credentials function error with credentials', function (done) {\n  353  \n  354              var req = {\n  ...\n  359              };\n  360  \n  361:             Hawk.uri.authenticate(req, function (id, callback) { callback(Hawk.error.badRequest('Boom'), { some: 'value' }); }, {}, function (err, credentials, attributes) {\n  362  \n  363                  expect(err).to.exist();\n  364                  expect(err.output.payload.message).to.equal('Boom');\n  365:                 expect(credentials.some).to.equal('value');\n  366                  done();\n  367              });\n  368          });\n  369  \n  370:         it('should fail on null credentials function response', function (done) {\n  371  \n  372              var req = {\n  ...\n  377              };\n  378  \n  379:             Hawk.uri.authenticate(req, function (id, callback) { callback(null, null); }, {}, function (err, credentials, attributes) {\n  380  \n  381                  expect(err).to.exist();\n  382:                 expect(err.output.payload.message).to.equal('Unknown credentials');\n  383                  done();\n  384              });\n  385          });\n  386  \n  387:         it('should fail on invalid credentials function response', function (done) {\n  388  \n  389              var req = {\n  ...\n  394              };\n  395  \n  396:             Hawk.uri.authenticate(req, function (id, callback) { callback(null, {}); }, {}, function (err, credentials, attributes) {\n  397  \n  398                  expect(err).to.exist();\n  399:                 expect(err.message).to.equal('Invalid credentials');\n  400                  done();\n  401              });\n  402          });\n  403  \n  404:         it('should fail on invalid credentials function response (unknown algorithm)', function (done) {\n  405  \n  406              var req = {\n  ...\n  411              };\n  412  \n  413:             Hawk.uri.authenticate(req, function (id, callback) { callback(null, { key: 'xxx', algorithm: 'xxx' }); }, {}, function (err, credentials, attributes) {\n  414  \n  415                  expect(err).to.exist();\n  ...\n  428              };\n  429  \n  430:             Hawk.uri.authenticate(req, function (id, callback) { callback(null, { key: 'xxx', algorithm: 'sha256' }); }, {}, function (err, credentials, attributes) {\n  431  \n  432                  expect(err).to.exist();\n  ...\n  441          it('returns a valid bewit value', function (done) {\n  442  \n  443:             var credentials = {\n  444                  id: '123456',\n  445                  key: '2983d45yun89q',\n  ...\n  447              };\n  448  \n  449:             var bewit = Hawk.uri.getBewit('https://example.com/somewhere/over/the/rainbow', { credentials: credentials, ttlSec: 300, localtimeOffsetMsec: 1356420407232 - Hawk.utils.now(), ext: 'xandyandz' });\n  450              expect(bewit).to.equal('MTIzNDU2XDEzNTY0MjA3MDdca3NjeHdOUjJ0SnBQMVQxekRMTlBiQjVVaUtJVTl0T1NKWFRVZEc3WDloOD1ceGFuZHlhbmR6');\n  451              done();\n  ...\n  454          it('returns a valid bewit value (explicit port)', function (done) {\n  455  \n  456:             var credentials = {\n  457                  id: '123456',\n  458                  key: '2983d45yun89q',\n  ...\n  460              };\n  461  \n  462:             var bewit = Hawk.uri.getBewit('https://example.com:8080/somewhere/over/the/rainbow', { credentials: credentials, ttlSec: 300, localtimeOffsetMsec: 1356420407232 - Hawk.utils.now(), ext: 'xandyandz' });\n  463              expect(bewit).to.equal('MTIzNDU2XDEzNTY0MjA3MDdcaFpiSjNQMmNLRW80a3kwQzhqa1pBa1J5Q1p1ZWc0V1NOYnhWN3ZxM3hIVT1ceGFuZHlhbmR6');\n  464              done();\n  ...\n  467          it('returns a valid bewit value (null ext)', function (done) {\n  468  \n  469:             var credentials = {\n  470                  id: '123456',\n  471                  key: '2983d45yun89q',\n  ...\n  473              };\n  474  \n  475:             var bewit = Hawk.uri.getBewit('https://example.com/somewhere/over/the/rainbow', { credentials: credentials, ttlSec: 300, localtimeOffsetMsec: 1356420407232 - Hawk.utils.now(), ext: null });\n  476              expect(bewit).to.equal('MTIzNDU2XDEzNTY0MjA3MDdcSUdZbUxnSXFMckNlOEN4dktQczRKbFdJQStValdKSm91d2dBUmlWaENBZz1c');\n  477              done();\n  ...\n  480          it('returns a valid bewit value (parsed uri)', function (done) {\n  481  \n  482:             var credentials = {\n  483                  id: '123456',\n  484                  key: '2983d45yun89q',\n  ...\n  486              };\n  487  \n  488:             var bewit = Hawk.uri.getBewit(Url.parse('https://example.com/somewhere/over/the/rainbow'), { credentials: credentials, ttlSec: 300, localtimeOffsetMsec: 1356420407232 - Hawk.utils.now(), ext: 'xandyandz' });\n  489              expect(bewit).to.equal('MTIzNDU2XDEzNTY0MjA3MDdca3NjeHdOUjJ0SnBQMVQxekRMTlBiQjVVaUtJVTl0T1NKWFRVZEc3WDloOD1ceGFuZHlhbmR6');\n  490              done();\n  ...\n  493          it('errors on invalid options', function (done) {\n  494  \n  495:             var credentials = {\n  496                  id: '123456',\n  497                  key: '2983d45yun89q',\n  ...\n  506          it('errors on missing uri', function (done) {\n  507  \n  508:             var credentials = {\n  509                  id: '123456',\n  510                  key: '2983d45yun89q',\n  ...\n  512              };\n  513  \n  514:             var bewit = Hawk.uri.getBewit('', { credentials: credentials, ttlSec: 300, localtimeOffsetMsec: 1356420407232 - Hawk.utils.now(), ext: 'xandyandz' });\n  515              expect(bewit).to.equal('');\n  516              done();\n  ...\n  519          it('errors on invalid uri', function (done) {\n  520  \n  521:             var credentials = {\n  522                  id: '123456',\n  523                  key: '2983d45yun89q',\n  ...\n  525              };\n  526  \n  527:             var bewit = Hawk.uri.getBewit(5, { credentials: credentials, ttlSec: 300, localtimeOffsetMsec: 1356420407232 - Hawk.utils.now(), ext: 'xandyandz' });\n  528              expect(bewit).to.equal('');\n  529              done();\n  530          });\n  531  \n  532:         it('errors on invalid credentials (id)', function (done) {\n  533  \n  534:             var credentials = {\n  535                  key: '2983d45yun89q',\n  536                  algorithm: 'sha256'\n  537              };\n  538  \n  539:             var bewit = Hawk.uri.getBewit('https://example.com/somewhere/over/the/rainbow', { credentials: credentials, ttlSec: 3000, ext: 'xandyandz' });\n  540              expect(bewit).to.equal('');\n  541              done();\n  542          });\n  543  \n  544:         it('errors on missing credentials', function (done) {\n  545  \n  546              var bewit = Hawk.uri.getBewit('https://example.com/somewhere/over/the/rainbow', { ttlSec: 3000, ext: 'xandyandz' });\n  ...\n  549          });\n  550  \n  551:         it('errors on invalid credentials (key)', function (done) {\n  552  \n  553:             var credentials = {\n  554                  id: '123456',\n  555                  algorithm: 'sha256'\n  556              };\n  557  \n  558:             var bewit = Hawk.uri.getBewit('https://example.com/somewhere/over/the/rainbow', { credentials: credentials, ttlSec: 3000, ext: 'xandyandz' });\n  559              expect(bewit).to.equal('');\n  560              done();\n  ...\n  563          it('errors on invalid algorithm', function (done) {\n  564  \n  565:             var credentials = {\n  566                  id: '123456',\n  567                  key: '2983d45yun89q',\n  ...\n  569              };\n  570  \n  571:             var bewit = Hawk.uri.getBewit('https://example.com/somewhere/over/the/rainbow', { credentials: credentials, ttlSec: 300, ext: 'xandyandz' });\n  572              expect(bewit).to.equal('');\n  573              done();\n  ...\n  576          it('errors on missing options', function (done) {\n  577  \n  578:             var credentials = {\n  579                  id: '123456',\n  580                  key: '2983d45yun89q',\n\n/Users/kirkcp/Documents/node_play/slatemail_dist/slatemail.app/Contents/Resources/app.nw/node_modules/favicon/node_modules/request/node_modules/http-signature/http_signing.md:\n   47  with the following parameterization:\n   48  \n   49:     credentials := \"Signature\" params\n   50      params := 1#(keyId | algorithm | [headers] | [ext] | signature)\n   51      digitalSignature := plain-string\n\n/Users/kirkcp/Documents/node_play/slatemail_dist/slatemail.app/Contents/Resources/app.nw/node_modules/jquery/dist/jquery.js:\n 8538  }\n 8539  \n 8540: support.cors = !!xhrSupported && ( \"withCredentials\" in xhrSupported );\n 8541  support.ajax = xhrSupported = !!xhrSupported;\n 8542  \n\n/Users/kirkcp/Documents/node_play/slatemail_dist/slatemail.app/Contents/Resources/app.nw/node_modules/jquery/dist/jquery.min.js:\n    2  !function(a,b){\"object\"==typeof module&&\"object\"==typeof module.exports?module.exports=a.document?b(a,!0):function(a){if(!a.document)throw new Error(\"jQuery requires a window with a document\");return b(a)}:b(a)}(\"undefined\"!=typeof window?window:this,function(a,b){var c=[],d=c.slice,e=c.concat,f=c.push,g=c.indexOf,h={},i=h.toString,j=h.hasOwnProperty,k={},l=a.document,m=\"2.1.1\",n=function(a,b){return new n.fn.init(a,b)},o=/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,p=/^-ms-/,q=/-([\\da-z])/gi,r=function(a,b){return b.toUpperCase()};n.fn=n.prototype={jquery:m,constructor:n,selector:\"\",length:0,toArray:function(){return d.call(this)},get:function(a){return null!=a?0>a?this[a+this.length]:this[a]:d.call(this)},pushStack:function(a){var b=n.merge(this.constructor(),a);return b.prevObject=this,b.context=this.context,b},each:function(a,b){return n.each(this,a,b)},map:function(a){return this.pushStack(n.map(this,function(b,c){return a.call(b,c,b)}))},slice:function(){return this.pushStack(d.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(a){var b=this.length,c=+a+(0>a?b:0);return this.pushStack(c>=0&&b>c?[this[c]]:[])},end:function(){return this.prevObject||this.constructor(null)},push:f,sort:c.sort,splice:c.splice},n.extend=n.fn.extend=function(){var a,b,c,d,e,f,g=arguments[0]||{},h=1,i=arguments.length,j=!1;for(\"boolean\"==typeof g&&(j=g,g=arguments[h]||{},h++),\"object\"==typeof g||n.isFunction(g)||(g={}),h===i&&(g=this,h--);i>h;h++)if(null!=(a=arguments[h]))for(b in a)c=g[b],d=a[b],g!==d&&(j&&d&&(n.isPlainObject(d)||(e=n.isArray(d)))?(e?(e=!1,f=c&&n.isArray(c)?c:[]):f=c&&n.isPlainObject(c)?c:{},g[b]=n.extend(j,f,d)):void 0!==d&&(g[b]=d));return g},n.extend({expando:\"jQuery\"+(m+Math.random()).replace(/\\D/g,\"\"),isReady:!0,error:function(a){throw new Error(a)},noop:function(){},isFunction:function(a){return\"function\"===n.type(a)},isArray:Array.isArray,isWindow:function(a){return null!=a&&a===a.window},isNumeric:function(a){return!n.isArray(a)&&a-parseFloat(a)>=0},isPlainObject:function(a){return\"object\"!==n.type(a)||a.nodeType||n.isWindow(a)?!1:a.constructor&&!j.call(a.constructor.prototype,\"isPrototypeOf\")?!1:!0},isEmptyObject:function(a){var b;for(b in a)return!1;return!0},type:function(a){return null==a?a+\"\":\"object\"==typeof a||\"function\"==typeof a?h[i.call(a)]||\"object\":typeof a},globalEval:function(a){var b,c=eval;a=n.trim(a),a&&(1===a.indexOf(\"use strict\")?(b=l.createElement(\"script\"),b.text=a,l.head.appendChild(b).parentNode.removeChild(b)):c(a))},camelCase:function(a){return a.replace(p,\"ms-\").replace(q,r)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toLowerCase()===b.toLowerCase()},each:function(a,b,c){var d,e=0,f=a.length,g=s(a);if(c){if(g){for(;f>e;e++)if(d=b.apply(a[e],c),d===!1)break}else for(e in a)if(d=b.apply(a[e],c),d===!1)break}else if(g){for(;f>e;e++)if(d=b.call(a[e],e,a[e]),d===!1)break}else for(e in a)if(d=b.call(a[e],e,a[e]),d===!1)break;return a},trim:function(a){return null==a?\"\":(a+\"\").replace(o,\"\")},makeArray:function(a,b){var c=b||[];return null!=a&&(s(Object(a))?n.merge(c,\"string\"==typeof a?[a]:a):f.call(c,a)),c},inArray:function(a,b,c){return null==b?-1:g.call(b,a,c)},merge:function(a,b){for(var c=+b.length,d=0,e=a.length;c>d;d++)a[e++]=b[d];return a.length=e,a},grep:function(a,b,c){for(var d,e=[],f=0,g=a.length,h=!c;g>f;f++)d=!b(a[f],f),d!==h&&e.push(a[f]);return e},map:function(a,b,c){var d,f=0,g=a.length,h=s(a),i=[];if(h)for(;g>f;f++)d=b(a[f],f,c),null!=d&&i.push(d);else for(f in a)d=b(a[f],f,c),null!=d&&i.push(d);return e.apply([],i)},guid:1,proxy:function(a,b){var c,e,f;return\"string\"==typeof b&&(c=a[b],b=a,a=c),n.isFunction(a)?(e=d.call(arguments,2),f=function(){return a.apply(b||this,e.concat(d.call(arguments)))},f.guid=a.guid=a.guid||n.guid++,f):void 0},now:Date.now,support:k}),n.each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"),function(a,b){h[\"[object \"+b+\"]\"]=b.toLowerCase()});function s(a){var b=a.length,c=n.type(a);return\"function\"===c||n.isWindow(a)?!1:1===a.nodeType&&b?!0:\"array\"===c||0===b||\"number\"==typeof b&&b>0&&b-1 in a}var t=function(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u=\"sizzle\"+-new Date,v=a.document,w=0,x=0,y=gb(),z=gb(),A=gb(),B=function(a,b){return a===b&&(l=!0),0},C=\"undefined\",D=1<<31,E={}.hasOwnProperty,F=[],G=F.pop,H=F.push,I=F.push,J=F.slice,K=F.indexOf||function(a){for(var b=0,c=this.length;c>b;b++)if(this[b]===a)return b;return-1},L=\"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",M=\"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",N=\"(?:\\\\\\\\.|[\\\\w-]|[^\\\\x00-\\\\xa0])+\",O=N.replace(\"w\",\"w#\"),P=\"\\\\[\"+M+\"*(\"+N+\")(?:\"+M+\"*([*^$|!~]?=)\"+M+\"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\"+O+\"))|)\"+M+\"*\\\\]\",Q=\":(\"+N+\")(?:\\\\((('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\"+P+\")*)|.*)\\\\)|)\",R=new RegExp(\"^\"+M+\"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\"+M+\"+$\",\"g\"),S=new RegExp(\"^\"+M+\"*,\"+M+\"*\"),T=new RegExp(\"^\"+M+\"*([>+~]|\"+M+\")\"+M+\"*\"),U=new RegExp(\"=\"+M+\"*([^\\\\]'\\\"]*?)\"+M+\"*\\\\]\",\"g\"),V=new RegExp(Q),W=new RegExp(\"^\"+O+\"$\"),X={ID:new RegExp(\"^#(\"+N+\")\"),CLASS:new RegExp(\"^\\\\.(\"+N+\")\"),TAG:new RegExp(\"^(\"+N.replace(\"w\",\"w*\")+\")\"),ATTR:new RegExp(\"^\"+P),PSEUDO:new RegExp(\"^\"+Q),CHILD:new RegExp(\"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\"+M+\"*(even|odd|(([+-]|)(\\\\d*)n|)\"+M+\"*(?:([+-]|)\"+M+\"*(\\\\d+)|))\"+M+\"*\\\\)|)\",\"i\"),bool:new RegExp(\"^(?:\"+L+\")$\",\"i\"),needsContext:new RegExp(\"^\"+M+\"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\"+M+\"*((?:-\\\\d)?\\\\d*)\"+M+\"*\\\\)|)(?=[^-]|$)\",\"i\")},Y=/^(?:input|select|textarea|button)$/i,Z=/^h\\d$/i,$=/^[^{]+\\{\\s*\\[native \\w/,_=/^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,ab=/[+~]/,bb=/'|\\\\/g,cb=new RegExp(\"\\\\\\\\([\\\\da-f]{1,6}\"+M+\"?|(\"+M+\")|.)\",\"ig\"),db=function(a,b,c){var d=\"0x\"+b-65536;return d!==d||c?b:0>d?String.fromCharCode(d+65536):String.fromCharCode(d>>10|55296,1023&d|56320)};try{I.apply(F=J.call(v.childNodes),v.childNodes),F[v.childNodes.length].nodeType}catch(eb){I={apply:F.length?function(a,b){H.apply(a,J.call(b))}:function(a,b){var c=a.length,d=0;while(a[c++]=b[d++]);a.length=c-1}}}function fb(a,b,d,e){var f,h,j,k,l,o,r,s,w,x;if((b?b.ownerDocument||b:v)!==n&&m(b),b=b||n,d=d||[],!a||\"string\"!=typeof a)return d;if(1!==(k=b.nodeType)&&9!==k)return[];if(p&&!e){if(f=_.exec(a))if(j=f[1]){if(9===k){if(h=b.getElementById(j),!h||!h.parentNode)return d;if(h.id===j)return d.push(h),d}else if(b.ownerDocument&&(h=b.ownerDocument.getElementById(j))&&t(b,h)&&h.id===j)return d.push(h),d}else{if(f[2])return I.apply(d,b.getElementsByTagName(a)),d;if((j=f[3])&&c.getElementsByClassName&&b.getElementsByClassName)return I.apply(d,b.getElementsByClassName(j)),d}if(c.qsa&&(!q||!q.test(a))){if(s=r=u,w=b,x=9===k&&a,1===k&&\"object\"!==b.nodeName.toLowerCase()){o=g(a),(r=b.getAttribute(\"id\"))?s=r.replace(bb,\"\\\\$&\"):b.setAttribute(\"id\",s),s=\"[id='\"+s+\"'] \",l=o.length;while(l--)o[l]=s+qb(o[l]);w=ab.test(a)&&ob(b.parentNode)||b,x=o.join(\",\")}if(x)try{return I.apply(d,w.querySelectorAll(x)),d}catch(y){}finally{r||b.removeAttribute(\"id\")}}}return i(a.replace(R,\"$1\"),b,d,e)}function gb(){var a=[];function b(c,e){return a.push(c+\" \")>d.cacheLength&&delete b[a.shift()],b[c+\" \"]=e}return b}function hb(a){return a[u]=!0,a}function ib(a){var b=n.createElement(\"div\");try{return!!a(b)}catch(c){return!1}finally{b.parentNode&&b.parentNode.removeChild(b),b=null}}function jb(a,b){var c=a.split(\"|\"),e=a.length;while(e--)d.attrHandle[c[e]]=b}function kb(a,b){var c=b&&a,d=c&&1===a.nodeType&&1===b.nodeType&&(~b.sourceIndex||D)-(~a.sourceIndex||D);if(d)return d;if(c)while(c=c.nextSibling)if(c===b)return-1;return a?1:-1}function lb(a){return function(b){var c=b.nodeName.toLowerCase();return\"input\"===c&&b.type===a}}function mb(a){return function(b){var c=b.nodeName.toLowerCase();return(\"input\"===c||\"button\"===c)&&b.type===a}}function nb(a){return hb(function(b){return b=+b,hb(function(c,d){var e,f=a([],c.length,b),g=f.length;while(g--)c[e=f[g]]&&(c[e]=!(d[e]=c[e]))})})}function ob(a){return a&&typeof a.getElementsByTagName!==C&&a}c=fb.support={},f=fb.isXML=function(a){var b=a&&(a.ownerDocument||a).documentElement;return b?\"HTML\"!==b.nodeName:!1},m=fb.setDocument=function(a){var b,e=a?a.ownerDocument||a:v,g=e.defaultView;return e!==n&&9===e.nodeType&&e.documentElement?(n=e,o=e.documentElement,p=!f(e),g&&g!==g.top&&(g.addEventListener?g.addEventListener(\"unload\",function(){m()},!1):g.attachEvent&&g.attachEvent(\"onunload\",function(){m()})),c.attributes=ib(function(a){return a.className=\"i\",!a.getAttribute(\"className\")}),c.getElementsByTagName=ib(function(a){return a.appendChild(e.createComment(\"\")),!a.getElementsByTagName(\"*\").length}),c.getElementsByClassName=$.test(e.getElementsByClassName)&&ib(function(a){return a.innerHTML=\"<div class='a'></div><div class='a i'></div>\",a.firstChild.className=\"i\",2===a.getElementsByClassName(\"i\").length}),c.getById=ib(function(a){return o.appendChild(a).id=u,!e.getElementsByName||!e.getElementsByName(u).length}),c.getById?(d.find.ID=function(a,b){if(typeof b.getElementById!==C&&p){var c=b.getElementById(a);return c&&c.parentNode?[c]:[]}},d.filter.ID=function(a){var b=a.replace(cb,db);return function(a){return a.getAttribute(\"id\")===b}}):(delete d.find.ID,d.filter.ID=function(a){var b=a.replace(cb,db);return function(a){var c=typeof a.getAttributeNode!==C&&a.getAttributeNode(\"id\");return c&&c.value===b}}),d.find.TAG=c.getElementsByTagName?function(a,b){return typeof b.getElementsByTagName!==C?b.getElementsByTagName(a):void 0}:function(a,b){var c,d=[],e=0,f=b.getElementsByTagName(a);if(\"*\"===a){while(c=f[e++])1===c.nodeType&&d.push(c);return d}return f},d.find.CLASS=c.getElementsByClassName&&function(a,b){return typeof b.getElementsByClassName!==C&&p?b.getElementsByClassName(a):void 0},r=[],q=[],(c.qsa=$.test(e.querySelectorAll))&&(ib(function(a){a.innerHTML=\"<select msallowclip=''><option selected=''></option></select>\",a.querySelectorAll(\"[msallowclip^='']\").length&&q.push(\"[*^$]=\"+M+\"*(?:''|\\\"\\\")\"),a.querySelectorAll(\"[selected]\").length||q.push(\"\\\\[\"+M+\"*(?:value|\"+L+\")\"),a.querySelectorAll(\":checked\").length||q.push(\":checked\")}),ib(function(a){var b=e.createElement(\"input\");b.setAttribute(\"type\",\"hidden\"),a.appendChild(b).setAttribute(\"name\",\"D\"),a.querySelectorAll(\"[name=d]\").length&&q.push(\"name\"+M+\"*[*^$|!~]?=\"),a.querySelectorAll(\":enabled\").length||q.push(\":enabled\",\":disabled\"),a.querySelectorAll(\"*,:x\"),q.push(\",.*:\")})),(c.matchesSelector=$.test(s=o.matches||o.webkitMatchesSelector||o.mozMatchesSelector||o.oMatchesSelector||o.msMatchesSelector))&&ib(function(a){c.disconnectedMatch=s.call(a,\"div\"),s.call(a,\"[s!='']:x\"),r.push(\"!=\",Q)}),q=q.length&&new RegExp(q.join(\"|\")),r=r.length&&new RegExp(r.join(\"|\")),b=$.test(o.compareDocumentPosition),t=b||$.test(o.contains)?function(a,b){var c=9===a.nodeType?a.documentElement:a,d=b&&b.parentNode;return a===d||!(!d||1!==d.nodeType||!(c.contains?c.contains(d):a.compareDocumentPosition&&16&a.compareDocumentPosition(d)))}:function(a,b){if(b)while(b=b.parentNode)if(b===a)return!0;return!1},B=b?function(a,b){if(a===b)return l=!0,0;var d=!a.compareDocumentPosition-!b.compareDocumentPosition;return d?d:(d=(a.ownerDocument||a)===(b.ownerDocument||b)?a.compareDocumentPosition(b):1,1&d||!c.sortDetached&&b.compareDocumentPosition(a)===d?a===e||a.ownerDocument===v&&t(v,a)?-1:b===e||b.ownerDocument===v&&t(v,b)?1:k?K.call(k,a)-K.call(k,b):0:4&d?-1:1)}:function(a,b){if(a===b)return l=!0,0;var c,d=0,f=a.parentNode,g=b.parentNode,h=[a],i=[b];if(!f||!g)return a===e?-1:b===e?1:f?-1:g?1:k?K.call(k,a)-K.call(k,b):0;if(f===g)return kb(a,b);c=a;while(c=c.parentNode)h.unshift(c);c=b;while(c=c.parentNode)i.unshift(c);while(h[d]===i[d])d++;return d?kb(h[d],i[d]):h[d]===v?-1:i[d]===v?1:0},e):n},fb.matches=function(a,b){return fb(a,null,null,b)},fb.matchesSelector=function(a,b){if((a.ownerDocument||a)!==n&&m(a),b=b.replace(U,\"='$1']\"),!(!c.matchesSelector||!p||r&&r.test(b)||q&&q.test(b)))try{var d=s.call(a,b);if(d||c.disconnectedMatch||a.document&&11!==a.document.nodeType)return d}catch(e){}return fb(b,n,null,[a]).length>0},fb.contains=function(a,b){return(a.ownerDocument||a)!==n&&m(a),t(a,b)},fb.attr=function(a,b){(a.ownerDocument||a)!==n&&m(a);var e=d.attrHandle[b.toLowerCase()],f=e&&E.call(d.attrHandle,b.toLowerCase())?e(a,b,!p):void 0;return void 0!==f?f:c.attributes||!p?a.getAttribute(b):(f=a.getAttributeNode(b))&&f.specified?f.value:null},fb.error=function(a){throw new Error(\"Syntax error, unrecognized expression: \"+a)},fb.uniqueSort=function(a){var b,d=[],e=0,f=0;if(l=!c.detectDuplicates,k=!c.sortStable&&a.slice(0),a.sort(B),l){while(b=a[f++])b===a[f]&&(e=d.push(f));while(e--)a.splice(d[e],1)}return k=null,a},e=fb.getText=function(a){var b,c=\"\",d=0,f=a.nodeType;if(f){if(1===f||9===f||11===f){if(\"string\"==typeof a.textContent)return a.textContent;for(a=a.firstChild;a;a=a.nextSibling)c+=e(a)}else if(3===f||4===f)return a.nodeValue}else while(b=a[d++])c+=e(b);return c},d=fb.selectors={cacheLength:50,createPseudo:hb,match:X,attrHandle:{},find:{},relative:{\">\":{dir:\"parentNode\",first:!0},\" \":{dir:\"parentNode\"},\"+\":{dir:\"previousSibling\",first:!0},\"~\":{dir:\"previousSibling\"}},preFilter:{ATTR:function(a){return a[1]=a[1].replace(cb,db),a[3]=(a[3]||a[4]||a[5]||\"\").replace(cb,db),\"~=\"===a[2]&&(a[3]=\" \"+a[3]+\" \"),a.slice(0,4)},CHILD:function(a){return a[1]=a[1].toLowerCase(),\"nth\"===a[1].slice(0,3)?(a[3]||fb.error(a[0]),a[4]=+(a[4]?a[5]+(a[6]||1):2*(\"even\"===a[3]||\"odd\"===a[3])),a[5]=+(a[7]+a[8]||\"odd\"===a[3])):a[3]&&fb.error(a[0]),a},PSEUDO:function(a){var b,c=!a[6]&&a[2];return X.CHILD.test(a[0])?null:(a[3]?a[2]=a[4]||a[5]||\"\":c&&V.test(c)&&(b=g(c,!0))&&(b=c.indexOf(\")\",c.length-b)-c.length)&&(a[0]=a[0].slice(0,b),a[2]=c.slice(0,b)),a.slice(0,3))}},filter:{TAG:function(a){var b=a.replace(cb,db).toLowerCase();return\"*\"===a?function(){return!0}:function(a){return a.nodeName&&a.nodeName.toLowerCase()===b}},CLASS:function(a){var b=y[a+\" \"];return b||(b=new RegExp(\"(^|\"+M+\")\"+a+\"(\"+M+\"|$)\"))&&y(a,function(a){return b.test(\"string\"==typeof a.className&&a.className||typeof a.getAttribute!==C&&a.getAttribute(\"class\")||\"\")})},ATTR:function(a,b,c){return function(d){var e=fb.attr(d,a);return null==e?\"!=\"===b:b?(e+=\"\",\"=\"===b?e===c:\"!=\"===b?e!==c:\"^=\"===b?c&&0===e.indexOf(c):\"*=\"===b?c&&e.indexOf(c)>-1:\"$=\"===b?c&&e.slice(-c.length)===c:\"~=\"===b?(\" \"+e+\" \").indexOf(c)>-1:\"|=\"===b?e===c||e.slice(0,c.length+1)===c+\"-\":!1):!0}},CHILD:function(a,b,c,d,e){var f=\"nth\"!==a.slice(0,3),g=\"last\"!==a.slice(-4),h=\"of-type\"===b;return 1===d&&0===e?function(a){return!!a.parentNode}:function(b,c,i){var j,k,l,m,n,o,p=f!==g?\"nextSibling\":\"previousSibling\",q=b.parentNode,r=h&&b.nodeName.toLowerCase(),s=!i&&!h;if(q){if(f){while(p){l=b;while(l=l[p])if(h?l.nodeName.toLowerCase()===r:1===l.nodeType)return!1;o=p=\"only\"===a&&!o&&\"nextSibling\"}return!0}if(o=[g?q.firstChild:q.lastChild],g&&s){k=q[u]||(q[u]={}),j=k[a]||[],n=j[0]===w&&j[1],m=j[0]===w&&j[2],l=n&&q.childNodes[n];while(l=++n&&l&&l[p]||(m=n=0)||o.pop())if(1===l.nodeType&&++m&&l===b){k[a]=[w,n,m];break}}else if(s&&(j=(b[u]||(b[u]={}))[a])&&j[0]===w)m=j[1];else while(l=++n&&l&&l[p]||(m=n=0)||o.pop())if((h?l.nodeName.toLowerCase()===r:1===l.nodeType)&&++m&&(s&&((l[u]||(l[u]={}))[a]=[w,m]),l===b))break;return m-=e,m===d||m%d===0&&m/d>=0}}},PSEUDO:function(a,b){var c,e=d.pseudos[a]||d.setFilters[a.toLowerCase()]||fb.error(\"unsupported pseudo: \"+a);return e[u]?e(b):e.length>1?(c=[a,a,\"\",b],d.setFilters.hasOwnProperty(a.toLowerCase())?hb(function(a,c){var d,f=e(a,b),g=f.length;while(g--)d=K.call(a,f[g]),a[d]=!(c[d]=f[g])}):function(a){return e(a,0,c)}):e}},pseudos:{not:hb(function(a){var b=[],c=[],d=h(a.replace(R,\"$1\"));return d[u]?hb(function(a,b,c,e){var f,g=d(a,null,e,[]),h=a.length;while(h--)(f=g[h])&&(a[h]=!(b[h]=f))}):function(a,e,f){return b[0]=a,d(b,null,f,c),!c.pop()}}),has:hb(function(a){return function(b){return fb(a,b).length>0}}),contains:hb(function(a){return function(b){return(b.textContent||b.innerText||e(b)).indexOf(a)>-1}}),lang:hb(function(a){return W.test(a||\"\")||fb.error(\"unsupported lang: \"+a),a=a.replace(cb,db).toLowerCase(),function(b){var c;do if(c=p?b.lang:b.getAttribute(\"xml:lang\")||b.getAttribute(\"lang\"))return c=c.toLowerCase(),c===a||0===c.indexOf(a+\"-\");while((b=b.parentNode)&&1===b.nodeType);return!1}}),target:function(b){var c=a.location&&a.location.hash;return c&&c.slice(1)===b.id},root:function(a){return a===o},focus:function(a){return a===n.activeElement&&(!n.hasFocus||n.hasFocus())&&!!(a.type||a.href||~a.tabIndex)},enabled:function(a){return a.disabled===!1},disabled:function(a){return a.disabled===!0},checked:function(a){var b=a.nodeName.toLowerCase();return\"input\"===b&&!!a.checked||\"option\"===b&&!!a.selected},selected:function(a){return a.parentNode&&a.parentNode.selectedIndex,a.selected===!0},empty:function(a){for(a=a.firstChild;a;a=a.nextSibling)if(a.nodeType<6)return!1;return!0},parent:function(a){return!d.pseudos.empty(a)},header:function(a){return Z.test(a.nodeName)},input:function(a){return Y.test(a.nodeName)},button:function(a){var b=a.nodeName.toLowerCase();return\"input\"===b&&\"button\"===a.type||\"button\"===b},text:function(a){var b;return\"input\"===a.nodeName.toLowerCase()&&\"text\"===a.type&&(null==(b=a.getAttribute(\"type\"))||\"text\"===b.toLowerCase())},first:nb(function(){return[0]}),last:nb(function(a,b){return[b-1]}),eq:nb(function(a,b,c){return[0>c?c+b:c]}),even:nb(function(a,b){for(var c=0;b>c;c+=2)a.push(c);return a}),odd:nb(function(a,b){for(var c=1;b>c;c+=2)a.push(c);return a}),lt:nb(function(a,b,c){for(var d=0>c?c+b:c;--d>=0;)a.push(d);return a}),gt:nb(function(a,b,c){for(var d=0>c?c+b:c;++d<b;)a.push(d);return a})}},d.pseudos.nth=d.pseudos.eq;for(b in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})d.pseudos[b]=lb(b);for(b in{submit:!0,reset:!0})d.pseudos[b]=mb(b);function pb(){}pb.prototype=d.filters=d.pseudos,d.setFilters=new pb,g=fb.tokenize=function(a,b){var c,e,f,g,h,i,j,k=z[a+\" \"];if(k)return b?0:k.slice(0);h=a,i=[],j=d.preFilter;while(h){(!c||(e=S.exec(h)))&&(e&&(h=h.slice(e[0].length)||h),i.push(f=[])),c=!1,(e=T.exec(h))&&(c=e.shift(),f.push({value:c,type:e[0].replace(R,\" \")}),h=h.slice(c.length));for(g in d.filter)!(e=X[g].exec(h))||j[g]&&!(e=j[g](e))||(c=e.shift(),f.push({value:c,type:g,matches:e}),h=h.slice(c.length));if(!c)break}return b?h.length:h?fb.error(a):z(a,i).slice(0)};function qb(a){for(var b=0,c=a.length,d=\"\";c>b;b++)d+=a[b].value;return d}function rb(a,b,c){var d=b.dir,e=c&&\"parentNode\"===d,f=x++;return b.first?function(b,c,f){while(b=b[d])if(1===b.nodeType||e)return a(b,c,f)}:function(b,c,g){var h,i,j=[w,f];if(g){while(b=b[d])if((1===b.nodeType||e)&&a(b,c,g))return!0}else while(b=b[d])if(1===b.nodeType||e){if(i=b[u]||(b[u]={}),(h=i[d])&&h[0]===w&&h[1]===f)return j[2]=h[2];if(i[d]=j,j[2]=a(b,c,g))return!0}}}function sb(a){return a.length>1?function(b,c,d){var e=a.length;while(e--)if(!a[e](b,c,d))return!1;return!0}:a[0]}function tb(a,b,c){for(var d=0,e=b.length;e>d;d++)fb(a,b[d],c);return c}function ub(a,b,c,d,e){for(var f,g=[],h=0,i=a.length,j=null!=b;i>h;h++)(f=a[h])&&(!c||c(f,d,e))&&(g.push(f),j&&b.push(h));return g}function vb(a,b,c,d,e,f){return d&&!d[u]&&(d=vb(d)),e&&!e[u]&&(e=vb(e,f)),hb(function(f,g,h,i){var j,k,l,m=[],n=[],o=g.length,p=f||tb(b||\"*\",h.nodeType?[h]:h,[]),q=!a||!f&&b?p:ub(p,m,a,h,i),r=c?e||(f?a:o||d)?[]:g:q;if(c&&c(q,r,h,i),d){j=ub(r,n),d(j,[],h,i),k=j.length;while(k--)(l=j[k])&&(r[n[k]]=!(q[n[k]]=l))}if(f){if(e||a){if(e){j=[],k=r.length;while(k--)(l=r[k])&&j.push(q[k]=l);e(null,r=[],j,i)}k=r.length;while(k--)(l=r[k])&&(j=e?K.call(f,l):m[k])>-1&&(f[j]=!(g[j]=l))}}else r=ub(r===g?r.splice(o,r.length):r),e?e(null,g,r,i):I.apply(g,r)})}function wb(a){for(var b,c,e,f=a.length,g=d.relative[a[0].type],h=g||d.relative[\" \"],i=g?1:0,k=rb(function(a){return a===b},h,!0),l=rb(function(a){return K.call(b,a)>-1},h,!0),m=[function(a,c,d){return!g&&(d||c!==j)||((b=c).nodeType?k(a,c,d):l(a,c,d))}];f>i;i++)if(c=d.relative[a[i].type])m=[rb(sb(m),c)];else{if(c=d.filter[a[i].type].apply(null,a[i].matches),c[u]){for(e=++i;f>e;e++)if(d.relative[a[e].type])break;return vb(i>1&&sb(m),i>1&&qb(a.slice(0,i-1).concat({value:\" \"===a[i-2].type?\"*\":\"\"})).replace(R,\"$1\"),c,e>i&&wb(a.slice(i,e)),f>e&&wb(a=a.slice(e)),f>e&&qb(a))}m.push(c)}return sb(m)}function xb(a,b){var c=b.length>0,e=a.length>0,f=function(f,g,h,i,k){var l,m,o,p=0,q=\"0\",r=f&&[],s=[],t=j,u=f||e&&d.find.TAG(\"*\",k),v=w+=null==t?1:Math.random()||.1,x=u.length;for(k&&(j=g!==n&&g);q!==x&&null!=(l=u[q]);q++){if(e&&l){m=0;while(o=a[m++])if(o(l,g,h)){i.push(l);break}k&&(w=v)}c&&((l=!o&&l)&&p--,f&&r.push(l))}if(p+=q,c&&q!==p){m=0;while(o=b[m++])o(r,s,g,h);if(f){if(p>0)while(q--)r[q]||s[q]||(s[q]=G.call(i));s=ub(s)}I.apply(i,s),k&&!f&&s.length>0&&p+b.length>1&&fb.uniqueSort(i)}return k&&(w=v,j=t),r};return c?hb(f):f}return h=fb.compile=function(a,b){var c,d=[],e=[],f=A[a+\" \"];if(!f){b||(b=g(a)),c=b.length;while(c--)f=wb(b[c]),f[u]?d.push(f):e.push(f);f=A(a,xb(e,d)),f.selector=a}return f},i=fb.select=function(a,b,e,f){var i,j,k,l,m,n=\"function\"==typeof a&&a,o=!f&&g(a=n.selector||a);if(e=e||[],1===o.length){if(j=o[0]=o[0].slice(0),j.length>2&&\"ID\"===(k=j[0]).type&&c.getById&&9===b.nodeType&&p&&d.relative[j[1].type]){if(b=(d.find.ID(k.matches[0].replace(cb,db),b)||[])[0],!b)return e;n&&(b=b.parentNode),a=a.slice(j.shift().value.length)}i=X.needsContext.test(a)?0:j.length;while(i--){if(k=j[i],d.relative[l=k.type])break;if((m=d.find[l])&&(f=m(k.matches[0].replace(cb,db),ab.test(j[0].type)&&ob(b.parentNode)||b))){if(j.splice(i,1),a=f.length&&qb(j),!a)return I.apply(e,f),e;break}}}return(n||h(a,o))(f,b,!p,e,ab.test(a)&&ob(b.parentNode)||b),e},c.sortStable=u.split(\"\").sort(B).join(\"\")===u,c.detectDuplicates=!!l,m(),c.sortDetached=ib(function(a){return 1&a.compareDocumentPosition(n.createElement(\"div\"))}),ib(function(a){return a.innerHTML=\"<a href='#'></a>\",\"#\"===a.firstChild.getAttribute(\"href\")})||jb(\"type|href|height|width\",function(a,b,c){return c?void 0:a.getAttribute(b,\"type\"===b.toLowerCase()?1:2)}),c.attributes&&ib(function(a){return a.innerHTML=\"<input/>\",a.firstChild.setAttribute(\"value\",\"\"),\"\"===a.firstChild.getAttribute(\"value\")})||jb(\"value\",function(a,b,c){return c||\"input\"!==a.nodeName.toLowerCase()?void 0:a.defaultValue}),ib(function(a){return null==a.getAttribute(\"disabled\")})||jb(L,function(a,b,c){var d;return c?void 0:a[b]===!0?b.toLowerCase():(d=a.getAttributeNode(b))&&d.specified?d.value:null}),fb}(a);n.find=t,n.expr=t.selectors,n.expr[\":\"]=n.expr.pseudos,n.unique=t.uniqueSort,n.text=t.getText,n.isXMLDoc=t.isXML,n.contains=t.contains;var u=n.expr.match.needsContext,v=/^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,w=/^.[^:#\\[\\.,]*$/;function x(a,b,c){if(n.isFunction(b))return n.grep(a,function(a,d){return!!b.call(a,d,a)!==c});if(b.nodeType)return n.grep(a,function(a){return a===b!==c});if(\"string\"==typeof b){if(w.test(b))return n.filter(b,a,c);b=n.filter(b,a)}return n.grep(a,function(a){return g.call(b,a)>=0!==c})}n.filter=function(a,b,c){var d=b[0];return c&&(a=\":not(\"+a+\")\"),1===b.length&&1===d.nodeType?n.find.matchesSelector(d,a)?[d]:[]:n.find.matches(a,n.grep(b,function(a){return 1===a.nodeType}))},n.fn.extend({find:function(a){var b,c=this.length,d=[],e=this;if(\"string\"!=typeof a)return this.pushStack(n(a).filter(function(){for(b=0;c>b;b++)if(n.contains(e[b],this))return!0}));for(b=0;c>b;b++)n.find(a,e[b],d);return d=this.pushStack(c>1?n.unique(d):d),d.selector=this.selector?this.selector+\" \"+a:a,d},filter:function(a){return this.pushStack(x(this,a||[],!1))},not:function(a){return this.pushStack(x(this,a||[],!0))},is:function(a){return!!x(this,\"string\"==typeof a&&u.test(a)?n(a):a||[],!1).length}});var y,z=/^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]*))$/,A=n.fn.init=function(a,b){var c,d;if(!a)return this;if(\"string\"==typeof a){if(c=\"<\"===a[0]&&\">\"===a[a.length-1]&&a.length>=3?[null,a,null]:z.exec(a),!c||!c[1]&&b)return!b||b.jquery?(b||y).find(a):this.constructor(b).find(a);if(c[1]){if(b=b instanceof n?b[0]:b,n.merge(this,n.parseHTML(c[1],b&&b.nodeType?b.ownerDocument||b:l,!0)),v.test(c[1])&&n.isPlainObject(b))for(c in b)n.isFunction(this[c])?this[c](b[c]):this.attr(c,b[c]);return this}return d=l.getElementById(c[2]),d&&d.parentNode&&(this.length=1,this[0]=d),this.context=l,this.selector=a,this}return a.nodeType?(this.context=this[0]=a,this.length=1,this):n.isFunction(a)?\"undefined\"!=typeof y.ready?y.ready(a):a(n):(void 0!==a.selector&&(this.selector=a.selector,this.context=a.context),n.makeArray(a,this))};A.prototype=n.fn,y=n(l);var B=/^(?:parents|prev(?:Until|All))/,C={children:!0,contents:!0,next:!0,prev:!0};n.extend({dir:function(a,b,c){var d=[],e=void 0!==c;while((a=a[b])&&9!==a.nodeType)if(1===a.nodeType){if(e&&n(a).is(c))break;d.push(a)}return d},sibling:function(a,b){for(var c=[];a;a=a.nextSibling)1===a.nodeType&&a!==b&&c.push(a);return c}}),n.fn.extend({has:function(a){var b=n(a,this),c=b.length;return this.filter(function(){for(var a=0;c>a;a++)if(n.contains(this,b[a]))return!0})},closest:function(a,b){for(var c,d=0,e=this.length,f=[],g=u.test(a)||\"string\"!=typeof a?n(a,b||this.context):0;e>d;d++)for(c=this[d];c&&c!==b;c=c.parentNode)if(c.nodeType<11&&(g?g.index(c)>-1:1===c.nodeType&&n.find.matchesSelector(c,a))){f.push(c);break}return this.pushStack(f.length>1?n.unique(f):f)},index:function(a){return a?\"string\"==typeof a?g.call(n(a),this[0]):g.call(this,a.jquery?a[0]:a):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(a,b){return this.pushStack(n.unique(n.merge(this.get(),n(a,b))))},addBack:function(a){return this.add(null==a?this.prevObject:this.prevObject.filter(a))}});function D(a,b){while((a=a[b])&&1!==a.nodeType);return a}n.each({parent:function(a){var b=a.parentNode;return b&&11!==b.nodeType?b:null},parents:function(a){return n.dir(a,\"parentNode\")},parentsUntil:function(a,b,c){return n.dir(a,\"parentNode\",c)},next:function(a){return D(a,\"nextSibling\")},prev:function(a){return D(a,\"previousSibling\")},nextAll:function(a){return n.dir(a,\"nextSibling\")},prevAll:function(a){return n.dir(a,\"previousSibling\")},nextUntil:function(a,b,c){return n.dir(a,\"nextSibling\",c)},prevUntil:function(a,b,c){return n.dir(a,\"previousSibling\",c)},siblings:function(a){return n.sibling((a.parentNode||{}).firstChild,a)},children:function(a){return n.sibling(a.firstChild)},contents:function(a){return a.contentDocument||n.merge([],a.childNodes)}},function(a,b){n.fn[a]=function(c,d){var e=n.map(this,b,c);return\"Until\"!==a.slice(-5)&&(d=c),d&&\"string\"==typeof d&&(e=n.filter(d,e)),this.length>1&&(C[a]||n.unique(e),B.test(a)&&e.reverse()),this.pushStack(e)}});var E=/\\S+/g,F={};function G(a){var b=F[a]={};return n.each(a.match(E)||[],function(a,c){b[c]=!0}),b}n.Callbacks=function(a){a=\"string\"==typeof a?F[a]||G(a):n.extend({},a);var b,c,d,e,f,g,h=[],i=!a.once&&[],j=function(l){for(b=a.memory&&l,c=!0,g=e||0,e=0,f=h.length,d=!0;h&&f>g;g++)if(h[g].apply(l[0],l[1])===!1&&a.stopOnFalse){b=!1;break}d=!1,h&&(i?i.length&&j(i.shift()):b?h=[]:k.disable())},k={add:function(){if(h){var c=h.length;!function g(b){n.each(b,function(b,c){var d=n.type(c);\"function\"===d?a.unique&&k.has(c)||h.push(c):c&&c.length&&\"string\"!==d&&g(c)})}(arguments),d?f=h.length:b&&(e=c,j(b))}return this},remove:function(){return h&&n.each(arguments,function(a,b){var c;while((c=n.inArray(b,h,c))>-1)h.splice(c,1),d&&(f>=c&&f--,g>=c&&g--)}),this},has:function(a){return a?n.inArray(a,h)>-1:!(!h||!h.length)},empty:function(){return h=[],f=0,this},disable:function(){return h=i=b=void 0,this},disabled:function(){return!h},lock:function(){return i=void 0,b||k.disable(),this},locked:function(){return!i},fireWith:function(a,b){return!h||c&&!i||(b=b||[],b=[a,b.slice?b.slice():b],d?i.push(b):j(b)),this},fire:function(){return k.fireWith(this,arguments),this},fired:function(){return!!c}};return k},n.extend({Deferred:function(a){var b=[[\"resolve\",\"done\",n.Callbacks(\"once memory\"),\"resolved\"],[\"reject\",\"fail\",n.Callbacks(\"once memory\"),\"rejected\"],[\"notify\",\"progress\",n.Callbacks(\"memory\")]],c=\"pending\",d={state:function(){return c},always:function(){return e.done(arguments).fail(arguments),this},then:function(){var a=arguments;return n.Deferred(function(c){n.each(b,function(b,f){var g=n.isFunction(a[b])&&a[b];e[f[1]](function(){var a=g&&g.apply(this,arguments);a&&n.isFunction(a.promise)?a.promise().done(c.resolve).fail(c.reject).progress(c.notify):c[f[0]+\"With\"](this===d?c.promise():this,g?[a]:arguments)})}),a=null}).promise()},promise:function(a){return null!=a?n.extend(a,d):d}},e={};return d.pipe=d.then,n.each(b,function(a,f){var g=f[2],h=f[3];d[f[1]]=g.add,h&&g.add(function(){c=h},b[1^a][2].disable,b[2][2].lock),e[f[0]]=function(){return e[f[0]+\"With\"](this===e?d:this,arguments),this},e[f[0]+\"With\"]=g.fireWith}),d.promise(e),a&&a.call(e,e),e},when:function(a){var b=0,c=d.call(arguments),e=c.length,f=1!==e||a&&n.isFunction(a.promise)?e:0,g=1===f?a:n.Deferred(),h=function(a,b,c){return function(e){b[a]=this,c[a]=arguments.length>1?d.call(arguments):e,c===i?g.notifyWith(b,c):--f||g.resolveWith(b,c)}},i,j,k;if(e>1)for(i=new Array(e),j=new Array(e),k=new Array(e);e>b;b++)c[b]&&n.isFunction(c[b].promise)?c[b].promise().done(h(b,k,c)).fail(g.reject).progress(h(b,j,i)):--f;return f||g.resolveWith(k,c),g.promise()}});var H;n.fn.ready=function(a){return n.ready.promise().done(a),this},n.extend({isReady:!1,readyWait:1,holdReady:function(a){a?n.readyWait++:n.ready(!0)},ready:function(a){(a===!0?--n.readyWait:n.isReady)||(n.isReady=!0,a!==!0&&--n.readyWait>0||(H.resolveWith(l,[n]),n.fn.triggerHandler&&(n(l).triggerHandler(\"ready\"),n(l).off(\"ready\"))))}});function I(){l.removeEventListener(\"DOMContentLoaded\",I,!1),a.removeEventListener(\"load\",I,!1),n.ready()}n.ready.promise=function(b){return H||(H=n.Deferred(),\"complete\"===l.readyState?setTimeout(n.ready):(l.addEventListener(\"DOMContentLoaded\",I,!1),a.addEventListener(\"load\",I,!1))),H.promise(b)},n.ready.promise();var J=n.access=function(a,b,c,d,e,f,g){var h=0,i=a.length,j=null==c;if(\"object\"===n.type(c)){e=!0;for(h in c)n.access(a,b,h,c[h],!0,f,g)}else if(void 0!==d&&(e=!0,n.isFunction(d)||(g=!0),j&&(g?(b.call(a,d),b=null):(j=b,b=function(a,b,c){return j.call(n(a),c)})),b))for(;i>h;h++)b(a[h],c,g?d:d.call(a[h],h,b(a[h],c)));return e?a:j?b.call(a):i?b(a[0],c):f};n.acceptData=function(a){return 1===a.nodeType||9===a.nodeType||!+a.nodeType};function K(){Object.defineProperty(this.cache={},0,{get:function(){return{}}}),this.expando=n.expando+Math.random()}K.uid=1,K.accepts=n.acceptData,K.prototype={key:function(a){if(!K.accepts(a))return 0;var b={},c=a[this.expando];if(!c){c=K.uid++;try{b[this.expando]={value:c},Object.defineProperties(a,b)}catch(d){b[this.expando]=c,n.extend(a,b)}}return this.cache[c]||(this.cache[c]={}),c},set:function(a,b,c){var d,e=this.key(a),f=this.cache[e];if(\"string\"==typeof b)f[b]=c;else if(n.isEmptyObject(f))n.extend(this.cache[e],b);else for(d in b)f[d]=b[d];return f},get:function(a,b){var c=this.cache[this.key(a)];return void 0===b?c:c[b]},access:function(a,b,c){var d;return void 0===b||b&&\"string\"==typeof b&&void 0===c?(d=this.get(a,b),void 0!==d?d:this.get(a,n.camelCase(b))):(this.set(a,b,c),void 0!==c?c:b)},remove:function(a,b){var c,d,e,f=this.key(a),g=this.cache[f];if(void 0===b)this.cache[f]={};else{n.isArray(b)?d=b.concat(b.map(n.camelCase)):(e=n.camelCase(b),b in g?d=[b,e]:(d=e,d=d in g?[d]:d.match(E)||[])),c=d.length;while(c--)delete g[d[c]]}},hasData:function(a){return!n.isEmptyObject(this.cache[a[this.expando]]||{})},discard:function(a){a[this.expando]&&delete this.cache[a[this.expando]]}};var L=new K,M=new K,N=/^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,O=/([A-Z])/g;function P(a,b,c){var d;if(void 0===c&&1===a.nodeType)if(d=\"data-\"+b.replace(O,\"-$1\").toLowerCase(),c=a.getAttribute(d),\"string\"==typeof c){try{c=\"true\"===c?!0:\"false\"===c?!1:\"null\"===c?null:+c+\"\"===c?+c:N.test(c)?n.parseJSON(c):c}catch(e){}M.set(a,b,c)}else c=void 0;return c}n.extend({hasData:function(a){return M.hasData(a)||L.hasData(a)},data:function(a,b,c){return M.access(a,b,c)},removeData:function(a,b){M.remove(a,b)\n    3  },_data:function(a,b,c){return L.access(a,b,c)},_removeData:function(a,b){L.remove(a,b)}}),n.fn.extend({data:function(a,b){var c,d,e,f=this[0],g=f&&f.attributes;if(void 0===a){if(this.length&&(e=M.get(f),1===f.nodeType&&!L.get(f,\"hasDataAttrs\"))){c=g.length;while(c--)g[c]&&(d=g[c].name,0===d.indexOf(\"data-\")&&(d=n.camelCase(d.slice(5)),P(f,d,e[d])));L.set(f,\"hasDataAttrs\",!0)}return e}return\"object\"==typeof a?this.each(function(){M.set(this,a)}):J(this,function(b){var c,d=n.camelCase(a);if(f&&void 0===b){if(c=M.get(f,a),void 0!==c)return c;if(c=M.get(f,d),void 0!==c)return c;if(c=P(f,d,void 0),void 0!==c)return c}else this.each(function(){var c=M.get(this,d);M.set(this,d,b),-1!==a.indexOf(\"-\")&&void 0!==c&&M.set(this,a,b)})},null,b,arguments.length>1,null,!0)},removeData:function(a){return this.each(function(){M.remove(this,a)})}}),n.extend({queue:function(a,b,c){var d;return a?(b=(b||\"fx\")+\"queue\",d=L.get(a,b),c&&(!d||n.isArray(c)?d=L.access(a,b,n.makeArray(c)):d.push(c)),d||[]):void 0},dequeue:function(a,b){b=b||\"fx\";var c=n.queue(a,b),d=c.length,e=c.shift(),f=n._queueHooks(a,b),g=function(){n.dequeue(a,b)};\"inprogress\"===e&&(e=c.shift(),d--),e&&(\"fx\"===b&&c.unshift(\"inprogress\"),delete f.stop,e.call(a,g,f)),!d&&f&&f.empty.fire()},_queueHooks:function(a,b){var c=b+\"queueHooks\";return L.get(a,c)||L.access(a,c,{empty:n.Callbacks(\"once memory\").add(function(){L.remove(a,[b+\"queue\",c])})})}}),n.fn.extend({queue:function(a,b){var c=2;return\"string\"!=typeof a&&(b=a,a=\"fx\",c--),arguments.length<c?n.queue(this[0],a):void 0===b?this:this.each(function(){var c=n.queue(this,a,b);n._queueHooks(this,a),\"fx\"===a&&\"inprogress\"!==c[0]&&n.dequeue(this,a)})},dequeue:function(a){return this.each(function(){n.dequeue(this,a)})},clearQueue:function(a){return this.queue(a||\"fx\",[])},promise:function(a,b){var c,d=1,e=n.Deferred(),f=this,g=this.length,h=function(){--d||e.resolveWith(f,[f])};\"string\"!=typeof a&&(b=a,a=void 0),a=a||\"fx\";while(g--)c=L.get(f[g],a+\"queueHooks\"),c&&c.empty&&(d++,c.empty.add(h));return h(),e.promise(b)}});var Q=/[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/.source,R=[\"Top\",\"Right\",\"Bottom\",\"Left\"],S=function(a,b){return a=b||a,\"none\"===n.css(a,\"display\")||!n.contains(a.ownerDocument,a)},T=/^(?:checkbox|radio)$/i;!function(){var a=l.createDocumentFragment(),b=a.appendChild(l.createElement(\"div\")),c=l.createElement(\"input\");c.setAttribute(\"type\",\"radio\"),c.setAttribute(\"checked\",\"checked\"),c.setAttribute(\"name\",\"t\"),b.appendChild(c),k.checkClone=b.cloneNode(!0).cloneNode(!0).lastChild.checked,b.innerHTML=\"<textarea>x</textarea>\",k.noCloneChecked=!!b.cloneNode(!0).lastChild.defaultValue}();var U=\"undefined\";k.focusinBubbles=\"onfocusin\"in a;var V=/^key/,W=/^(?:mouse|pointer|contextmenu)|click/,X=/^(?:focusinfocus|focusoutblur)$/,Y=/^([^.]*)(?:\\.(.+)|)$/;function Z(){return!0}function $(){return!1}function _(){try{return l.activeElement}catch(a){}}n.event={global:{},add:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,o,p,q,r=L.get(a);if(r){c.handler&&(f=c,c=f.handler,e=f.selector),c.guid||(c.guid=n.guid++),(i=r.events)||(i=r.events={}),(g=r.handle)||(g=r.handle=function(b){return typeof n!==U&&n.event.triggered!==b.type?n.event.dispatch.apply(a,arguments):void 0}),b=(b||\"\").match(E)||[\"\"],j=b.length;while(j--)h=Y.exec(b[j])||[],o=q=h[1],p=(h[2]||\"\").split(\".\").sort(),o&&(l=n.event.special[o]||{},o=(e?l.delegateType:l.bindType)||o,l=n.event.special[o]||{},k=n.extend({type:o,origType:q,data:d,handler:c,guid:c.guid,selector:e,needsContext:e&&n.expr.match.needsContext.test(e),namespace:p.join(\".\")},f),(m=i[o])||(m=i[o]=[],m.delegateCount=0,l.setup&&l.setup.call(a,d,p,g)!==!1||a.addEventListener&&a.addEventListener(o,g,!1)),l.add&&(l.add.call(a,k),k.handler.guid||(k.handler.guid=c.guid)),e?m.splice(m.delegateCount++,0,k):m.push(k),n.event.global[o]=!0)}},remove:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,o,p,q,r=L.hasData(a)&&L.get(a);if(r&&(i=r.events)){b=(b||\"\").match(E)||[\"\"],j=b.length;while(j--)if(h=Y.exec(b[j])||[],o=q=h[1],p=(h[2]||\"\").split(\".\").sort(),o){l=n.event.special[o]||{},o=(d?l.delegateType:l.bindType)||o,m=i[o]||[],h=h[2]&&new RegExp(\"(^|\\\\.)\"+p.join(\"\\\\.(?:.*\\\\.|)\")+\"(\\\\.|$)\"),g=f=m.length;while(f--)k=m[f],!e&&q!==k.origType||c&&c.guid!==k.guid||h&&!h.test(k.namespace)||d&&d!==k.selector&&(\"**\"!==d||!k.selector)||(m.splice(f,1),k.selector&&m.delegateCount--,l.remove&&l.remove.call(a,k));g&&!m.length&&(l.teardown&&l.teardown.call(a,p,r.handle)!==!1||n.removeEvent(a,o,r.handle),delete i[o])}else for(o in i)n.event.remove(a,o+b[j],c,d,!0);n.isEmptyObject(i)&&(delete r.handle,L.remove(a,\"events\"))}},trigger:function(b,c,d,e){var f,g,h,i,k,m,o,p=[d||l],q=j.call(b,\"type\")?b.type:b,r=j.call(b,\"namespace\")?b.namespace.split(\".\"):[];if(g=h=d=d||l,3!==d.nodeType&&8!==d.nodeType&&!X.test(q+n.event.triggered)&&(q.indexOf(\".\")>=0&&(r=q.split(\".\"),q=r.shift(),r.sort()),k=q.indexOf(\":\")<0&&\"on\"+q,b=b[n.expando]?b:new n.Event(q,\"object\"==typeof b&&b),b.isTrigger=e?2:3,b.namespace=r.join(\".\"),b.namespace_re=b.namespace?new RegExp(\"(^|\\\\.)\"+r.join(\"\\\\.(?:.*\\\\.|)\")+\"(\\\\.|$)\"):null,b.result=void 0,b.target||(b.target=d),c=null==c?[b]:n.makeArray(c,[b]),o=n.event.special[q]||{},e||!o.trigger||o.trigger.apply(d,c)!==!1)){if(!e&&!o.noBubble&&!n.isWindow(d)){for(i=o.delegateType||q,X.test(i+q)||(g=g.parentNode);g;g=g.parentNode)p.push(g),h=g;h===(d.ownerDocument||l)&&p.push(h.defaultView||h.parentWindow||a)}f=0;while((g=p[f++])&&!b.isPropagationStopped())b.type=f>1?i:o.bindType||q,m=(L.get(g,\"events\")||{})[b.type]&&L.get(g,\"handle\"),m&&m.apply(g,c),m=k&&g[k],m&&m.apply&&n.acceptData(g)&&(b.result=m.apply(g,c),b.result===!1&&b.preventDefault());return b.type=q,e||b.isDefaultPrevented()||o._default&&o._default.apply(p.pop(),c)!==!1||!n.acceptData(d)||k&&n.isFunction(d[q])&&!n.isWindow(d)&&(h=d[k],h&&(d[k]=null),n.event.triggered=q,d[q](),n.event.triggered=void 0,h&&(d[k]=h)),b.result}},dispatch:function(a){a=n.event.fix(a);var b,c,e,f,g,h=[],i=d.call(arguments),j=(L.get(this,\"events\")||{})[a.type]||[],k=n.event.special[a.type]||{};if(i[0]=a,a.delegateTarget=this,!k.preDispatch||k.preDispatch.call(this,a)!==!1){h=n.event.handlers.call(this,a,j),b=0;while((f=h[b++])&&!a.isPropagationStopped()){a.currentTarget=f.elem,c=0;while((g=f.handlers[c++])&&!a.isImmediatePropagationStopped())(!a.namespace_re||a.namespace_re.test(g.namespace))&&(a.handleObj=g,a.data=g.data,e=((n.event.special[g.origType]||{}).handle||g.handler).apply(f.elem,i),void 0!==e&&(a.result=e)===!1&&(a.preventDefault(),a.stopPropagation()))}return k.postDispatch&&k.postDispatch.call(this,a),a.result}},handlers:function(a,b){var c,d,e,f,g=[],h=b.delegateCount,i=a.target;if(h&&i.nodeType&&(!a.button||\"click\"!==a.type))for(;i!==this;i=i.parentNode||this)if(i.disabled!==!0||\"click\"!==a.type){for(d=[],c=0;h>c;c++)f=b[c],e=f.selector+\" \",void 0===d[e]&&(d[e]=f.needsContext?n(e,this).index(i)>=0:n.find(e,this,null,[i]).length),d[e]&&d.push(f);d.length&&g.push({elem:i,handlers:d})}return h<b.length&&g.push({elem:this,handlers:b.slice(h)}),g},props:\"altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which\".split(\" \"),fixHooks:{},keyHooks:{props:\"char charCode key keyCode\".split(\" \"),filter:function(a,b){return null==a.which&&(a.which=null!=b.charCode?b.charCode:b.keyCode),a}},mouseHooks:{props:\"button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement\".split(\" \"),filter:function(a,b){var c,d,e,f=b.button;return null==a.pageX&&null!=b.clientX&&(c=a.target.ownerDocument||l,d=c.documentElement,e=c.body,a.pageX=b.clientX+(d&&d.scrollLeft||e&&e.scrollLeft||0)-(d&&d.clientLeft||e&&e.clientLeft||0),a.pageY=b.clientY+(d&&d.scrollTop||e&&e.scrollTop||0)-(d&&d.clientTop||e&&e.clientTop||0)),a.which||void 0===f||(a.which=1&f?1:2&f?3:4&f?2:0),a}},fix:function(a){if(a[n.expando])return a;var b,c,d,e=a.type,f=a,g=this.fixHooks[e];g||(this.fixHooks[e]=g=W.test(e)?this.mouseHooks:V.test(e)?this.keyHooks:{}),d=g.props?this.props.concat(g.props):this.props,a=new n.Event(f),b=d.length;while(b--)c=d[b],a[c]=f[c];return a.target||(a.target=l),3===a.target.nodeType&&(a.target=a.target.parentNode),g.filter?g.filter(a,f):a},special:{load:{noBubble:!0},focus:{trigger:function(){return this!==_()&&this.focus?(this.focus(),!1):void 0},delegateType:\"focusin\"},blur:{trigger:function(){return this===_()&&this.blur?(this.blur(),!1):void 0},delegateType:\"focusout\"},click:{trigger:function(){return\"checkbox\"===this.type&&this.click&&n.nodeName(this,\"input\")?(this.click(),!1):void 0},_default:function(a){return n.nodeName(a.target,\"a\")}},beforeunload:{postDispatch:function(a){void 0!==a.result&&a.originalEvent&&(a.originalEvent.returnValue=a.result)}}},simulate:function(a,b,c,d){var e=n.extend(new n.Event,c,{type:a,isSimulated:!0,originalEvent:{}});d?n.event.trigger(e,null,b):n.event.dispatch.call(b,e),e.isDefaultPrevented()&&c.preventDefault()}},n.removeEvent=function(a,b,c){a.removeEventListener&&a.removeEventListener(b,c,!1)},n.Event=function(a,b){return this instanceof n.Event?(a&&a.type?(this.originalEvent=a,this.type=a.type,this.isDefaultPrevented=a.defaultPrevented||void 0===a.defaultPrevented&&a.returnValue===!1?Z:$):this.type=a,b&&n.extend(this,b),this.timeStamp=a&&a.timeStamp||n.now(),void(this[n.expando]=!0)):new n.Event(a,b)},n.Event.prototype={isDefaultPrevented:$,isPropagationStopped:$,isImmediatePropagationStopped:$,preventDefault:function(){var a=this.originalEvent;this.isDefaultPrevented=Z,a&&a.preventDefault&&a.preventDefault()},stopPropagation:function(){var a=this.originalEvent;this.isPropagationStopped=Z,a&&a.stopPropagation&&a.stopPropagation()},stopImmediatePropagation:function(){var a=this.originalEvent;this.isImmediatePropagationStopped=Z,a&&a.stopImmediatePropagation&&a.stopImmediatePropagation(),this.stopPropagation()}},n.each({mouseenter:\"mouseover\",mouseleave:\"mouseout\",pointerenter:\"pointerover\",pointerleave:\"pointerout\"},function(a,b){n.event.special[a]={delegateType:b,bindType:b,handle:function(a){var c,d=this,e=a.relatedTarget,f=a.handleObj;return(!e||e!==d&&!n.contains(d,e))&&(a.type=f.origType,c=f.handler.apply(this,arguments),a.type=b),c}}}),k.focusinBubbles||n.each({focus:\"focusin\",blur:\"focusout\"},function(a,b){var c=function(a){n.event.simulate(b,a.target,n.event.fix(a),!0)};n.event.special[b]={setup:function(){var d=this.ownerDocument||this,e=L.access(d,b);e||d.addEventListener(a,c,!0),L.access(d,b,(e||0)+1)},teardown:function(){var d=this.ownerDocument||this,e=L.access(d,b)-1;e?L.access(d,b,e):(d.removeEventListener(a,c,!0),L.remove(d,b))}}}),n.fn.extend({on:function(a,b,c,d,e){var f,g;if(\"object\"==typeof a){\"string\"!=typeof b&&(c=c||b,b=void 0);for(g in a)this.on(g,b,c,a[g],e);return this}if(null==c&&null==d?(d=b,c=b=void 0):null==d&&(\"string\"==typeof b?(d=c,c=void 0):(d=c,c=b,b=void 0)),d===!1)d=$;else if(!d)return this;return 1===e&&(f=d,d=function(a){return n().off(a),f.apply(this,arguments)},d.guid=f.guid||(f.guid=n.guid++)),this.each(function(){n.event.add(this,a,d,c,b)})},one:function(a,b,c,d){return this.on(a,b,c,d,1)},off:function(a,b,c){var d,e;if(a&&a.preventDefault&&a.handleObj)return d=a.handleObj,n(a.delegateTarget).off(d.namespace?d.origType+\".\"+d.namespace:d.origType,d.selector,d.handler),this;if(\"object\"==typeof a){for(e in a)this.off(e,b,a[e]);return this}return(b===!1||\"function\"==typeof b)&&(c=b,b=void 0),c===!1&&(c=$),this.each(function(){n.event.remove(this,a,c,b)})},trigger:function(a,b){return this.each(function(){n.event.trigger(a,b,this)})},triggerHandler:function(a,b){var c=this[0];return c?n.event.trigger(a,b,c,!0):void 0}});var ab=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi,bb=/<([\\w:]+)/,cb=/<|&#?\\w+;/,db=/<(?:script|style|link)/i,eb=/checked\\s*(?:[^=]|=\\s*.checked.)/i,fb=/^$|\\/(?:java|ecma)script/i,gb=/^true\\/(.*)/,hb=/^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g,ib={option:[1,\"<select multiple='multiple'>\",\"</select>\"],thead:[1,\"<table>\",\"</table>\"],col:[2,\"<table><colgroup>\",\"</colgroup></table>\"],tr:[2,\"<table><tbody>\",\"</tbody></table>\"],td:[3,\"<table><tbody><tr>\",\"</tr></tbody></table>\"],_default:[0,\"\",\"\"]};ib.optgroup=ib.option,ib.tbody=ib.tfoot=ib.colgroup=ib.caption=ib.thead,ib.th=ib.td;function jb(a,b){return n.nodeName(a,\"table\")&&n.nodeName(11!==b.nodeType?b:b.firstChild,\"tr\")?a.getElementsByTagName(\"tbody\")[0]||a.appendChild(a.ownerDocument.createElement(\"tbody\")):a}function kb(a){return a.type=(null!==a.getAttribute(\"type\"))+\"/\"+a.type,a}function lb(a){var b=gb.exec(a.type);return b?a.type=b[1]:a.removeAttribute(\"type\"),a}function mb(a,b){for(var c=0,d=a.length;d>c;c++)L.set(a[c],\"globalEval\",!b||L.get(b[c],\"globalEval\"))}function nb(a,b){var c,d,e,f,g,h,i,j;if(1===b.nodeType){if(L.hasData(a)&&(f=L.access(a),g=L.set(b,f),j=f.events)){delete g.handle,g.events={};for(e in j)for(c=0,d=j[e].length;d>c;c++)n.event.add(b,e,j[e][c])}M.hasData(a)&&(h=M.access(a),i=n.extend({},h),M.set(b,i))}}function ob(a,b){var c=a.getElementsByTagName?a.getElementsByTagName(b||\"*\"):a.querySelectorAll?a.querySelectorAll(b||\"*\"):[];return void 0===b||b&&n.nodeName(a,b)?n.merge([a],c):c}function pb(a,b){var c=b.nodeName.toLowerCase();\"input\"===c&&T.test(a.type)?b.checked=a.checked:(\"input\"===c||\"textarea\"===c)&&(b.defaultValue=a.defaultValue)}n.extend({clone:function(a,b,c){var d,e,f,g,h=a.cloneNode(!0),i=n.contains(a.ownerDocument,a);if(!(k.noCloneChecked||1!==a.nodeType&&11!==a.nodeType||n.isXMLDoc(a)))for(g=ob(h),f=ob(a),d=0,e=f.length;e>d;d++)pb(f[d],g[d]);if(b)if(c)for(f=f||ob(a),g=g||ob(h),d=0,e=f.length;e>d;d++)nb(f[d],g[d]);else nb(a,h);return g=ob(h,\"script\"),g.length>0&&mb(g,!i&&ob(a,\"script\")),h},buildFragment:function(a,b,c,d){for(var e,f,g,h,i,j,k=b.createDocumentFragment(),l=[],m=0,o=a.length;o>m;m++)if(e=a[m],e||0===e)if(\"object\"===n.type(e))n.merge(l,e.nodeType?[e]:e);else if(cb.test(e)){f=f||k.appendChild(b.createElement(\"div\")),g=(bb.exec(e)||[\"\",\"\"])[1].toLowerCase(),h=ib[g]||ib._default,f.innerHTML=h[1]+e.replace(ab,\"<$1></$2>\")+h[2],j=h[0];while(j--)f=f.lastChild;n.merge(l,f.childNodes),f=k.firstChild,f.textContent=\"\"}else l.push(b.createTextNode(e));k.textContent=\"\",m=0;while(e=l[m++])if((!d||-1===n.inArray(e,d))&&(i=n.contains(e.ownerDocument,e),f=ob(k.appendChild(e),\"script\"),i&&mb(f),c)){j=0;while(e=f[j++])fb.test(e.type||\"\")&&c.push(e)}return k},cleanData:function(a){for(var b,c,d,e,f=n.event.special,g=0;void 0!==(c=a[g]);g++){if(n.acceptData(c)&&(e=c[L.expando],e&&(b=L.cache[e]))){if(b.events)for(d in b.events)f[d]?n.event.remove(c,d):n.removeEvent(c,d,b.handle);L.cache[e]&&delete L.cache[e]}delete M.cache[c[M.expando]]}}}),n.fn.extend({text:function(a){return J(this,function(a){return void 0===a?n.text(this):this.empty().each(function(){(1===this.nodeType||11===this.nodeType||9===this.nodeType)&&(this.textContent=a)})},null,a,arguments.length)},append:function(){return this.domManip(arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=jb(this,a);b.appendChild(a)}})},prepend:function(){return this.domManip(arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=jb(this,a);b.insertBefore(a,b.firstChild)}})},before:function(){return this.domManip(arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this)})},after:function(){return this.domManip(arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this.nextSibling)})},remove:function(a,b){for(var c,d=a?n.filter(a,this):this,e=0;null!=(c=d[e]);e++)b||1!==c.nodeType||n.cleanData(ob(c)),c.parentNode&&(b&&n.contains(c.ownerDocument,c)&&mb(ob(c,\"script\")),c.parentNode.removeChild(c));return this},empty:function(){for(var a,b=0;null!=(a=this[b]);b++)1===a.nodeType&&(n.cleanData(ob(a,!1)),a.textContent=\"\");return this},clone:function(a,b){return a=null==a?!1:a,b=null==b?a:b,this.map(function(){return n.clone(this,a,b)})},html:function(a){return J(this,function(a){var b=this[0]||{},c=0,d=this.length;if(void 0===a&&1===b.nodeType)return b.innerHTML;if(\"string\"==typeof a&&!db.test(a)&&!ib[(bb.exec(a)||[\"\",\"\"])[1].toLowerCase()]){a=a.replace(ab,\"<$1></$2>\");try{for(;d>c;c++)b=this[c]||{},1===b.nodeType&&(n.cleanData(ob(b,!1)),b.innerHTML=a);b=0}catch(e){}}b&&this.empty().append(a)},null,a,arguments.length)},replaceWith:function(){var a=arguments[0];return this.domManip(arguments,function(b){a=this.parentNode,n.cleanData(ob(this)),a&&a.replaceChild(b,this)}),a&&(a.length||a.nodeType)?this:this.remove()},detach:function(a){return this.remove(a,!0)},domManip:function(a,b){a=e.apply([],a);var c,d,f,g,h,i,j=0,l=this.length,m=this,o=l-1,p=a[0],q=n.isFunction(p);if(q||l>1&&\"string\"==typeof p&&!k.checkClone&&eb.test(p))return this.each(function(c){var d=m.eq(c);q&&(a[0]=p.call(this,c,d.html())),d.domManip(a,b)});if(l&&(c=n.buildFragment(a,this[0].ownerDocument,!1,this),d=c.firstChild,1===c.childNodes.length&&(c=d),d)){for(f=n.map(ob(c,\"script\"),kb),g=f.length;l>j;j++)h=c,j!==o&&(h=n.clone(h,!0,!0),g&&n.merge(f,ob(h,\"script\"))),b.call(this[j],h,j);if(g)for(i=f[f.length-1].ownerDocument,n.map(f,lb),j=0;g>j;j++)h=f[j],fb.test(h.type||\"\")&&!L.access(h,\"globalEval\")&&n.contains(i,h)&&(h.src?n._evalUrl&&n._evalUrl(h.src):n.globalEval(h.textContent.replace(hb,\"\")))}return this}}),n.each({appendTo:\"append\",prependTo:\"prepend\",insertBefore:\"before\",insertAfter:\"after\",replaceAll:\"replaceWith\"},function(a,b){n.fn[a]=function(a){for(var c,d=[],e=n(a),g=e.length-1,h=0;g>=h;h++)c=h===g?this:this.clone(!0),n(e[h])[b](c),f.apply(d,c.get());return this.pushStack(d)}});var qb,rb={};function sb(b,c){var d,e=n(c.createElement(b)).appendTo(c.body),f=a.getDefaultComputedStyle&&(d=a.getDefaultComputedStyle(e[0]))?d.display:n.css(e[0],\"display\");return e.detach(),f}function tb(a){var b=l,c=rb[a];return c||(c=sb(a,b),\"none\"!==c&&c||(qb=(qb||n(\"<iframe frameborder='0' width='0' height='0'/>\")).appendTo(b.documentElement),b=qb[0].contentDocument,b.write(),b.close(),c=sb(a,b),qb.detach()),rb[a]=c),c}var ub=/^margin/,vb=new RegExp(\"^(\"+Q+\")(?!px)[a-z%]+$\",\"i\"),wb=function(a){return a.ownerDocument.defaultView.getComputedStyle(a,null)};function xb(a,b,c){var d,e,f,g,h=a.style;return c=c||wb(a),c&&(g=c.getPropertyValue(b)||c[b]),c&&(\"\"!==g||n.contains(a.ownerDocument,a)||(g=n.style(a,b)),vb.test(g)&&ub.test(b)&&(d=h.width,e=h.minWidth,f=h.maxWidth,h.minWidth=h.maxWidth=h.width=g,g=c.width,h.width=d,h.minWidth=e,h.maxWidth=f)),void 0!==g?g+\"\":g}function yb(a,b){return{get:function(){return a()?void delete this.get:(this.get=b).apply(this,arguments)}}}!function(){var b,c,d=l.documentElement,e=l.createElement(\"div\"),f=l.createElement(\"div\");if(f.style){f.style.backgroundClip=\"content-box\",f.cloneNode(!0).style.backgroundClip=\"\",k.clearCloneStyle=\"content-box\"===f.style.backgroundClip,e.style.cssText=\"border:0;width:0;height:0;top:0;left:-9999px;margin-top:1px;position:absolute\",e.appendChild(f);function g(){f.style.cssText=\"-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;display:block;margin-top:1%;top:1%;border:1px;padding:1px;width:4px;position:absolute\",f.innerHTML=\"\",d.appendChild(e);var g=a.getComputedStyle(f,null);b=\"1%\"!==g.top,c=\"4px\"===g.width,d.removeChild(e)}a.getComputedStyle&&n.extend(k,{pixelPosition:function(){return g(),b},boxSizingReliable:function(){return null==c&&g(),c},reliableMarginRight:function(){var b,c=f.appendChild(l.createElement(\"div\"));return c.style.cssText=f.style.cssText=\"-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0\",c.style.marginRight=c.style.width=\"0\",f.style.width=\"1px\",d.appendChild(e),b=!parseFloat(a.getComputedStyle(c,null).marginRight),d.removeChild(e),b}})}}(),n.swap=function(a,b,c,d){var e,f,g={};for(f in b)g[f]=a.style[f],a.style[f]=b[f];e=c.apply(a,d||[]);for(f in b)a.style[f]=g[f];return e};var zb=/^(none|table(?!-c[ea]).+)/,Ab=new RegExp(\"^(\"+Q+\")(.*)$\",\"i\"),Bb=new RegExp(\"^([+-])=(\"+Q+\")\",\"i\"),Cb={position:\"absolute\",visibility:\"hidden\",display:\"block\"},Db={letterSpacing:\"0\",fontWeight:\"400\"},Eb=[\"Webkit\",\"O\",\"Moz\",\"ms\"];function Fb(a,b){if(b in a)return b;var c=b[0].toUpperCase()+b.slice(1),d=b,e=Eb.length;while(e--)if(b=Eb[e]+c,b in a)return b;return d}function Gb(a,b,c){var d=Ab.exec(b);return d?Math.max(0,d[1]-(c||0))+(d[2]||\"px\"):b}function Hb(a,b,c,d,e){for(var f=c===(d?\"border\":\"content\")?4:\"width\"===b?1:0,g=0;4>f;f+=2)\"margin\"===c&&(g+=n.css(a,c+R[f],!0,e)),d?(\"content\"===c&&(g-=n.css(a,\"padding\"+R[f],!0,e)),\"margin\"!==c&&(g-=n.css(a,\"border\"+R[f]+\"Width\",!0,e))):(g+=n.css(a,\"padding\"+R[f],!0,e),\"padding\"!==c&&(g+=n.css(a,\"border\"+R[f]+\"Width\",!0,e)));return g}function Ib(a,b,c){var d=!0,e=\"width\"===b?a.offsetWidth:a.offsetHeight,f=wb(a),g=\"border-box\"===n.css(a,\"boxSizing\",!1,f);if(0>=e||null==e){if(e=xb(a,b,f),(0>e||null==e)&&(e=a.style[b]),vb.test(e))return e;d=g&&(k.boxSizingReliable()||e===a.style[b]),e=parseFloat(e)||0}return e+Hb(a,b,c||(g?\"border\":\"content\"),d,f)+\"px\"}function Jb(a,b){for(var c,d,e,f=[],g=0,h=a.length;h>g;g++)d=a[g],d.style&&(f[g]=L.get(d,\"olddisplay\"),c=d.style.display,b?(f[g]||\"none\"!==c||(d.style.display=\"\"),\"\"===d.style.display&&S(d)&&(f[g]=L.access(d,\"olddisplay\",tb(d.nodeName)))):(e=S(d),\"none\"===c&&e||L.set(d,\"olddisplay\",e?c:n.css(d,\"display\"))));for(g=0;h>g;g++)d=a[g],d.style&&(b&&\"none\"!==d.style.display&&\"\"!==d.style.display||(d.style.display=b?f[g]||\"\":\"none\"));return a}n.extend({cssHooks:{opacity:{get:function(a,b){if(b){var c=xb(a,\"opacity\");return\"\"===c?\"1\":c}}}},cssNumber:{columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{\"float\":\"cssFloat\"},style:function(a,b,c,d){if(a&&3!==a.nodeType&&8!==a.nodeType&&a.style){var e,f,g,h=n.camelCase(b),i=a.style;return b=n.cssProps[h]||(n.cssProps[h]=Fb(i,h)),g=n.cssHooks[b]||n.cssHooks[h],void 0===c?g&&\"get\"in g&&void 0!==(e=g.get(a,!1,d))?e:i[b]:(f=typeof c,\"string\"===f&&(e=Bb.exec(c))&&(c=(e[1]+1)*e[2]+parseFloat(n.css(a,b)),f=\"number\"),null!=c&&c===c&&(\"number\"!==f||n.cssNumber[h]||(c+=\"px\"),k.clearCloneStyle||\"\"!==c||0!==b.indexOf(\"background\")||(i[b]=\"inherit\"),g&&\"set\"in g&&void 0===(c=g.set(a,c,d))||(i[b]=c)),void 0)}},css:function(a,b,c,d){var e,f,g,h=n.camelCase(b);return b=n.cssProps[h]||(n.cssProps[h]=Fb(a.style,h)),g=n.cssHooks[b]||n.cssHooks[h],g&&\"get\"in g&&(e=g.get(a,!0,c)),void 0===e&&(e=xb(a,b,d)),\"normal\"===e&&b in Db&&(e=Db[b]),\"\"===c||c?(f=parseFloat(e),c===!0||n.isNumeric(f)?f||0:e):e}}),n.each([\"height\",\"width\"],function(a,b){n.cssHooks[b]={get:function(a,c,d){return c?zb.test(n.css(a,\"display\"))&&0===a.offsetWidth?n.swap(a,Cb,function(){return Ib(a,b,d)}):Ib(a,b,d):void 0},set:function(a,c,d){var e=d&&wb(a);return Gb(a,c,d?Hb(a,b,d,\"border-box\"===n.css(a,\"boxSizing\",!1,e),e):0)}}}),n.cssHooks.marginRight=yb(k.reliableMarginRight,function(a,b){return b?n.swap(a,{display:\"inline-block\"},xb,[a,\"marginRight\"]):void 0}),n.each({margin:\"\",padding:\"\",border:\"Width\"},function(a,b){n.cssHooks[a+b]={expand:function(c){for(var d=0,e={},f=\"string\"==typeof c?c.split(\" \"):[c];4>d;d++)e[a+R[d]+b]=f[d]||f[d-2]||f[0];return e}},ub.test(a)||(n.cssHooks[a+b].set=Gb)}),n.fn.extend({css:function(a,b){return J(this,function(a,b,c){var d,e,f={},g=0;if(n.isArray(b)){for(d=wb(a),e=b.length;e>g;g++)f[b[g]]=n.css(a,b[g],!1,d);return f}return void 0!==c?n.style(a,b,c):n.css(a,b)},a,b,arguments.length>1)},show:function(){return Jb(this,!0)},hide:function(){return Jb(this)},toggle:function(a){return\"boolean\"==typeof a?a?this.show():this.hide():this.each(function(){S(this)?n(this).show():n(this).hide()})}});function Kb(a,b,c,d,e){return new Kb.prototype.init(a,b,c,d,e)}n.Tween=Kb,Kb.prototype={constructor:Kb,init:function(a,b,c,d,e,f){this.elem=a,this.prop=c,this.easing=e||\"swing\",this.options=b,this.start=this.now=this.cur(),this.end=d,this.unit=f||(n.cssNumber[c]?\"\":\"px\")},cur:function(){var a=Kb.propHooks[this.prop];return a&&a.get?a.get(this):Kb.propHooks._default.get(this)},run:function(a){var b,c=Kb.propHooks[this.prop];return this.pos=b=this.options.duration?n.easing[this.easing](a,this.options.duration*a,0,1,this.options.duration):a,this.now=(this.end-this.start)*b+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),c&&c.set?c.set(this):Kb.propHooks._default.set(this),this}},Kb.prototype.init.prototype=Kb.prototype,Kb.propHooks={_default:{get:function(a){var b;return null==a.elem[a.prop]||a.elem.style&&null!=a.elem.style[a.prop]?(b=n.css(a.elem,a.prop,\"\"),b&&\"auto\"!==b?b:0):a.elem[a.prop]},set:function(a){n.fx.step[a.prop]?n.fx.step[a.prop](a):a.elem.style&&(null!=a.elem.style[n.cssProps[a.prop]]||n.cssHooks[a.prop])?n.style(a.elem,a.prop,a.now+a.unit):a.elem[a.prop]=a.now}}},Kb.propHooks.scrollTop=Kb.propHooks.scrollLeft={set:function(a){a.elem.nodeType&&a.elem.parentNode&&(a.elem[a.prop]=a.now)}},n.easing={linear:function(a){return a},swing:function(a){return.5-Math.cos(a*Math.PI)/2}},n.fx=Kb.prototype.init,n.fx.step={};var Lb,Mb,Nb=/^(?:toggle|show|hide)$/,Ob=new RegExp(\"^(?:([+-])=|)(\"+Q+\")([a-z%]*)$\",\"i\"),Pb=/queueHooks$/,Qb=[Vb],Rb={\"*\":[function(a,b){var c=this.createTween(a,b),d=c.cur(),e=Ob.exec(b),f=e&&e[3]||(n.cssNumber[a]?\"\":\"px\"),g=(n.cssNumber[a]||\"px\"!==f&&+d)&&Ob.exec(n.css(c.elem,a)),h=1,i=20;if(g&&g[3]!==f){f=f||g[3],e=e||[],g=+d||1;do h=h||\".5\",g/=h,n.style(c.elem,a,g+f);while(h!==(h=c.cur()/d)&&1!==h&&--i)}return e&&(g=c.start=+g||+d||0,c.unit=f,c.end=e[1]?g+(e[1]+1)*e[2]:+e[2]),c}]};function Sb(){return setTimeout(function(){Lb=void 0}),Lb=n.now()}function Tb(a,b){var c,d=0,e={height:a};for(b=b?1:0;4>d;d+=2-b)c=R[d],e[\"margin\"+c]=e[\"padding\"+c]=a;return b&&(e.opacity=e.width=a),e}function Ub(a,b,c){for(var d,e=(Rb[b]||[]).concat(Rb[\"*\"]),f=0,g=e.length;g>f;f++)if(d=e[f].call(c,b,a))return d}function Vb(a,b,c){var d,e,f,g,h,i,j,k,l=this,m={},o=a.style,p=a.nodeType&&S(a),q=L.get(a,\"fxshow\");c.queue||(h=n._queueHooks(a,\"fx\"),null==h.unqueued&&(h.unqueued=0,i=h.empty.fire,h.empty.fire=function(){h.unqueued||i()}),h.unqueued++,l.always(function(){l.always(function(){h.unqueued--,n.queue(a,\"fx\").length||h.empty.fire()})})),1===a.nodeType&&(\"height\"in b||\"width\"in b)&&(c.overflow=[o.overflow,o.overflowX,o.overflowY],j=n.css(a,\"display\"),k=\"none\"===j?L.get(a,\"olddisplay\")||tb(a.nodeName):j,\"inline\"===k&&\"none\"===n.css(a,\"float\")&&(o.display=\"inline-block\")),c.overflow&&(o.overflow=\"hidden\",l.always(function(){o.overflow=c.overflow[0],o.overflowX=c.overflow[1],o.overflowY=c.overflow[2]}));for(d in b)if(e=b[d],Nb.exec(e)){if(delete b[d],f=f||\"toggle\"===e,e===(p?\"hide\":\"show\")){if(\"show\"!==e||!q||void 0===q[d])continue;p=!0}m[d]=q&&q[d]||n.style(a,d)}else j=void 0;if(n.isEmptyObject(m))\"inline\"===(\"none\"===j?tb(a.nodeName):j)&&(o.display=j);else{q?\"hidden\"in q&&(p=q.hidden):q=L.access(a,\"fxshow\",{}),f&&(q.hidden=!p),p?n(a).show():l.done(function(){n(a).hide()}),l.done(function(){var b;L.remove(a,\"fxshow\");for(b in m)n.style(a,b,m[b])});for(d in m)g=Ub(p?q[d]:0,d,l),d in q||(q[d]=g.start,p&&(g.end=g.start,g.start=\"width\"===d||\"height\"===d?1:0))}}function Wb(a,b){var c,d,e,f,g;for(c in a)if(d=n.camelCase(c),e=b[d],f=a[c],n.isArray(f)&&(e=f[1],f=a[c]=f[0]),c!==d&&(a[d]=f,delete a[c]),g=n.cssHooks[d],g&&\"expand\"in g){f=g.expand(f),delete a[d];for(c in f)c in a||(a[c]=f[c],b[c]=e)}else b[d]=e}function Xb(a,b,c){var d,e,f=0,g=Qb.length,h=n.Deferred().always(function(){delete i.elem}),i=function(){if(e)return!1;for(var b=Lb||Sb(),c=Math.max(0,j.startTime+j.duration-b),d=c/j.duration||0,f=1-d,g=0,i=j.tweens.length;i>g;g++)j.tweens[g].run(f);return h.notifyWith(a,[j,f,c]),1>f&&i?c:(h.resolveWith(a,[j]),!1)},j=h.promise({elem:a,props:n.extend({},b),opts:n.extend(!0,{specialEasing:{}},c),originalProperties:b,originalOptions:c,startTime:Lb||Sb(),duration:c.duration,tweens:[],createTween:function(b,c){var d=n.Tween(a,j.opts,b,c,j.opts.specialEasing[b]||j.opts.easing);return j.tweens.push(d),d},stop:function(b){var c=0,d=b?j.tweens.length:0;if(e)return this;for(e=!0;d>c;c++)j.tweens[c].run(1);return b?h.resolveWith(a,[j,b]):h.rejectWith(a,[j,b]),this}}),k=j.props;for(Wb(k,j.opts.specialEasing);g>f;f++)if(d=Qb[f].call(j,a,k,j.opts))return d;return n.map(k,Ub,j),n.isFunction(j.opts.start)&&j.opts.start.call(a,j),n.fx.timer(n.extend(i,{elem:a,anim:j,queue:j.opts.queue})),j.progress(j.opts.progress).done(j.opts.done,j.opts.complete).fail(j.opts.fail).always(j.opts.always)}n.Animation=n.extend(Xb,{tweener:function(a,b){n.isFunction(a)?(b=a,a=[\"*\"]):a=a.split(\" \");for(var c,d=0,e=a.length;e>d;d++)c=a[d],Rb[c]=Rb[c]||[],Rb[c].unshift(b)},prefilter:function(a,b){b?Qb.unshift(a):Qb.push(a)}}),n.speed=function(a,b,c){var d=a&&\"object\"==typeof a?n.extend({},a):{complete:c||!c&&b||n.isFunction(a)&&a,duration:a,easing:c&&b||b&&!n.isFunction(b)&&b};return d.duration=n.fx.off?0:\"number\"==typeof d.duration?d.duration:d.duration in n.fx.speeds?n.fx.speeds[d.duration]:n.fx.speeds._default,(null==d.queue||d.queue===!0)&&(d.queue=\"fx\"),d.old=d.complete,d.complete=function(){n.isFunction(d.old)&&d.old.call(this),d.queue&&n.dequeue(this,d.queue)},d},n.fn.extend({fadeTo:function(a,b,c,d){return this.filter(S).css(\"opacity\",0).show().end().animate({opacity:b},a,c,d)},animate:function(a,b,c,d){var e=n.isEmptyObject(a),f=n.speed(b,c,d),g=function(){var b=Xb(this,n.extend({},a),f);(e||L.get(this,\"finish\"))&&b.stop(!0)};return g.finish=g,e||f.queue===!1?this.each(g):this.queue(f.queue,g)},stop:function(a,b,c){var d=function(a){var b=a.stop;delete a.stop,b(c)};return\"string\"!=typeof a&&(c=b,b=a,a=void 0),b&&a!==!1&&this.queue(a||\"fx\",[]),this.each(function(){var b=!0,e=null!=a&&a+\"queueHooks\",f=n.timers,g=L.get(this);if(e)g[e]&&g[e].stop&&d(g[e]);else for(e in g)g[e]&&g[e].stop&&Pb.test(e)&&d(g[e]);for(e=f.length;e--;)f[e].elem!==this||null!=a&&f[e].queue!==a||(f[e].anim.stop(c),b=!1,f.splice(e,1));(b||!c)&&n.dequeue(this,a)})},finish:function(a){return a!==!1&&(a=a||\"fx\"),this.each(function(){var b,c=L.get(this),d=c[a+\"queue\"],e=c[a+\"queueHooks\"],f=n.timers,g=d?d.length:0;for(c.finish=!0,n.queue(this,a,[]),e&&e.stop&&e.stop.call(this,!0),b=f.length;b--;)f[b].elem===this&&f[b].queue===a&&(f[b].anim.stop(!0),f.splice(b,1));for(b=0;g>b;b++)d[b]&&d[b].finish&&d[b].finish.call(this);delete c.finish})}}),n.each([\"toggle\",\"show\",\"hide\"],function(a,b){var c=n.fn[b];n.fn[b]=function(a,d,e){return null==a||\"boolean\"==typeof a?c.apply(this,arguments):this.animate(Tb(b,!0),a,d,e)}}),n.each({slideDown:Tb(\"show\"),slideUp:Tb(\"hide\"),slideToggle:Tb(\"toggle\"),fadeIn:{opacity:\"show\"},fadeOut:{opacity:\"hide\"},fadeToggle:{opacity:\"toggle\"}},function(a,b){n.fn[a]=function(a,c,d){return this.animate(b,a,c,d)}}),n.timers=[],n.fx.tick=function(){var a,b=0,c=n.timers;for(Lb=n.now();b<c.length;b++)a=c[b],a()||c[b]!==a||c.splice(b--,1);c.length||n.fx.stop(),Lb=void 0},n.fx.timer=function(a){n.timers.push(a),a()?n.fx.start():n.timers.pop()},n.fx.interval=13,n.fx.start=function(){Mb||(Mb=setInterval(n.fx.tick,n.fx.interval))},n.fx.stop=function(){clearInterval(Mb),Mb=null},n.fx.speeds={slow:600,fast:200,_default:400},n.fn.delay=function(a,b){return a=n.fx?n.fx.speeds[a]||a:a,b=b||\"fx\",this.queue(b,function(b,c){var d=setTimeout(b,a);c.stop=function(){clearTimeout(d)}})},function(){var a=l.createElement(\"input\"),b=l.createElement(\"select\"),c=b.appendChild(l.createElement(\"option\"));a.type=\"checkbox\",k.checkOn=\"\"!==a.value,k.optSelected=c.selected,b.disabled=!0,k.optDisabled=!c.disabled,a=l.createElement(\"input\"),a.value=\"t\",a.type=\"radio\",k.radioValue=\"t\"===a.value}();var Yb,Zb,$b=n.expr.attrHandle;n.fn.extend({attr:function(a,b){return J(this,n.attr,a,b,arguments.length>1)},removeAttr:function(a){return this.each(function(){n.removeAttr(this,a)})}}),n.extend({attr:function(a,b,c){var d,e,f=a.nodeType;if(a&&3!==f&&8!==f&&2!==f)return typeof a.getAttribute===U?n.prop(a,b,c):(1===f&&n.isXMLDoc(a)||(b=b.toLowerCase(),d=n.attrHooks[b]||(n.expr.match.bool.test(b)?Zb:Yb)),void 0===c?d&&\"get\"in d&&null!==(e=d.get(a,b))?e:(e=n.find.attr(a,b),null==e?void 0:e):null!==c?d&&\"set\"in d&&void 0!==(e=d.set(a,c,b))?e:(a.setAttribute(b,c+\"\"),c):void n.removeAttr(a,b))\n    4: },removeAttr:function(a,b){var c,d,e=0,f=b&&b.match(E);if(f&&1===a.nodeType)while(c=f[e++])d=n.propFix[c]||c,n.expr.match.bool.test(c)&&(a[d]=!1),a.removeAttribute(c)},attrHooks:{type:{set:function(a,b){if(!k.radioValue&&\"radio\"===b&&n.nodeName(a,\"input\")){var c=a.value;return a.setAttribute(\"type\",b),c&&(a.value=c),b}}}}}),Zb={set:function(a,b,c){return b===!1?n.removeAttr(a,c):a.setAttribute(c,c),c}},n.each(n.expr.match.bool.source.match(/\\w+/g),function(a,b){var c=$b[b]||n.find.attr;$b[b]=function(a,b,d){var e,f;return d||(f=$b[b],$b[b]=e,e=null!=c(a,b,d)?b.toLowerCase():null,$b[b]=f),e}});var _b=/^(?:input|select|textarea|button)$/i;n.fn.extend({prop:function(a,b){return J(this,n.prop,a,b,arguments.length>1)},removeProp:function(a){return this.each(function(){delete this[n.propFix[a]||a]})}}),n.extend({propFix:{\"for\":\"htmlFor\",\"class\":\"className\"},prop:function(a,b,c){var d,e,f,g=a.nodeType;if(a&&3!==g&&8!==g&&2!==g)return f=1!==g||!n.isXMLDoc(a),f&&(b=n.propFix[b]||b,e=n.propHooks[b]),void 0!==c?e&&\"set\"in e&&void 0!==(d=e.set(a,c,b))?d:a[b]=c:e&&\"get\"in e&&null!==(d=e.get(a,b))?d:a[b]},propHooks:{tabIndex:{get:function(a){return a.hasAttribute(\"tabindex\")||_b.test(a.nodeName)||a.href?a.tabIndex:-1}}}}),k.optSelected||(n.propHooks.selected={get:function(a){var b=a.parentNode;return b&&b.parentNode&&b.parentNode.selectedIndex,null}}),n.each([\"tabIndex\",\"readOnly\",\"maxLength\",\"cellSpacing\",\"cellPadding\",\"rowSpan\",\"colSpan\",\"useMap\",\"frameBorder\",\"contentEditable\"],function(){n.propFix[this.toLowerCase()]=this});var ac=/[\\t\\r\\n\\f]/g;n.fn.extend({addClass:function(a){var b,c,d,e,f,g,h=\"string\"==typeof a&&a,i=0,j=this.length;if(n.isFunction(a))return this.each(function(b){n(this).addClass(a.call(this,b,this.className))});if(h)for(b=(a||\"\").match(E)||[];j>i;i++)if(c=this[i],d=1===c.nodeType&&(c.className?(\" \"+c.className+\" \").replace(ac,\" \"):\" \")){f=0;while(e=b[f++])d.indexOf(\" \"+e+\" \")<0&&(d+=e+\" \");g=n.trim(d),c.className!==g&&(c.className=g)}return this},removeClass:function(a){var b,c,d,e,f,g,h=0===arguments.length||\"string\"==typeof a&&a,i=0,j=this.length;if(n.isFunction(a))return this.each(function(b){n(this).removeClass(a.call(this,b,this.className))});if(h)for(b=(a||\"\").match(E)||[];j>i;i++)if(c=this[i],d=1===c.nodeType&&(c.className?(\" \"+c.className+\" \").replace(ac,\" \"):\"\")){f=0;while(e=b[f++])while(d.indexOf(\" \"+e+\" \")>=0)d=d.replace(\" \"+e+\" \",\" \");g=a?n.trim(d):\"\",c.className!==g&&(c.className=g)}return this},toggleClass:function(a,b){var c=typeof a;return\"boolean\"==typeof b&&\"string\"===c?b?this.addClass(a):this.removeClass(a):this.each(n.isFunction(a)?function(c){n(this).toggleClass(a.call(this,c,this.className,b),b)}:function(){if(\"string\"===c){var b,d=0,e=n(this),f=a.match(E)||[];while(b=f[d++])e.hasClass(b)?e.removeClass(b):e.addClass(b)}else(c===U||\"boolean\"===c)&&(this.className&&L.set(this,\"__className__\",this.className),this.className=this.className||a===!1?\"\":L.get(this,\"__className__\")||\"\")})},hasClass:function(a){for(var b=\" \"+a+\" \",c=0,d=this.length;d>c;c++)if(1===this[c].nodeType&&(\" \"+this[c].className+\" \").replace(ac,\" \").indexOf(b)>=0)return!0;return!1}});var bc=/\\r/g;n.fn.extend({val:function(a){var b,c,d,e=this[0];{if(arguments.length)return d=n.isFunction(a),this.each(function(c){var e;1===this.nodeType&&(e=d?a.call(this,c,n(this).val()):a,null==e?e=\"\":\"number\"==typeof e?e+=\"\":n.isArray(e)&&(e=n.map(e,function(a){return null==a?\"\":a+\"\"})),b=n.valHooks[this.type]||n.valHooks[this.nodeName.toLowerCase()],b&&\"set\"in b&&void 0!==b.set(this,e,\"value\")||(this.value=e))});if(e)return b=n.valHooks[e.type]||n.valHooks[e.nodeName.toLowerCase()],b&&\"get\"in b&&void 0!==(c=b.get(e,\"value\"))?c:(c=e.value,\"string\"==typeof c?c.replace(bc,\"\"):null==c?\"\":c)}}}),n.extend({valHooks:{option:{get:function(a){var b=n.find.attr(a,\"value\");return null!=b?b:n.trim(n.text(a))}},select:{get:function(a){for(var b,c,d=a.options,e=a.selectedIndex,f=\"select-one\"===a.type||0>e,g=f?null:[],h=f?e+1:d.length,i=0>e?h:f?e:0;h>i;i++)if(c=d[i],!(!c.selected&&i!==e||(k.optDisabled?c.disabled:null!==c.getAttribute(\"disabled\"))||c.parentNode.disabled&&n.nodeName(c.parentNode,\"optgroup\"))){if(b=n(c).val(),f)return b;g.push(b)}return g},set:function(a,b){var c,d,e=a.options,f=n.makeArray(b),g=e.length;while(g--)d=e[g],(d.selected=n.inArray(d.value,f)>=0)&&(c=!0);return c||(a.selectedIndex=-1),f}}}}),n.each([\"radio\",\"checkbox\"],function(){n.valHooks[this]={set:function(a,b){return n.isArray(b)?a.checked=n.inArray(n(a).val(),b)>=0:void 0}},k.checkOn||(n.valHooks[this].get=function(a){return null===a.getAttribute(\"value\")?\"on\":a.value})}),n.each(\"blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu\".split(\" \"),function(a,b){n.fn[b]=function(a,c){return arguments.length>0?this.on(b,null,a,c):this.trigger(b)}}),n.fn.extend({hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)},bind:function(a,b,c){return this.on(a,null,b,c)},unbind:function(a,b){return this.off(a,null,b)},delegate:function(a,b,c,d){return this.on(b,a,c,d)},undelegate:function(a,b,c){return 1===arguments.length?this.off(a,\"**\"):this.off(b,a||\"**\",c)}});var cc=n.now(),dc=/\\?/;n.parseJSON=function(a){return JSON.parse(a+\"\")},n.parseXML=function(a){var b,c;if(!a||\"string\"!=typeof a)return null;try{c=new DOMParser,b=c.parseFromString(a,\"text/xml\")}catch(d){b=void 0}return(!b||b.getElementsByTagName(\"parsererror\").length)&&n.error(\"Invalid XML: \"+a),b};var ec,fc,gc=/#.*$/,hc=/([?&])_=[^&]*/,ic=/^(.*?):[ \\t]*([^\\r\\n]*)$/gm,jc=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,kc=/^(?:GET|HEAD)$/,lc=/^\\/\\//,mc=/^([\\w.+-]+:)(?:\\/\\/(?:[^\\/?#]*@|)([^\\/?#:]*)(?::(\\d+)|)|)/,nc={},oc={},pc=\"*/\".concat(\"*\");try{fc=location.href}catch(qc){fc=l.createElement(\"a\"),fc.href=\"\",fc=fc.href}ec=mc.exec(fc.toLowerCase())||[];function rc(a){return function(b,c){\"string\"!=typeof b&&(c=b,b=\"*\");var d,e=0,f=b.toLowerCase().match(E)||[];if(n.isFunction(c))while(d=f[e++])\"+\"===d[0]?(d=d.slice(1)||\"*\",(a[d]=a[d]||[]).unshift(c)):(a[d]=a[d]||[]).push(c)}}function sc(a,b,c,d){var e={},f=a===oc;function g(h){var i;return e[h]=!0,n.each(a[h]||[],function(a,h){var j=h(b,c,d);return\"string\"!=typeof j||f||e[j]?f?!(i=j):void 0:(b.dataTypes.unshift(j),g(j),!1)}),i}return g(b.dataTypes[0])||!e[\"*\"]&&g(\"*\")}function tc(a,b){var c,d,e=n.ajaxSettings.flatOptions||{};for(c in b)void 0!==b[c]&&((e[c]?a:d||(d={}))[c]=b[c]);return d&&n.extend(!0,a,d),a}function uc(a,b,c){var d,e,f,g,h=a.contents,i=a.dataTypes;while(\"*\"===i[0])i.shift(),void 0===d&&(d=a.mimeType||b.getResponseHeader(\"Content-Type\"));if(d)for(e in h)if(h[e]&&h[e].test(d)){i.unshift(e);break}if(i[0]in c)f=i[0];else{for(e in c){if(!i[0]||a.converters[e+\" \"+i[0]]){f=e;break}g||(g=e)}f=f||g}return f?(f!==i[0]&&i.unshift(f),c[f]):void 0}function vc(a,b,c,d){var e,f,g,h,i,j={},k=a.dataTypes.slice();if(k[1])for(g in a.converters)j[g.toLowerCase()]=a.converters[g];f=k.shift();while(f)if(a.responseFields[f]&&(c[a.responseFields[f]]=b),!i&&d&&a.dataFilter&&(b=a.dataFilter(b,a.dataType)),i=f,f=k.shift())if(\"*\"===f)f=i;else if(\"*\"!==i&&i!==f){if(g=j[i+\" \"+f]||j[\"* \"+f],!g)for(e in j)if(h=e.split(\" \"),h[1]===f&&(g=j[i+\" \"+h[0]]||j[\"* \"+h[0]])){g===!0?g=j[e]:j[e]!==!0&&(f=h[0],k.unshift(h[1]));break}if(g!==!0)if(g&&a[\"throws\"])b=g(b);else try{b=g(b)}catch(l){return{state:\"parsererror\",error:g?l:\"No conversion from \"+i+\" to \"+f}}}return{state:\"success\",data:b}}n.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:fc,type:\"GET\",isLocal:jc.test(ec[1]),global:!0,processData:!0,async:!0,contentType:\"application/x-www-form-urlencoded; charset=UTF-8\",accepts:{\"*\":pc,text:\"text/plain\",html:\"text/html\",xml:\"application/xml, text/xml\",json:\"application/json, text/javascript\"},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:\"responseXML\",text:\"responseText\",json:\"responseJSON\"},converters:{\"* text\":String,\"text html\":!0,\"text json\":n.parseJSON,\"text xml\":n.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(a,b){return b?tc(tc(a,n.ajaxSettings),b):tc(n.ajaxSettings,a)},ajaxPrefilter:rc(nc),ajaxTransport:rc(oc),ajax:function(a,b){\"object\"==typeof a&&(b=a,a=void 0),b=b||{};var c,d,e,f,g,h,i,j,k=n.ajaxSetup({},b),l=k.context||k,m=k.context&&(l.nodeType||l.jquery)?n(l):n.event,o=n.Deferred(),p=n.Callbacks(\"once memory\"),q=k.statusCode||{},r={},s={},t=0,u=\"canceled\",v={readyState:0,getResponseHeader:function(a){var b;if(2===t){if(!f){f={};while(b=ic.exec(e))f[b[1].toLowerCase()]=b[2]}b=f[a.toLowerCase()]}return null==b?null:b},getAllResponseHeaders:function(){return 2===t?e:null},setRequestHeader:function(a,b){var c=a.toLowerCase();return t||(a=s[c]=s[c]||a,r[a]=b),this},overrideMimeType:function(a){return t||(k.mimeType=a),this},statusCode:function(a){var b;if(a)if(2>t)for(b in a)q[b]=[q[b],a[b]];else v.always(a[v.status]);return this},abort:function(a){var b=a||u;return c&&c.abort(b),x(0,b),this}};if(o.promise(v).complete=p.add,v.success=v.done,v.error=v.fail,k.url=((a||k.url||fc)+\"\").replace(gc,\"\").replace(lc,ec[1]+\"//\"),k.type=b.method||b.type||k.method||k.type,k.dataTypes=n.trim(k.dataType||\"*\").toLowerCase().match(E)||[\"\"],null==k.crossDomain&&(h=mc.exec(k.url.toLowerCase()),k.crossDomain=!(!h||h[1]===ec[1]&&h[2]===ec[2]&&(h[3]||(\"http:\"===h[1]?\"80\":\"443\"))===(ec[3]||(\"http:\"===ec[1]?\"80\":\"443\")))),k.data&&k.processData&&\"string\"!=typeof k.data&&(k.data=n.param(k.data,k.traditional)),sc(nc,k,b,v),2===t)return v;i=k.global,i&&0===n.active++&&n.event.trigger(\"ajaxStart\"),k.type=k.type.toUpperCase(),k.hasContent=!kc.test(k.type),d=k.url,k.hasContent||(k.data&&(d=k.url+=(dc.test(d)?\"&\":\"?\")+k.data,delete k.data),k.cache===!1&&(k.url=hc.test(d)?d.replace(hc,\"$1_=\"+cc++):d+(dc.test(d)?\"&\":\"?\")+\"_=\"+cc++)),k.ifModified&&(n.lastModified[d]&&v.setRequestHeader(\"If-Modified-Since\",n.lastModified[d]),n.etag[d]&&v.setRequestHeader(\"If-None-Match\",n.etag[d])),(k.data&&k.hasContent&&k.contentType!==!1||b.contentType)&&v.setRequestHeader(\"Content-Type\",k.contentType),v.setRequestHeader(\"Accept\",k.dataTypes[0]&&k.accepts[k.dataTypes[0]]?k.accepts[k.dataTypes[0]]+(\"*\"!==k.dataTypes[0]?\", \"+pc+\"; q=0.01\":\"\"):k.accepts[\"*\"]);for(j in k.headers)v.setRequestHeader(j,k.headers[j]);if(k.beforeSend&&(k.beforeSend.call(l,v,k)===!1||2===t))return v.abort();u=\"abort\";for(j in{success:1,error:1,complete:1})v[j](k[j]);if(c=sc(oc,k,b,v)){v.readyState=1,i&&m.trigger(\"ajaxSend\",[v,k]),k.async&&k.timeout>0&&(g=setTimeout(function(){v.abort(\"timeout\")},k.timeout));try{t=1,c.send(r,x)}catch(w){if(!(2>t))throw w;x(-1,w)}}else x(-1,\"No Transport\");function x(a,b,f,h){var j,r,s,u,w,x=b;2!==t&&(t=2,g&&clearTimeout(g),c=void 0,e=h||\"\",v.readyState=a>0?4:0,j=a>=200&&300>a||304===a,f&&(u=uc(k,v,f)),u=vc(k,u,v,j),j?(k.ifModified&&(w=v.getResponseHeader(\"Last-Modified\"),w&&(n.lastModified[d]=w),w=v.getResponseHeader(\"etag\"),w&&(n.etag[d]=w)),204===a||\"HEAD\"===k.type?x=\"nocontent\":304===a?x=\"notmodified\":(x=u.state,r=u.data,s=u.error,j=!s)):(s=x,(a||!x)&&(x=\"error\",0>a&&(a=0))),v.status=a,v.statusText=(b||x)+\"\",j?o.resolveWith(l,[r,x,v]):o.rejectWith(l,[v,x,s]),v.statusCode(q),q=void 0,i&&m.trigger(j?\"ajaxSuccess\":\"ajaxError\",[v,k,j?r:s]),p.fireWith(l,[v,x]),i&&(m.trigger(\"ajaxComplete\",[v,k]),--n.active||n.event.trigger(\"ajaxStop\")))}return v},getJSON:function(a,b,c){return n.get(a,b,c,\"json\")},getScript:function(a,b){return n.get(a,void 0,b,\"script\")}}),n.each([\"get\",\"post\"],function(a,b){n[b]=function(a,c,d,e){return n.isFunction(c)&&(e=e||d,d=c,c=void 0),n.ajax({url:a,type:b,dataType:e,data:c,success:d})}}),n.each([\"ajaxStart\",\"ajaxStop\",\"ajaxComplete\",\"ajaxError\",\"ajaxSuccess\",\"ajaxSend\"],function(a,b){n.fn[b]=function(a){return this.on(b,a)}}),n._evalUrl=function(a){return n.ajax({url:a,type:\"GET\",dataType:\"script\",async:!1,global:!1,\"throws\":!0})},n.fn.extend({wrapAll:function(a){var b;return n.isFunction(a)?this.each(function(b){n(this).wrapAll(a.call(this,b))}):(this[0]&&(b=n(a,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&b.insertBefore(this[0]),b.map(function(){var a=this;while(a.firstElementChild)a=a.firstElementChild;return a}).append(this)),this)},wrapInner:function(a){return this.each(n.isFunction(a)?function(b){n(this).wrapInner(a.call(this,b))}:function(){var b=n(this),c=b.contents();c.length?c.wrapAll(a):b.append(a)})},wrap:function(a){var b=n.isFunction(a);return this.each(function(c){n(this).wrapAll(b?a.call(this,c):a)})},unwrap:function(){return this.parent().each(function(){n.nodeName(this,\"body\")||n(this).replaceWith(this.childNodes)}).end()}}),n.expr.filters.hidden=function(a){return a.offsetWidth<=0&&a.offsetHeight<=0},n.expr.filters.visible=function(a){return!n.expr.filters.hidden(a)};var wc=/%20/g,xc=/\\[\\]$/,yc=/\\r?\\n/g,zc=/^(?:submit|button|image|reset|file)$/i,Ac=/^(?:input|select|textarea|keygen)/i;function Bc(a,b,c,d){var e;if(n.isArray(b))n.each(b,function(b,e){c||xc.test(a)?d(a,e):Bc(a+\"[\"+(\"object\"==typeof e?b:\"\")+\"]\",e,c,d)});else if(c||\"object\"!==n.type(b))d(a,b);else for(e in b)Bc(a+\"[\"+e+\"]\",b[e],c,d)}n.param=function(a,b){var c,d=[],e=function(a,b){b=n.isFunction(b)?b():null==b?\"\":b,d[d.length]=encodeURIComponent(a)+\"=\"+encodeURIComponent(b)};if(void 0===b&&(b=n.ajaxSettings&&n.ajaxSettings.traditional),n.isArray(a)||a.jquery&&!n.isPlainObject(a))n.each(a,function(){e(this.name,this.value)});else for(c in a)Bc(c,a[c],b,e);return d.join(\"&\").replace(wc,\"+\")},n.fn.extend({serialize:function(){return n.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var a=n.prop(this,\"elements\");return a?n.makeArray(a):this}).filter(function(){var a=this.type;return this.name&&!n(this).is(\":disabled\")&&Ac.test(this.nodeName)&&!zc.test(a)&&(this.checked||!T.test(a))}).map(function(a,b){var c=n(this).val();return null==c?null:n.isArray(c)?n.map(c,function(a){return{name:b.name,value:a.replace(yc,\"\\r\\n\")}}):{name:b.name,value:c.replace(yc,\"\\r\\n\")}}).get()}}),n.ajaxSettings.xhr=function(){try{return new XMLHttpRequest}catch(a){}};var Cc=0,Dc={},Ec={0:200,1223:204},Fc=n.ajaxSettings.xhr();a.ActiveXObject&&n(a).on(\"unload\",function(){for(var a in Dc)Dc[a]()}),k.cors=!!Fc&&\"withCredentials\"in Fc,k.ajax=Fc=!!Fc,n.ajaxTransport(function(a){var b;return k.cors||Fc&&!a.crossDomain?{send:function(c,d){var e,f=a.xhr(),g=++Cc;if(f.open(a.type,a.url,a.async,a.username,a.password),a.xhrFields)for(e in a.xhrFields)f[e]=a.xhrFields[e];a.mimeType&&f.overrideMimeType&&f.overrideMimeType(a.mimeType),a.crossDomain||c[\"X-Requested-With\"]||(c[\"X-Requested-With\"]=\"XMLHttpRequest\");for(e in c)f.setRequestHeader(e,c[e]);b=function(a){return function(){b&&(delete Dc[g],b=f.onload=f.onerror=null,\"abort\"===a?f.abort():\"error\"===a?d(f.status,f.statusText):d(Ec[f.status]||f.status,f.statusText,\"string\"==typeof f.responseText?{text:f.responseText}:void 0,f.getAllResponseHeaders()))}},f.onload=b(),f.onerror=b(\"error\"),b=Dc[g]=b(\"abort\");try{f.send(a.hasContent&&a.data||null)}catch(h){if(b)throw h}},abort:function(){b&&b()}}:void 0}),n.ajaxSetup({accepts:{script:\"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript\"},contents:{script:/(?:java|ecma)script/},converters:{\"text script\":function(a){return n.globalEval(a),a}}}),n.ajaxPrefilter(\"script\",function(a){void 0===a.cache&&(a.cache=!1),a.crossDomain&&(a.type=\"GET\")}),n.ajaxTransport(\"script\",function(a){if(a.crossDomain){var b,c;return{send:function(d,e){b=n(\"<script>\").prop({async:!0,charset:a.scriptCharset,src:a.url}).on(\"load error\",c=function(a){b.remove(),c=null,a&&e(\"error\"===a.type?404:200,a.type)}),l.head.appendChild(b[0])},abort:function(){c&&c()}}}});var Gc=[],Hc=/(=)\\?(?=&|$)|\\?\\?/;n.ajaxSetup({jsonp:\"callback\",jsonpCallback:function(){var a=Gc.pop()||n.expando+\"_\"+cc++;return this[a]=!0,a}}),n.ajaxPrefilter(\"json jsonp\",function(b,c,d){var e,f,g,h=b.jsonp!==!1&&(Hc.test(b.url)?\"url\":\"string\"==typeof b.data&&!(b.contentType||\"\").indexOf(\"application/x-www-form-urlencoded\")&&Hc.test(b.data)&&\"data\");return h||\"jsonp\"===b.dataTypes[0]?(e=b.jsonpCallback=n.isFunction(b.jsonpCallback)?b.jsonpCallback():b.jsonpCallback,h?b[h]=b[h].replace(Hc,\"$1\"+e):b.jsonp!==!1&&(b.url+=(dc.test(b.url)?\"&\":\"?\")+b.jsonp+\"=\"+e),b.converters[\"script json\"]=function(){return g||n.error(e+\" was not called\"),g[0]},b.dataTypes[0]=\"json\",f=a[e],a[e]=function(){g=arguments},d.always(function(){a[e]=f,b[e]&&(b.jsonpCallback=c.jsonpCallback,Gc.push(e)),g&&n.isFunction(f)&&f(g[0]),g=f=void 0}),\"script\"):void 0}),n.parseHTML=function(a,b,c){if(!a||\"string\"!=typeof a)return null;\"boolean\"==typeof b&&(c=b,b=!1),b=b||l;var d=v.exec(a),e=!c&&[];return d?[b.createElement(d[1])]:(d=n.buildFragment([a],b,e),e&&e.length&&n(e).remove(),n.merge([],d.childNodes))};var Ic=n.fn.load;n.fn.load=function(a,b,c){if(\"string\"!=typeof a&&Ic)return Ic.apply(this,arguments);var d,e,f,g=this,h=a.indexOf(\" \");return h>=0&&(d=n.trim(a.slice(h)),a=a.slice(0,h)),n.isFunction(b)?(c=b,b=void 0):b&&\"object\"==typeof b&&(e=\"POST\"),g.length>0&&n.ajax({url:a,type:e,dataType:\"html\",data:b}).done(function(a){f=arguments,g.html(d?n(\"<div>\").append(n.parseHTML(a)).find(d):a)}).complete(c&&function(a,b){g.each(c,f||[a.responseText,b,a])}),this},n.expr.filters.animated=function(a){return n.grep(n.timers,function(b){return a===b.elem}).length};var Jc=a.document.documentElement;function Kc(a){return n.isWindow(a)?a:9===a.nodeType&&a.defaultView}n.offset={setOffset:function(a,b,c){var d,e,f,g,h,i,j,k=n.css(a,\"position\"),l=n(a),m={};\"static\"===k&&(a.style.position=\"relative\"),h=l.offset(),f=n.css(a,\"top\"),i=n.css(a,\"left\"),j=(\"absolute\"===k||\"fixed\"===k)&&(f+i).indexOf(\"auto\")>-1,j?(d=l.position(),g=d.top,e=d.left):(g=parseFloat(f)||0,e=parseFloat(i)||0),n.isFunction(b)&&(b=b.call(a,c,h)),null!=b.top&&(m.top=b.top-h.top+g),null!=b.left&&(m.left=b.left-h.left+e),\"using\"in b?b.using.call(a,m):l.css(m)}},n.fn.extend({offset:function(a){if(arguments.length)return void 0===a?this:this.each(function(b){n.offset.setOffset(this,a,b)});var b,c,d=this[0],e={top:0,left:0},f=d&&d.ownerDocument;if(f)return b=f.documentElement,n.contains(b,d)?(typeof d.getBoundingClientRect!==U&&(e=d.getBoundingClientRect()),c=Kc(f),{top:e.top+c.pageYOffset-b.clientTop,left:e.left+c.pageXOffset-b.clientLeft}):e},position:function(){if(this[0]){var a,b,c=this[0],d={top:0,left:0};return\"fixed\"===n.css(c,\"position\")?b=c.getBoundingClientRect():(a=this.offsetParent(),b=this.offset(),n.nodeName(a[0],\"html\")||(d=a.offset()),d.top+=n.css(a[0],\"borderTopWidth\",!0),d.left+=n.css(a[0],\"borderLeftWidth\",!0)),{top:b.top-d.top-n.css(c,\"marginTop\",!0),left:b.left-d.left-n.css(c,\"marginLeft\",!0)}}},offsetParent:function(){return this.map(function(){var a=this.offsetParent||Jc;while(a&&!n.nodeName(a,\"html\")&&\"static\"===n.css(a,\"position\"))a=a.offsetParent;return a||Jc})}}),n.each({scrollLeft:\"pageXOffset\",scrollTop:\"pageYOffset\"},function(b,c){var d=\"pageYOffset\"===c;n.fn[b]=function(e){return J(this,function(b,e,f){var g=Kc(b);return void 0===f?g?g[c]:b[e]:void(g?g.scrollTo(d?a.pageXOffset:f,d?f:a.pageYOffset):b[e]=f)},b,e,arguments.length,null)}}),n.each([\"top\",\"left\"],function(a,b){n.cssHooks[b]=yb(k.pixelPosition,function(a,c){return c?(c=xb(a,b),vb.test(c)?n(a).position()[b]+\"px\":c):void 0})}),n.each({Height:\"height\",Width:\"width\"},function(a,b){n.each({padding:\"inner\"+a,content:b,\"\":\"outer\"+a},function(c,d){n.fn[d]=function(d,e){var f=arguments.length&&(c||\"boolean\"!=typeof d),g=c||(d===!0||e===!0?\"margin\":\"border\");return J(this,function(b,c,d){var e;return n.isWindow(b)?b.document.documentElement[\"client\"+a]:9===b.nodeType?(e=b.documentElement,Math.max(b.body[\"scroll\"+a],e[\"scroll\"+a],b.body[\"offset\"+a],e[\"offset\"+a],e[\"client\"+a])):void 0===d?n.css(b,c,g):n.style(b,c,d,g)},b,f?d:void 0,f,null)}})}),n.fn.size=function(){return this.length},n.fn.andSelf=n.fn.addBack,\"function\"==typeof define&&define.amd&&define(\"jquery\",[],function(){return n});var Lc=a.jQuery,Mc=a.$;return n.noConflict=function(b){return a.$===n&&(a.$=Mc),b&&a.jQuery===n&&(a.jQuery=Lc),n},typeof b===U&&(a.jQuery=a.$=n),n});\n    5  //# sourceMappingURL=jquery.min.map\n\n/Users/kirkcp/Documents/node_play/slatemail_dist/slatemail.app/Contents/Resources/app.nw/node_modules/jquery/dist/cdn/jquery-2.1.1.js:\n 8538  }\n 8539  \n 8540: support.cors = !!xhrSupported && ( \"withCredentials\" in xhrSupported );\n 8541  support.ajax = xhrSupported = !!xhrSupported;\n 8542  \n\n/Users/kirkcp/Documents/node_play/slatemail_dist/slatemail.app/Contents/Resources/app.nw/node_modules/jquery/dist/cdn/jquery-2.1.1.min.js:\n    2  !function(a,b){\"object\"==typeof module&&\"object\"==typeof module.exports?module.exports=a.document?b(a,!0):function(a){if(!a.document)throw new Error(\"jQuery requires a window with a document\");return b(a)}:b(a)}(\"undefined\"!=typeof window?window:this,function(a,b){var c=[],d=c.slice,e=c.concat,f=c.push,g=c.indexOf,h={},i=h.toString,j=h.hasOwnProperty,k={},l=a.document,m=\"2.1.1\",n=function(a,b){return new n.fn.init(a,b)},o=/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,p=/^-ms-/,q=/-([\\da-z])/gi,r=function(a,b){return b.toUpperCase()};n.fn=n.prototype={jquery:m,constructor:n,selector:\"\",length:0,toArray:function(){return d.call(this)},get:function(a){return null!=a?0>a?this[a+this.length]:this[a]:d.call(this)},pushStack:function(a){var b=n.merge(this.constructor(),a);return b.prevObject=this,b.context=this.context,b},each:function(a,b){return n.each(this,a,b)},map:function(a){return this.pushStack(n.map(this,function(b,c){return a.call(b,c,b)}))},slice:function(){return this.pushStack(d.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(a){var b=this.length,c=+a+(0>a?b:0);return this.pushStack(c>=0&&b>c?[this[c]]:[])},end:function(){return this.prevObject||this.constructor(null)},push:f,sort:c.sort,splice:c.splice},n.extend=n.fn.extend=function(){var a,b,c,d,e,f,g=arguments[0]||{},h=1,i=arguments.length,j=!1;for(\"boolean\"==typeof g&&(j=g,g=arguments[h]||{},h++),\"object\"==typeof g||n.isFunction(g)||(g={}),h===i&&(g=this,h--);i>h;h++)if(null!=(a=arguments[h]))for(b in a)c=g[b],d=a[b],g!==d&&(j&&d&&(n.isPlainObject(d)||(e=n.isArray(d)))?(e?(e=!1,f=c&&n.isArray(c)?c:[]):f=c&&n.isPlainObject(c)?c:{},g[b]=n.extend(j,f,d)):void 0!==d&&(g[b]=d));return g},n.extend({expando:\"jQuery\"+(m+Math.random()).replace(/\\D/g,\"\"),isReady:!0,error:function(a){throw new Error(a)},noop:function(){},isFunction:function(a){return\"function\"===n.type(a)},isArray:Array.isArray,isWindow:function(a){return null!=a&&a===a.window},isNumeric:function(a){return!n.isArray(a)&&a-parseFloat(a)>=0},isPlainObject:function(a){return\"object\"!==n.type(a)||a.nodeType||n.isWindow(a)?!1:a.constructor&&!j.call(a.constructor.prototype,\"isPrototypeOf\")?!1:!0},isEmptyObject:function(a){var b;for(b in a)return!1;return!0},type:function(a){return null==a?a+\"\":\"object\"==typeof a||\"function\"==typeof a?h[i.call(a)]||\"object\":typeof a},globalEval:function(a){var b,c=eval;a=n.trim(a),a&&(1===a.indexOf(\"use strict\")?(b=l.createElement(\"script\"),b.text=a,l.head.appendChild(b).parentNode.removeChild(b)):c(a))},camelCase:function(a){return a.replace(p,\"ms-\").replace(q,r)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toLowerCase()===b.toLowerCase()},each:function(a,b,c){var d,e=0,f=a.length,g=s(a);if(c){if(g){for(;f>e;e++)if(d=b.apply(a[e],c),d===!1)break}else for(e in a)if(d=b.apply(a[e],c),d===!1)break}else if(g){for(;f>e;e++)if(d=b.call(a[e],e,a[e]),d===!1)break}else for(e in a)if(d=b.call(a[e],e,a[e]),d===!1)break;return a},trim:function(a){return null==a?\"\":(a+\"\").replace(o,\"\")},makeArray:function(a,b){var c=b||[];return null!=a&&(s(Object(a))?n.merge(c,\"string\"==typeof a?[a]:a):f.call(c,a)),c},inArray:function(a,b,c){return null==b?-1:g.call(b,a,c)},merge:function(a,b){for(var c=+b.length,d=0,e=a.length;c>d;d++)a[e++]=b[d];return a.length=e,a},grep:function(a,b,c){for(var d,e=[],f=0,g=a.length,h=!c;g>f;f++)d=!b(a[f],f),d!==h&&e.push(a[f]);return e},map:function(a,b,c){var d,f=0,g=a.length,h=s(a),i=[];if(h)for(;g>f;f++)d=b(a[f],f,c),null!=d&&i.push(d);else for(f in a)d=b(a[f],f,c),null!=d&&i.push(d);return e.apply([],i)},guid:1,proxy:function(a,b){var c,e,f;return\"string\"==typeof b&&(c=a[b],b=a,a=c),n.isFunction(a)?(e=d.call(arguments,2),f=function(){return a.apply(b||this,e.concat(d.call(arguments)))},f.guid=a.guid=a.guid||n.guid++,f):void 0},now:Date.now,support:k}),n.each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"),function(a,b){h[\"[object \"+b+\"]\"]=b.toLowerCase()});function s(a){var b=a.length,c=n.type(a);return\"function\"===c||n.isWindow(a)?!1:1===a.nodeType&&b?!0:\"array\"===c||0===b||\"number\"==typeof b&&b>0&&b-1 in a}var t=function(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u=\"sizzle\"+-new Date,v=a.document,w=0,x=0,y=gb(),z=gb(),A=gb(),B=function(a,b){return a===b&&(l=!0),0},C=\"undefined\",D=1<<31,E={}.hasOwnProperty,F=[],G=F.pop,H=F.push,I=F.push,J=F.slice,K=F.indexOf||function(a){for(var b=0,c=this.length;c>b;b++)if(this[b]===a)return b;return-1},L=\"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",M=\"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",N=\"(?:\\\\\\\\.|[\\\\w-]|[^\\\\x00-\\\\xa0])+\",O=N.replace(\"w\",\"w#\"),P=\"\\\\[\"+M+\"*(\"+N+\")(?:\"+M+\"*([*^$|!~]?=)\"+M+\"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\"+O+\"))|)\"+M+\"*\\\\]\",Q=\":(\"+N+\")(?:\\\\((('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\"+P+\")*)|.*)\\\\)|)\",R=new RegExp(\"^\"+M+\"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\"+M+\"+$\",\"g\"),S=new RegExp(\"^\"+M+\"*,\"+M+\"*\"),T=new RegExp(\"^\"+M+\"*([>+~]|\"+M+\")\"+M+\"*\"),U=new RegExp(\"=\"+M+\"*([^\\\\]'\\\"]*?)\"+M+\"*\\\\]\",\"g\"),V=new RegExp(Q),W=new RegExp(\"^\"+O+\"$\"),X={ID:new RegExp(\"^#(\"+N+\")\"),CLASS:new RegExp(\"^\\\\.(\"+N+\")\"),TAG:new RegExp(\"^(\"+N.replace(\"w\",\"w*\")+\")\"),ATTR:new RegExp(\"^\"+P),PSEUDO:new RegExp(\"^\"+Q),CHILD:new RegExp(\"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\"+M+\"*(even|odd|(([+-]|)(\\\\d*)n|)\"+M+\"*(?:([+-]|)\"+M+\"*(\\\\d+)|))\"+M+\"*\\\\)|)\",\"i\"),bool:new RegExp(\"^(?:\"+L+\")$\",\"i\"),needsContext:new RegExp(\"^\"+M+\"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\"+M+\"*((?:-\\\\d)?\\\\d*)\"+M+\"*\\\\)|)(?=[^-]|$)\",\"i\")},Y=/^(?:input|select|textarea|button)$/i,Z=/^h\\d$/i,$=/^[^{]+\\{\\s*\\[native \\w/,_=/^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,ab=/[+~]/,bb=/'|\\\\/g,cb=new RegExp(\"\\\\\\\\([\\\\da-f]{1,6}\"+M+\"?|(\"+M+\")|.)\",\"ig\"),db=function(a,b,c){var d=\"0x\"+b-65536;return d!==d||c?b:0>d?String.fromCharCode(d+65536):String.fromCharCode(d>>10|55296,1023&d|56320)};try{I.apply(F=J.call(v.childNodes),v.childNodes),F[v.childNodes.length].nodeType}catch(eb){I={apply:F.length?function(a,b){H.apply(a,J.call(b))}:function(a,b){var c=a.length,d=0;while(a[c++]=b[d++]);a.length=c-1}}}function fb(a,b,d,e){var f,h,j,k,l,o,r,s,w,x;if((b?b.ownerDocument||b:v)!==n&&m(b),b=b||n,d=d||[],!a||\"string\"!=typeof a)return d;if(1!==(k=b.nodeType)&&9!==k)return[];if(p&&!e){if(f=_.exec(a))if(j=f[1]){if(9===k){if(h=b.getElementById(j),!h||!h.parentNode)return d;if(h.id===j)return d.push(h),d}else if(b.ownerDocument&&(h=b.ownerDocument.getElementById(j))&&t(b,h)&&h.id===j)return d.push(h),d}else{if(f[2])return I.apply(d,b.getElementsByTagName(a)),d;if((j=f[3])&&c.getElementsByClassName&&b.getElementsByClassName)return I.apply(d,b.getElementsByClassName(j)),d}if(c.qsa&&(!q||!q.test(a))){if(s=r=u,w=b,x=9===k&&a,1===k&&\"object\"!==b.nodeName.toLowerCase()){o=g(a),(r=b.getAttribute(\"id\"))?s=r.replace(bb,\"\\\\$&\"):b.setAttribute(\"id\",s),s=\"[id='\"+s+\"'] \",l=o.length;while(l--)o[l]=s+qb(o[l]);w=ab.test(a)&&ob(b.parentNode)||b,x=o.join(\",\")}if(x)try{return I.apply(d,w.querySelectorAll(x)),d}catch(y){}finally{r||b.removeAttribute(\"id\")}}}return i(a.replace(R,\"$1\"),b,d,e)}function gb(){var a=[];function b(c,e){return a.push(c+\" \")>d.cacheLength&&delete b[a.shift()],b[c+\" \"]=e}return b}function hb(a){return a[u]=!0,a}function ib(a){var b=n.createElement(\"div\");try{return!!a(b)}catch(c){return!1}finally{b.parentNode&&b.parentNode.removeChild(b),b=null}}function jb(a,b){var c=a.split(\"|\"),e=a.length;while(e--)d.attrHandle[c[e]]=b}function kb(a,b){var c=b&&a,d=c&&1===a.nodeType&&1===b.nodeType&&(~b.sourceIndex||D)-(~a.sourceIndex||D);if(d)return d;if(c)while(c=c.nextSibling)if(c===b)return-1;return a?1:-1}function lb(a){return function(b){var c=b.nodeName.toLowerCase();return\"input\"===c&&b.type===a}}function mb(a){return function(b){var c=b.nodeName.toLowerCase();return(\"input\"===c||\"button\"===c)&&b.type===a}}function nb(a){return hb(function(b){return b=+b,hb(function(c,d){var e,f=a([],c.length,b),g=f.length;while(g--)c[e=f[g]]&&(c[e]=!(d[e]=c[e]))})})}function ob(a){return a&&typeof a.getElementsByTagName!==C&&a}c=fb.support={},f=fb.isXML=function(a){var b=a&&(a.ownerDocument||a).documentElement;return b?\"HTML\"!==b.nodeName:!1},m=fb.setDocument=function(a){var b,e=a?a.ownerDocument||a:v,g=e.defaultView;return e!==n&&9===e.nodeType&&e.documentElement?(n=e,o=e.documentElement,p=!f(e),g&&g!==g.top&&(g.addEventListener?g.addEventListener(\"unload\",function(){m()},!1):g.attachEvent&&g.attachEvent(\"onunload\",function(){m()})),c.attributes=ib(function(a){return a.className=\"i\",!a.getAttribute(\"className\")}),c.getElementsByTagName=ib(function(a){return a.appendChild(e.createComment(\"\")),!a.getElementsByTagName(\"*\").length}),c.getElementsByClassName=$.test(e.getElementsByClassName)&&ib(function(a){return a.innerHTML=\"<div class='a'></div><div class='a i'></div>\",a.firstChild.className=\"i\",2===a.getElementsByClassName(\"i\").length}),c.getById=ib(function(a){return o.appendChild(a).id=u,!e.getElementsByName||!e.getElementsByName(u).length}),c.getById?(d.find.ID=function(a,b){if(typeof b.getElementById!==C&&p){var c=b.getElementById(a);return c&&c.parentNode?[c]:[]}},d.filter.ID=function(a){var b=a.replace(cb,db);return function(a){return a.getAttribute(\"id\")===b}}):(delete d.find.ID,d.filter.ID=function(a){var b=a.replace(cb,db);return function(a){var c=typeof a.getAttributeNode!==C&&a.getAttributeNode(\"id\");return c&&c.value===b}}),d.find.TAG=c.getElementsByTagName?function(a,b){return typeof b.getElementsByTagName!==C?b.getElementsByTagName(a):void 0}:function(a,b){var c,d=[],e=0,f=b.getElementsByTagName(a);if(\"*\"===a){while(c=f[e++])1===c.nodeType&&d.push(c);return d}return f},d.find.CLASS=c.getElementsByClassName&&function(a,b){return typeof b.getElementsByClassName!==C&&p?b.getElementsByClassName(a):void 0},r=[],q=[],(c.qsa=$.test(e.querySelectorAll))&&(ib(function(a){a.innerHTML=\"<select msallowclip=''><option selected=''></option></select>\",a.querySelectorAll(\"[msallowclip^='']\").length&&q.push(\"[*^$]=\"+M+\"*(?:''|\\\"\\\")\"),a.querySelectorAll(\"[selected]\").length||q.push(\"\\\\[\"+M+\"*(?:value|\"+L+\")\"),a.querySelectorAll(\":checked\").length||q.push(\":checked\")}),ib(function(a){var b=e.createElement(\"input\");b.setAttribute(\"type\",\"hidden\"),a.appendChild(b).setAttribute(\"name\",\"D\"),a.querySelectorAll(\"[name=d]\").length&&q.push(\"name\"+M+\"*[*^$|!~]?=\"),a.querySelectorAll(\":enabled\").length||q.push(\":enabled\",\":disabled\"),a.querySelectorAll(\"*,:x\"),q.push(\",.*:\")})),(c.matchesSelector=$.test(s=o.matches||o.webkitMatchesSelector||o.mozMatchesSelector||o.oMatchesSelector||o.msMatchesSelector))&&ib(function(a){c.disconnectedMatch=s.call(a,\"div\"),s.call(a,\"[s!='']:x\"),r.push(\"!=\",Q)}),q=q.length&&new RegExp(q.join(\"|\")),r=r.length&&new RegExp(r.join(\"|\")),b=$.test(o.compareDocumentPosition),t=b||$.test(o.contains)?function(a,b){var c=9===a.nodeType?a.documentElement:a,d=b&&b.parentNode;return a===d||!(!d||1!==d.nodeType||!(c.contains?c.contains(d):a.compareDocumentPosition&&16&a.compareDocumentPosition(d)))}:function(a,b){if(b)while(b=b.parentNode)if(b===a)return!0;return!1},B=b?function(a,b){if(a===b)return l=!0,0;var d=!a.compareDocumentPosition-!b.compareDocumentPosition;return d?d:(d=(a.ownerDocument||a)===(b.ownerDocument||b)?a.compareDocumentPosition(b):1,1&d||!c.sortDetached&&b.compareDocumentPosition(a)===d?a===e||a.ownerDocument===v&&t(v,a)?-1:b===e||b.ownerDocument===v&&t(v,b)?1:k?K.call(k,a)-K.call(k,b):0:4&d?-1:1)}:function(a,b){if(a===b)return l=!0,0;var c,d=0,f=a.parentNode,g=b.parentNode,h=[a],i=[b];if(!f||!g)return a===e?-1:b===e?1:f?-1:g?1:k?K.call(k,a)-K.call(k,b):0;if(f===g)return kb(a,b);c=a;while(c=c.parentNode)h.unshift(c);c=b;while(c=c.parentNode)i.unshift(c);while(h[d]===i[d])d++;return d?kb(h[d],i[d]):h[d]===v?-1:i[d]===v?1:0},e):n},fb.matches=function(a,b){return fb(a,null,null,b)},fb.matchesSelector=function(a,b){if((a.ownerDocument||a)!==n&&m(a),b=b.replace(U,\"='$1']\"),!(!c.matchesSelector||!p||r&&r.test(b)||q&&q.test(b)))try{var d=s.call(a,b);if(d||c.disconnectedMatch||a.document&&11!==a.document.nodeType)return d}catch(e){}return fb(b,n,null,[a]).length>0},fb.contains=function(a,b){return(a.ownerDocument||a)!==n&&m(a),t(a,b)},fb.attr=function(a,b){(a.ownerDocument||a)!==n&&m(a);var e=d.attrHandle[b.toLowerCase()],f=e&&E.call(d.attrHandle,b.toLowerCase())?e(a,b,!p):void 0;return void 0!==f?f:c.attributes||!p?a.getAttribute(b):(f=a.getAttributeNode(b))&&f.specified?f.value:null},fb.error=function(a){throw new Error(\"Syntax error, unrecognized expression: \"+a)},fb.uniqueSort=function(a){var b,d=[],e=0,f=0;if(l=!c.detectDuplicates,k=!c.sortStable&&a.slice(0),a.sort(B),l){while(b=a[f++])b===a[f]&&(e=d.push(f));while(e--)a.splice(d[e],1)}return k=null,a},e=fb.getText=function(a){var b,c=\"\",d=0,f=a.nodeType;if(f){if(1===f||9===f||11===f){if(\"string\"==typeof a.textContent)return a.textContent;for(a=a.firstChild;a;a=a.nextSibling)c+=e(a)}else if(3===f||4===f)return a.nodeValue}else while(b=a[d++])c+=e(b);return c},d=fb.selectors={cacheLength:50,createPseudo:hb,match:X,attrHandle:{},find:{},relative:{\">\":{dir:\"parentNode\",first:!0},\" \":{dir:\"parentNode\"},\"+\":{dir:\"previousSibling\",first:!0},\"~\":{dir:\"previousSibling\"}},preFilter:{ATTR:function(a){return a[1]=a[1].replace(cb,db),a[3]=(a[3]||a[4]||a[5]||\"\").replace(cb,db),\"~=\"===a[2]&&(a[3]=\" \"+a[3]+\" \"),a.slice(0,4)},CHILD:function(a){return a[1]=a[1].toLowerCase(),\"nth\"===a[1].slice(0,3)?(a[3]||fb.error(a[0]),a[4]=+(a[4]?a[5]+(a[6]||1):2*(\"even\"===a[3]||\"odd\"===a[3])),a[5]=+(a[7]+a[8]||\"odd\"===a[3])):a[3]&&fb.error(a[0]),a},PSEUDO:function(a){var b,c=!a[6]&&a[2];return X.CHILD.test(a[0])?null:(a[3]?a[2]=a[4]||a[5]||\"\":c&&V.test(c)&&(b=g(c,!0))&&(b=c.indexOf(\")\",c.length-b)-c.length)&&(a[0]=a[0].slice(0,b),a[2]=c.slice(0,b)),a.slice(0,3))}},filter:{TAG:function(a){var b=a.replace(cb,db).toLowerCase();return\"*\"===a?function(){return!0}:function(a){return a.nodeName&&a.nodeName.toLowerCase()===b}},CLASS:function(a){var b=y[a+\" \"];return b||(b=new RegExp(\"(^|\"+M+\")\"+a+\"(\"+M+\"|$)\"))&&y(a,function(a){return b.test(\"string\"==typeof a.className&&a.className||typeof a.getAttribute!==C&&a.getAttribute(\"class\")||\"\")})},ATTR:function(a,b,c){return function(d){var e=fb.attr(d,a);return null==e?\"!=\"===b:b?(e+=\"\",\"=\"===b?e===c:\"!=\"===b?e!==c:\"^=\"===b?c&&0===e.indexOf(c):\"*=\"===b?c&&e.indexOf(c)>-1:\"$=\"===b?c&&e.slice(-c.length)===c:\"~=\"===b?(\" \"+e+\" \").indexOf(c)>-1:\"|=\"===b?e===c||e.slice(0,c.length+1)===c+\"-\":!1):!0}},CHILD:function(a,b,c,d,e){var f=\"nth\"!==a.slice(0,3),g=\"last\"!==a.slice(-4),h=\"of-type\"===b;return 1===d&&0===e?function(a){return!!a.parentNode}:function(b,c,i){var j,k,l,m,n,o,p=f!==g?\"nextSibling\":\"previousSibling\",q=b.parentNode,r=h&&b.nodeName.toLowerCase(),s=!i&&!h;if(q){if(f){while(p){l=b;while(l=l[p])if(h?l.nodeName.toLowerCase()===r:1===l.nodeType)return!1;o=p=\"only\"===a&&!o&&\"nextSibling\"}return!0}if(o=[g?q.firstChild:q.lastChild],g&&s){k=q[u]||(q[u]={}),j=k[a]||[],n=j[0]===w&&j[1],m=j[0]===w&&j[2],l=n&&q.childNodes[n];while(l=++n&&l&&l[p]||(m=n=0)||o.pop())if(1===l.nodeType&&++m&&l===b){k[a]=[w,n,m];break}}else if(s&&(j=(b[u]||(b[u]={}))[a])&&j[0]===w)m=j[1];else while(l=++n&&l&&l[p]||(m=n=0)||o.pop())if((h?l.nodeName.toLowerCase()===r:1===l.nodeType)&&++m&&(s&&((l[u]||(l[u]={}))[a]=[w,m]),l===b))break;return m-=e,m===d||m%d===0&&m/d>=0}}},PSEUDO:function(a,b){var c,e=d.pseudos[a]||d.setFilters[a.toLowerCase()]||fb.error(\"unsupported pseudo: \"+a);return e[u]?e(b):e.length>1?(c=[a,a,\"\",b],d.setFilters.hasOwnProperty(a.toLowerCase())?hb(function(a,c){var d,f=e(a,b),g=f.length;while(g--)d=K.call(a,f[g]),a[d]=!(c[d]=f[g])}):function(a){return e(a,0,c)}):e}},pseudos:{not:hb(function(a){var b=[],c=[],d=h(a.replace(R,\"$1\"));return d[u]?hb(function(a,b,c,e){var f,g=d(a,null,e,[]),h=a.length;while(h--)(f=g[h])&&(a[h]=!(b[h]=f))}):function(a,e,f){return b[0]=a,d(b,null,f,c),!c.pop()}}),has:hb(function(a){return function(b){return fb(a,b).length>0}}),contains:hb(function(a){return function(b){return(b.textContent||b.innerText||e(b)).indexOf(a)>-1}}),lang:hb(function(a){return W.test(a||\"\")||fb.error(\"unsupported lang: \"+a),a=a.replace(cb,db).toLowerCase(),function(b){var c;do if(c=p?b.lang:b.getAttribute(\"xml:lang\")||b.getAttribute(\"lang\"))return c=c.toLowerCase(),c===a||0===c.indexOf(a+\"-\");while((b=b.parentNode)&&1===b.nodeType);return!1}}),target:function(b){var c=a.location&&a.location.hash;return c&&c.slice(1)===b.id},root:function(a){return a===o},focus:function(a){return a===n.activeElement&&(!n.hasFocus||n.hasFocus())&&!!(a.type||a.href||~a.tabIndex)},enabled:function(a){return a.disabled===!1},disabled:function(a){return a.disabled===!0},checked:function(a){var b=a.nodeName.toLowerCase();return\"input\"===b&&!!a.checked||\"option\"===b&&!!a.selected},selected:function(a){return a.parentNode&&a.parentNode.selectedIndex,a.selected===!0},empty:function(a){for(a=a.firstChild;a;a=a.nextSibling)if(a.nodeType<6)return!1;return!0},parent:function(a){return!d.pseudos.empty(a)},header:function(a){return Z.test(a.nodeName)},input:function(a){return Y.test(a.nodeName)},button:function(a){var b=a.nodeName.toLowerCase();return\"input\"===b&&\"button\"===a.type||\"button\"===b},text:function(a){var b;return\"input\"===a.nodeName.toLowerCase()&&\"text\"===a.type&&(null==(b=a.getAttribute(\"type\"))||\"text\"===b.toLowerCase())},first:nb(function(){return[0]}),last:nb(function(a,b){return[b-1]}),eq:nb(function(a,b,c){return[0>c?c+b:c]}),even:nb(function(a,b){for(var c=0;b>c;c+=2)a.push(c);return a}),odd:nb(function(a,b){for(var c=1;b>c;c+=2)a.push(c);return a}),lt:nb(function(a,b,c){for(var d=0>c?c+b:c;--d>=0;)a.push(d);return a}),gt:nb(function(a,b,c){for(var d=0>c?c+b:c;++d<b;)a.push(d);return a})}},d.pseudos.nth=d.pseudos.eq;for(b in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})d.pseudos[b]=lb(b);for(b in{submit:!0,reset:!0})d.pseudos[b]=mb(b);function pb(){}pb.prototype=d.filters=d.pseudos,d.setFilters=new pb,g=fb.tokenize=function(a,b){var c,e,f,g,h,i,j,k=z[a+\" \"];if(k)return b?0:k.slice(0);h=a,i=[],j=d.preFilter;while(h){(!c||(e=S.exec(h)))&&(e&&(h=h.slice(e[0].length)||h),i.push(f=[])),c=!1,(e=T.exec(h))&&(c=e.shift(),f.push({value:c,type:e[0].replace(R,\" \")}),h=h.slice(c.length));for(g in d.filter)!(e=X[g].exec(h))||j[g]&&!(e=j[g](e))||(c=e.shift(),f.push({value:c,type:g,matches:e}),h=h.slice(c.length));if(!c)break}return b?h.length:h?fb.error(a):z(a,i).slice(0)};function qb(a){for(var b=0,c=a.length,d=\"\";c>b;b++)d+=a[b].value;return d}function rb(a,b,c){var d=b.dir,e=c&&\"parentNode\"===d,f=x++;return b.first?function(b,c,f){while(b=b[d])if(1===b.nodeType||e)return a(b,c,f)}:function(b,c,g){var h,i,j=[w,f];if(g){while(b=b[d])if((1===b.nodeType||e)&&a(b,c,g))return!0}else while(b=b[d])if(1===b.nodeType||e){if(i=b[u]||(b[u]={}),(h=i[d])&&h[0]===w&&h[1]===f)return j[2]=h[2];if(i[d]=j,j[2]=a(b,c,g))return!0}}}function sb(a){return a.length>1?function(b,c,d){var e=a.length;while(e--)if(!a[e](b,c,d))return!1;return!0}:a[0]}function tb(a,b,c){for(var d=0,e=b.length;e>d;d++)fb(a,b[d],c);return c}function ub(a,b,c,d,e){for(var f,g=[],h=0,i=a.length,j=null!=b;i>h;h++)(f=a[h])&&(!c||c(f,d,e))&&(g.push(f),j&&b.push(h));return g}function vb(a,b,c,d,e,f){return d&&!d[u]&&(d=vb(d)),e&&!e[u]&&(e=vb(e,f)),hb(function(f,g,h,i){var j,k,l,m=[],n=[],o=g.length,p=f||tb(b||\"*\",h.nodeType?[h]:h,[]),q=!a||!f&&b?p:ub(p,m,a,h,i),r=c?e||(f?a:o||d)?[]:g:q;if(c&&c(q,r,h,i),d){j=ub(r,n),d(j,[],h,i),k=j.length;while(k--)(l=j[k])&&(r[n[k]]=!(q[n[k]]=l))}if(f){if(e||a){if(e){j=[],k=r.length;while(k--)(l=r[k])&&j.push(q[k]=l);e(null,r=[],j,i)}k=r.length;while(k--)(l=r[k])&&(j=e?K.call(f,l):m[k])>-1&&(f[j]=!(g[j]=l))}}else r=ub(r===g?r.splice(o,r.length):r),e?e(null,g,r,i):I.apply(g,r)})}function wb(a){for(var b,c,e,f=a.length,g=d.relative[a[0].type],h=g||d.relative[\" \"],i=g?1:0,k=rb(function(a){return a===b},h,!0),l=rb(function(a){return K.call(b,a)>-1},h,!0),m=[function(a,c,d){return!g&&(d||c!==j)||((b=c).nodeType?k(a,c,d):l(a,c,d))}];f>i;i++)if(c=d.relative[a[i].type])m=[rb(sb(m),c)];else{if(c=d.filter[a[i].type].apply(null,a[i].matches),c[u]){for(e=++i;f>e;e++)if(d.relative[a[e].type])break;return vb(i>1&&sb(m),i>1&&qb(a.slice(0,i-1).concat({value:\" \"===a[i-2].type?\"*\":\"\"})).replace(R,\"$1\"),c,e>i&&wb(a.slice(i,e)),f>e&&wb(a=a.slice(e)),f>e&&qb(a))}m.push(c)}return sb(m)}function xb(a,b){var c=b.length>0,e=a.length>0,f=function(f,g,h,i,k){var l,m,o,p=0,q=\"0\",r=f&&[],s=[],t=j,u=f||e&&d.find.TAG(\"*\",k),v=w+=null==t?1:Math.random()||.1,x=u.length;for(k&&(j=g!==n&&g);q!==x&&null!=(l=u[q]);q++){if(e&&l){m=0;while(o=a[m++])if(o(l,g,h)){i.push(l);break}k&&(w=v)}c&&((l=!o&&l)&&p--,f&&r.push(l))}if(p+=q,c&&q!==p){m=0;while(o=b[m++])o(r,s,g,h);if(f){if(p>0)while(q--)r[q]||s[q]||(s[q]=G.call(i));s=ub(s)}I.apply(i,s),k&&!f&&s.length>0&&p+b.length>1&&fb.uniqueSort(i)}return k&&(w=v,j=t),r};return c?hb(f):f}return h=fb.compile=function(a,b){var c,d=[],e=[],f=A[a+\" \"];if(!f){b||(b=g(a)),c=b.length;while(c--)f=wb(b[c]),f[u]?d.push(f):e.push(f);f=A(a,xb(e,d)),f.selector=a}return f},i=fb.select=function(a,b,e,f){var i,j,k,l,m,n=\"function\"==typeof a&&a,o=!f&&g(a=n.selector||a);if(e=e||[],1===o.length){if(j=o[0]=o[0].slice(0),j.length>2&&\"ID\"===(k=j[0]).type&&c.getById&&9===b.nodeType&&p&&d.relative[j[1].type]){if(b=(d.find.ID(k.matches[0].replace(cb,db),b)||[])[0],!b)return e;n&&(b=b.parentNode),a=a.slice(j.shift().value.length)}i=X.needsContext.test(a)?0:j.length;while(i--){if(k=j[i],d.relative[l=k.type])break;if((m=d.find[l])&&(f=m(k.matches[0].replace(cb,db),ab.test(j[0].type)&&ob(b.parentNode)||b))){if(j.splice(i,1),a=f.length&&qb(j),!a)return I.apply(e,f),e;break}}}return(n||h(a,o))(f,b,!p,e,ab.test(a)&&ob(b.parentNode)||b),e},c.sortStable=u.split(\"\").sort(B).join(\"\")===u,c.detectDuplicates=!!l,m(),c.sortDetached=ib(function(a){return 1&a.compareDocumentPosition(n.createElement(\"div\"))}),ib(function(a){return a.innerHTML=\"<a href='#'></a>\",\"#\"===a.firstChild.getAttribute(\"href\")})||jb(\"type|href|height|width\",function(a,b,c){return c?void 0:a.getAttribute(b,\"type\"===b.toLowerCase()?1:2)}),c.attributes&&ib(function(a){return a.innerHTML=\"<input/>\",a.firstChild.setAttribute(\"value\",\"\"),\"\"===a.firstChild.getAttribute(\"value\")})||jb(\"value\",function(a,b,c){return c||\"input\"!==a.nodeName.toLowerCase()?void 0:a.defaultValue}),ib(function(a){return null==a.getAttribute(\"disabled\")})||jb(L,function(a,b,c){var d;return c?void 0:a[b]===!0?b.toLowerCase():(d=a.getAttributeNode(b))&&d.specified?d.value:null}),fb}(a);n.find=t,n.expr=t.selectors,n.expr[\":\"]=n.expr.pseudos,n.unique=t.uniqueSort,n.text=t.getText,n.isXMLDoc=t.isXML,n.contains=t.contains;var u=n.expr.match.needsContext,v=/^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,w=/^.[^:#\\[\\.,]*$/;function x(a,b,c){if(n.isFunction(b))return n.grep(a,function(a,d){return!!b.call(a,d,a)!==c});if(b.nodeType)return n.grep(a,function(a){return a===b!==c});if(\"string\"==typeof b){if(w.test(b))return n.filter(b,a,c);b=n.filter(b,a)}return n.grep(a,function(a){return g.call(b,a)>=0!==c})}n.filter=function(a,b,c){var d=b[0];return c&&(a=\":not(\"+a+\")\"),1===b.length&&1===d.nodeType?n.find.matchesSelector(d,a)?[d]:[]:n.find.matches(a,n.grep(b,function(a){return 1===a.nodeType}))},n.fn.extend({find:function(a){var b,c=this.length,d=[],e=this;if(\"string\"!=typeof a)return this.pushStack(n(a).filter(function(){for(b=0;c>b;b++)if(n.contains(e[b],this))return!0}));for(b=0;c>b;b++)n.find(a,e[b],d);return d=this.pushStack(c>1?n.unique(d):d),d.selector=this.selector?this.selector+\" \"+a:a,d},filter:function(a){return this.pushStack(x(this,a||[],!1))},not:function(a){return this.pushStack(x(this,a||[],!0))},is:function(a){return!!x(this,\"string\"==typeof a&&u.test(a)?n(a):a||[],!1).length}});var y,z=/^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]*))$/,A=n.fn.init=function(a,b){var c,d;if(!a)return this;if(\"string\"==typeof a){if(c=\"<\"===a[0]&&\">\"===a[a.length-1]&&a.length>=3?[null,a,null]:z.exec(a),!c||!c[1]&&b)return!b||b.jquery?(b||y).find(a):this.constructor(b).find(a);if(c[1]){if(b=b instanceof n?b[0]:b,n.merge(this,n.parseHTML(c[1],b&&b.nodeType?b.ownerDocument||b:l,!0)),v.test(c[1])&&n.isPlainObject(b))for(c in b)n.isFunction(this[c])?this[c](b[c]):this.attr(c,b[c]);return this}return d=l.getElementById(c[2]),d&&d.parentNode&&(this.length=1,this[0]=d),this.context=l,this.selector=a,this}return a.nodeType?(this.context=this[0]=a,this.length=1,this):n.isFunction(a)?\"undefined\"!=typeof y.ready?y.ready(a):a(n):(void 0!==a.selector&&(this.selector=a.selector,this.context=a.context),n.makeArray(a,this))};A.prototype=n.fn,y=n(l);var B=/^(?:parents|prev(?:Until|All))/,C={children:!0,contents:!0,next:!0,prev:!0};n.extend({dir:function(a,b,c){var d=[],e=void 0!==c;while((a=a[b])&&9!==a.nodeType)if(1===a.nodeType){if(e&&n(a).is(c))break;d.push(a)}return d},sibling:function(a,b){for(var c=[];a;a=a.nextSibling)1===a.nodeType&&a!==b&&c.push(a);return c}}),n.fn.extend({has:function(a){var b=n(a,this),c=b.length;return this.filter(function(){for(var a=0;c>a;a++)if(n.contains(this,b[a]))return!0})},closest:function(a,b){for(var c,d=0,e=this.length,f=[],g=u.test(a)||\"string\"!=typeof a?n(a,b||this.context):0;e>d;d++)for(c=this[d];c&&c!==b;c=c.parentNode)if(c.nodeType<11&&(g?g.index(c)>-1:1===c.nodeType&&n.find.matchesSelector(c,a))){f.push(c);break}return this.pushStack(f.length>1?n.unique(f):f)},index:function(a){return a?\"string\"==typeof a?g.call(n(a),this[0]):g.call(this,a.jquery?a[0]:a):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(a,b){return this.pushStack(n.unique(n.merge(this.get(),n(a,b))))},addBack:function(a){return this.add(null==a?this.prevObject:this.prevObject.filter(a))}});function D(a,b){while((a=a[b])&&1!==a.nodeType);return a}n.each({parent:function(a){var b=a.parentNode;return b&&11!==b.nodeType?b:null},parents:function(a){return n.dir(a,\"parentNode\")},parentsUntil:function(a,b,c){return n.dir(a,\"parentNode\",c)},next:function(a){return D(a,\"nextSibling\")},prev:function(a){return D(a,\"previousSibling\")},nextAll:function(a){return n.dir(a,\"nextSibling\")},prevAll:function(a){return n.dir(a,\"previousSibling\")},nextUntil:function(a,b,c){return n.dir(a,\"nextSibling\",c)},prevUntil:function(a,b,c){return n.dir(a,\"previousSibling\",c)},siblings:function(a){return n.sibling((a.parentNode||{}).firstChild,a)},children:function(a){return n.sibling(a.firstChild)},contents:function(a){return a.contentDocument||n.merge([],a.childNodes)}},function(a,b){n.fn[a]=function(c,d){var e=n.map(this,b,c);return\"Until\"!==a.slice(-5)&&(d=c),d&&\"string\"==typeof d&&(e=n.filter(d,e)),this.length>1&&(C[a]||n.unique(e),B.test(a)&&e.reverse()),this.pushStack(e)}});var E=/\\S+/g,F={};function G(a){var b=F[a]={};return n.each(a.match(E)||[],function(a,c){b[c]=!0}),b}n.Callbacks=function(a){a=\"string\"==typeof a?F[a]||G(a):n.extend({},a);var b,c,d,e,f,g,h=[],i=!a.once&&[],j=function(l){for(b=a.memory&&l,c=!0,g=e||0,e=0,f=h.length,d=!0;h&&f>g;g++)if(h[g].apply(l[0],l[1])===!1&&a.stopOnFalse){b=!1;break}d=!1,h&&(i?i.length&&j(i.shift()):b?h=[]:k.disable())},k={add:function(){if(h){var c=h.length;!function g(b){n.each(b,function(b,c){var d=n.type(c);\"function\"===d?a.unique&&k.has(c)||h.push(c):c&&c.length&&\"string\"!==d&&g(c)})}(arguments),d?f=h.length:b&&(e=c,j(b))}return this},remove:function(){return h&&n.each(arguments,function(a,b){var c;while((c=n.inArray(b,h,c))>-1)h.splice(c,1),d&&(f>=c&&f--,g>=c&&g--)}),this},has:function(a){return a?n.inArray(a,h)>-1:!(!h||!h.length)},empty:function(){return h=[],f=0,this},disable:function(){return h=i=b=void 0,this},disabled:function(){return!h},lock:function(){return i=void 0,b||k.disable(),this},locked:function(){return!i},fireWith:function(a,b){return!h||c&&!i||(b=b||[],b=[a,b.slice?b.slice():b],d?i.push(b):j(b)),this},fire:function(){return k.fireWith(this,arguments),this},fired:function(){return!!c}};return k},n.extend({Deferred:function(a){var b=[[\"resolve\",\"done\",n.Callbacks(\"once memory\"),\"resolved\"],[\"reject\",\"fail\",n.Callbacks(\"once memory\"),\"rejected\"],[\"notify\",\"progress\",n.Callbacks(\"memory\")]],c=\"pending\",d={state:function(){return c},always:function(){return e.done(arguments).fail(arguments),this},then:function(){var a=arguments;return n.Deferred(function(c){n.each(b,function(b,f){var g=n.isFunction(a[b])&&a[b];e[f[1]](function(){var a=g&&g.apply(this,arguments);a&&n.isFunction(a.promise)?a.promise().done(c.resolve).fail(c.reject).progress(c.notify):c[f[0]+\"With\"](this===d?c.promise():this,g?[a]:arguments)})}),a=null}).promise()},promise:function(a){return null!=a?n.extend(a,d):d}},e={};return d.pipe=d.then,n.each(b,function(a,f){var g=f[2],h=f[3];d[f[1]]=g.add,h&&g.add(function(){c=h},b[1^a][2].disable,b[2][2].lock),e[f[0]]=function(){return e[f[0]+\"With\"](this===e?d:this,arguments),this},e[f[0]+\"With\"]=g.fireWith}),d.promise(e),a&&a.call(e,e),e},when:function(a){var b=0,c=d.call(arguments),e=c.length,f=1!==e||a&&n.isFunction(a.promise)?e:0,g=1===f?a:n.Deferred(),h=function(a,b,c){return function(e){b[a]=this,c[a]=arguments.length>1?d.call(arguments):e,c===i?g.notifyWith(b,c):--f||g.resolveWith(b,c)}},i,j,k;if(e>1)for(i=new Array(e),j=new Array(e),k=new Array(e);e>b;b++)c[b]&&n.isFunction(c[b].promise)?c[b].promise().done(h(b,k,c)).fail(g.reject).progress(h(b,j,i)):--f;return f||g.resolveWith(k,c),g.promise()}});var H;n.fn.ready=function(a){return n.ready.promise().done(a),this},n.extend({isReady:!1,readyWait:1,holdReady:function(a){a?n.readyWait++:n.ready(!0)},ready:function(a){(a===!0?--n.readyWait:n.isReady)||(n.isReady=!0,a!==!0&&--n.readyWait>0||(H.resolveWith(l,[n]),n.fn.triggerHandler&&(n(l).triggerHandler(\"ready\"),n(l).off(\"ready\"))))}});function I(){l.removeEventListener(\"DOMContentLoaded\",I,!1),a.removeEventListener(\"load\",I,!1),n.ready()}n.ready.promise=function(b){return H||(H=n.Deferred(),\"complete\"===l.readyState?setTimeout(n.ready):(l.addEventListener(\"DOMContentLoaded\",I,!1),a.addEventListener(\"load\",I,!1))),H.promise(b)},n.ready.promise();var J=n.access=function(a,b,c,d,e,f,g){var h=0,i=a.length,j=null==c;if(\"object\"===n.type(c)){e=!0;for(h in c)n.access(a,b,h,c[h],!0,f,g)}else if(void 0!==d&&(e=!0,n.isFunction(d)||(g=!0),j&&(g?(b.call(a,d),b=null):(j=b,b=function(a,b,c){return j.call(n(a),c)})),b))for(;i>h;h++)b(a[h],c,g?d:d.call(a[h],h,b(a[h],c)));return e?a:j?b.call(a):i?b(a[0],c):f};n.acceptData=function(a){return 1===a.nodeType||9===a.nodeType||!+a.nodeType};function K(){Object.defineProperty(this.cache={},0,{get:function(){return{}}}),this.expando=n.expando+Math.random()}K.uid=1,K.accepts=n.acceptData,K.prototype={key:function(a){if(!K.accepts(a))return 0;var b={},c=a[this.expando];if(!c){c=K.uid++;try{b[this.expando]={value:c},Object.defineProperties(a,b)}catch(d){b[this.expando]=c,n.extend(a,b)}}return this.cache[c]||(this.cache[c]={}),c},set:function(a,b,c){var d,e=this.key(a),f=this.cache[e];if(\"string\"==typeof b)f[b]=c;else if(n.isEmptyObject(f))n.extend(this.cache[e],b);else for(d in b)f[d]=b[d];return f},get:function(a,b){var c=this.cache[this.key(a)];return void 0===b?c:c[b]},access:function(a,b,c){var d;return void 0===b||b&&\"string\"==typeof b&&void 0===c?(d=this.get(a,b),void 0!==d?d:this.get(a,n.camelCase(b))):(this.set(a,b,c),void 0!==c?c:b)},remove:function(a,b){var c,d,e,f=this.key(a),g=this.cache[f];if(void 0===b)this.cache[f]={};else{n.isArray(b)?d=b.concat(b.map(n.camelCase)):(e=n.camelCase(b),b in g?d=[b,e]:(d=e,d=d in g?[d]:d.match(E)||[])),c=d.length;while(c--)delete g[d[c]]}},hasData:function(a){return!n.isEmptyObject(this.cache[a[this.expando]]||{})},discard:function(a){a[this.expando]&&delete this.cache[a[this.expando]]}};var L=new K,M=new K,N=/^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,O=/([A-Z])/g;function P(a,b,c){var d;if(void 0===c&&1===a.nodeType)if(d=\"data-\"+b.replace(O,\"-$1\").toLowerCase(),c=a.getAttribute(d),\"string\"==typeof c){try{c=\"true\"===c?!0:\"false\"===c?!1:\"null\"===c?null:+c+\"\"===c?+c:N.test(c)?n.parseJSON(c):c}catch(e){}M.set(a,b,c)}else c=void 0;return c}n.extend({hasData:function(a){return M.hasData(a)||L.hasData(a)},data:function(a,b,c){return M.access(a,b,c)},removeData:function(a,b){M.remove(a,b)\n    3  },_data:function(a,b,c){return L.access(a,b,c)},_removeData:function(a,b){L.remove(a,b)}}),n.fn.extend({data:function(a,b){var c,d,e,f=this[0],g=f&&f.attributes;if(void 0===a){if(this.length&&(e=M.get(f),1===f.nodeType&&!L.get(f,\"hasDataAttrs\"))){c=g.length;while(c--)g[c]&&(d=g[c].name,0===d.indexOf(\"data-\")&&(d=n.camelCase(d.slice(5)),P(f,d,e[d])));L.set(f,\"hasDataAttrs\",!0)}return e}return\"object\"==typeof a?this.each(function(){M.set(this,a)}):J(this,function(b){var c,d=n.camelCase(a);if(f&&void 0===b){if(c=M.get(f,a),void 0!==c)return c;if(c=M.get(f,d),void 0!==c)return c;if(c=P(f,d,void 0),void 0!==c)return c}else this.each(function(){var c=M.get(this,d);M.set(this,d,b),-1!==a.indexOf(\"-\")&&void 0!==c&&M.set(this,a,b)})},null,b,arguments.length>1,null,!0)},removeData:function(a){return this.each(function(){M.remove(this,a)})}}),n.extend({queue:function(a,b,c){var d;return a?(b=(b||\"fx\")+\"queue\",d=L.get(a,b),c&&(!d||n.isArray(c)?d=L.access(a,b,n.makeArray(c)):d.push(c)),d||[]):void 0},dequeue:function(a,b){b=b||\"fx\";var c=n.queue(a,b),d=c.length,e=c.shift(),f=n._queueHooks(a,b),g=function(){n.dequeue(a,b)};\"inprogress\"===e&&(e=c.shift(),d--),e&&(\"fx\"===b&&c.unshift(\"inprogress\"),delete f.stop,e.call(a,g,f)),!d&&f&&f.empty.fire()},_queueHooks:function(a,b){var c=b+\"queueHooks\";return L.get(a,c)||L.access(a,c,{empty:n.Callbacks(\"once memory\").add(function(){L.remove(a,[b+\"queue\",c])})})}}),n.fn.extend({queue:function(a,b){var c=2;return\"string\"!=typeof a&&(b=a,a=\"fx\",c--),arguments.length<c?n.queue(this[0],a):void 0===b?this:this.each(function(){var c=n.queue(this,a,b);n._queueHooks(this,a),\"fx\"===a&&\"inprogress\"!==c[0]&&n.dequeue(this,a)})},dequeue:function(a){return this.each(function(){n.dequeue(this,a)})},clearQueue:function(a){return this.queue(a||\"fx\",[])},promise:function(a,b){var c,d=1,e=n.Deferred(),f=this,g=this.length,h=function(){--d||e.resolveWith(f,[f])};\"string\"!=typeof a&&(b=a,a=void 0),a=a||\"fx\";while(g--)c=L.get(f[g],a+\"queueHooks\"),c&&c.empty&&(d++,c.empty.add(h));return h(),e.promise(b)}});var Q=/[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/.source,R=[\"Top\",\"Right\",\"Bottom\",\"Left\"],S=function(a,b){return a=b||a,\"none\"===n.css(a,\"display\")||!n.contains(a.ownerDocument,a)},T=/^(?:checkbox|radio)$/i;!function(){var a=l.createDocumentFragment(),b=a.appendChild(l.createElement(\"div\")),c=l.createElement(\"input\");c.setAttribute(\"type\",\"radio\"),c.setAttribute(\"checked\",\"checked\"),c.setAttribute(\"name\",\"t\"),b.appendChild(c),k.checkClone=b.cloneNode(!0).cloneNode(!0).lastChild.checked,b.innerHTML=\"<textarea>x</textarea>\",k.noCloneChecked=!!b.cloneNode(!0).lastChild.defaultValue}();var U=\"undefined\";k.focusinBubbles=\"onfocusin\"in a;var V=/^key/,W=/^(?:mouse|pointer|contextmenu)|click/,X=/^(?:focusinfocus|focusoutblur)$/,Y=/^([^.]*)(?:\\.(.+)|)$/;function Z(){return!0}function $(){return!1}function _(){try{return l.activeElement}catch(a){}}n.event={global:{},add:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,o,p,q,r=L.get(a);if(r){c.handler&&(f=c,c=f.handler,e=f.selector),c.guid||(c.guid=n.guid++),(i=r.events)||(i=r.events={}),(g=r.handle)||(g=r.handle=function(b){return typeof n!==U&&n.event.triggered!==b.type?n.event.dispatch.apply(a,arguments):void 0}),b=(b||\"\").match(E)||[\"\"],j=b.length;while(j--)h=Y.exec(b[j])||[],o=q=h[1],p=(h[2]||\"\").split(\".\").sort(),o&&(l=n.event.special[o]||{},o=(e?l.delegateType:l.bindType)||o,l=n.event.special[o]||{},k=n.extend({type:o,origType:q,data:d,handler:c,guid:c.guid,selector:e,needsContext:e&&n.expr.match.needsContext.test(e),namespace:p.join(\".\")},f),(m=i[o])||(m=i[o]=[],m.delegateCount=0,l.setup&&l.setup.call(a,d,p,g)!==!1||a.addEventListener&&a.addEventListener(o,g,!1)),l.add&&(l.add.call(a,k),k.handler.guid||(k.handler.guid=c.guid)),e?m.splice(m.delegateCount++,0,k):m.push(k),n.event.global[o]=!0)}},remove:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,o,p,q,r=L.hasData(a)&&L.get(a);if(r&&(i=r.events)){b=(b||\"\").match(E)||[\"\"],j=b.length;while(j--)if(h=Y.exec(b[j])||[],o=q=h[1],p=(h[2]||\"\").split(\".\").sort(),o){l=n.event.special[o]||{},o=(d?l.delegateType:l.bindType)||o,m=i[o]||[],h=h[2]&&new RegExp(\"(^|\\\\.)\"+p.join(\"\\\\.(?:.*\\\\.|)\")+\"(\\\\.|$)\"),g=f=m.length;while(f--)k=m[f],!e&&q!==k.origType||c&&c.guid!==k.guid||h&&!h.test(k.namespace)||d&&d!==k.selector&&(\"**\"!==d||!k.selector)||(m.splice(f,1),k.selector&&m.delegateCount--,l.remove&&l.remove.call(a,k));g&&!m.length&&(l.teardown&&l.teardown.call(a,p,r.handle)!==!1||n.removeEvent(a,o,r.handle),delete i[o])}else for(o in i)n.event.remove(a,o+b[j],c,d,!0);n.isEmptyObject(i)&&(delete r.handle,L.remove(a,\"events\"))}},trigger:function(b,c,d,e){var f,g,h,i,k,m,o,p=[d||l],q=j.call(b,\"type\")?b.type:b,r=j.call(b,\"namespace\")?b.namespace.split(\".\"):[];if(g=h=d=d||l,3!==d.nodeType&&8!==d.nodeType&&!X.test(q+n.event.triggered)&&(q.indexOf(\".\")>=0&&(r=q.split(\".\"),q=r.shift(),r.sort()),k=q.indexOf(\":\")<0&&\"on\"+q,b=b[n.expando]?b:new n.Event(q,\"object\"==typeof b&&b),b.isTrigger=e?2:3,b.namespace=r.join(\".\"),b.namespace_re=b.namespace?new RegExp(\"(^|\\\\.)\"+r.join(\"\\\\.(?:.*\\\\.|)\")+\"(\\\\.|$)\"):null,b.result=void 0,b.target||(b.target=d),c=null==c?[b]:n.makeArray(c,[b]),o=n.event.special[q]||{},e||!o.trigger||o.trigger.apply(d,c)!==!1)){if(!e&&!o.noBubble&&!n.isWindow(d)){for(i=o.delegateType||q,X.test(i+q)||(g=g.parentNode);g;g=g.parentNode)p.push(g),h=g;h===(d.ownerDocument||l)&&p.push(h.defaultView||h.parentWindow||a)}f=0;while((g=p[f++])&&!b.isPropagationStopped())b.type=f>1?i:o.bindType||q,m=(L.get(g,\"events\")||{})[b.type]&&L.get(g,\"handle\"),m&&m.apply(g,c),m=k&&g[k],m&&m.apply&&n.acceptData(g)&&(b.result=m.apply(g,c),b.result===!1&&b.preventDefault());return b.type=q,e||b.isDefaultPrevented()||o._default&&o._default.apply(p.pop(),c)!==!1||!n.acceptData(d)||k&&n.isFunction(d[q])&&!n.isWindow(d)&&(h=d[k],h&&(d[k]=null),n.event.triggered=q,d[q](),n.event.triggered=void 0,h&&(d[k]=h)),b.result}},dispatch:function(a){a=n.event.fix(a);var b,c,e,f,g,h=[],i=d.call(arguments),j=(L.get(this,\"events\")||{})[a.type]||[],k=n.event.special[a.type]||{};if(i[0]=a,a.delegateTarget=this,!k.preDispatch||k.preDispatch.call(this,a)!==!1){h=n.event.handlers.call(this,a,j),b=0;while((f=h[b++])&&!a.isPropagationStopped()){a.currentTarget=f.elem,c=0;while((g=f.handlers[c++])&&!a.isImmediatePropagationStopped())(!a.namespace_re||a.namespace_re.test(g.namespace))&&(a.handleObj=g,a.data=g.data,e=((n.event.special[g.origType]||{}).handle||g.handler).apply(f.elem,i),void 0!==e&&(a.result=e)===!1&&(a.preventDefault(),a.stopPropagation()))}return k.postDispatch&&k.postDispatch.call(this,a),a.result}},handlers:function(a,b){var c,d,e,f,g=[],h=b.delegateCount,i=a.target;if(h&&i.nodeType&&(!a.button||\"click\"!==a.type))for(;i!==this;i=i.parentNode||this)if(i.disabled!==!0||\"click\"!==a.type){for(d=[],c=0;h>c;c++)f=b[c],e=f.selector+\" \",void 0===d[e]&&(d[e]=f.needsContext?n(e,this).index(i)>=0:n.find(e,this,null,[i]).length),d[e]&&d.push(f);d.length&&g.push({elem:i,handlers:d})}return h<b.length&&g.push({elem:this,handlers:b.slice(h)}),g},props:\"altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which\".split(\" \"),fixHooks:{},keyHooks:{props:\"char charCode key keyCode\".split(\" \"),filter:function(a,b){return null==a.which&&(a.which=null!=b.charCode?b.charCode:b.keyCode),a}},mouseHooks:{props:\"button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement\".split(\" \"),filter:function(a,b){var c,d,e,f=b.button;return null==a.pageX&&null!=b.clientX&&(c=a.target.ownerDocument||l,d=c.documentElement,e=c.body,a.pageX=b.clientX+(d&&d.scrollLeft||e&&e.scrollLeft||0)-(d&&d.clientLeft||e&&e.clientLeft||0),a.pageY=b.clientY+(d&&d.scrollTop||e&&e.scrollTop||0)-(d&&d.clientTop||e&&e.clientTop||0)),a.which||void 0===f||(a.which=1&f?1:2&f?3:4&f?2:0),a}},fix:function(a){if(a[n.expando])return a;var b,c,d,e=a.type,f=a,g=this.fixHooks[e];g||(this.fixHooks[e]=g=W.test(e)?this.mouseHooks:V.test(e)?this.keyHooks:{}),d=g.props?this.props.concat(g.props):this.props,a=new n.Event(f),b=d.length;while(b--)c=d[b],a[c]=f[c];return a.target||(a.target=l),3===a.target.nodeType&&(a.target=a.target.parentNode),g.filter?g.filter(a,f):a},special:{load:{noBubble:!0},focus:{trigger:function(){return this!==_()&&this.focus?(this.focus(),!1):void 0},delegateType:\"focusin\"},blur:{trigger:function(){return this===_()&&this.blur?(this.blur(),!1):void 0},delegateType:\"focusout\"},click:{trigger:function(){return\"checkbox\"===this.type&&this.click&&n.nodeName(this,\"input\")?(this.click(),!1):void 0},_default:function(a){return n.nodeName(a.target,\"a\")}},beforeunload:{postDispatch:function(a){void 0!==a.result&&a.originalEvent&&(a.originalEvent.returnValue=a.result)}}},simulate:function(a,b,c,d){var e=n.extend(new n.Event,c,{type:a,isSimulated:!0,originalEvent:{}});d?n.event.trigger(e,null,b):n.event.dispatch.call(b,e),e.isDefaultPrevented()&&c.preventDefault()}},n.removeEvent=function(a,b,c){a.removeEventListener&&a.removeEventListener(b,c,!1)},n.Event=function(a,b){return this instanceof n.Event?(a&&a.type?(this.originalEvent=a,this.type=a.type,this.isDefaultPrevented=a.defaultPrevented||void 0===a.defaultPrevented&&a.returnValue===!1?Z:$):this.type=a,b&&n.extend(this,b),this.timeStamp=a&&a.timeStamp||n.now(),void(this[n.expando]=!0)):new n.Event(a,b)},n.Event.prototype={isDefaultPrevented:$,isPropagationStopped:$,isImmediatePropagationStopped:$,preventDefault:function(){var a=this.originalEvent;this.isDefaultPrevented=Z,a&&a.preventDefault&&a.preventDefault()},stopPropagation:function(){var a=this.originalEvent;this.isPropagationStopped=Z,a&&a.stopPropagation&&a.stopPropagation()},stopImmediatePropagation:function(){var a=this.originalEvent;this.isImmediatePropagationStopped=Z,a&&a.stopImmediatePropagation&&a.stopImmediatePropagation(),this.stopPropagation()}},n.each({mouseenter:\"mouseover\",mouseleave:\"mouseout\",pointerenter:\"pointerover\",pointerleave:\"pointerout\"},function(a,b){n.event.special[a]={delegateType:b,bindType:b,handle:function(a){var c,d=this,e=a.relatedTarget,f=a.handleObj;return(!e||e!==d&&!n.contains(d,e))&&(a.type=f.origType,c=f.handler.apply(this,arguments),a.type=b),c}}}),k.focusinBubbles||n.each({focus:\"focusin\",blur:\"focusout\"},function(a,b){var c=function(a){n.event.simulate(b,a.target,n.event.fix(a),!0)};n.event.special[b]={setup:function(){var d=this.ownerDocument||this,e=L.access(d,b);e||d.addEventListener(a,c,!0),L.access(d,b,(e||0)+1)},teardown:function(){var d=this.ownerDocument||this,e=L.access(d,b)-1;e?L.access(d,b,e):(d.removeEventListener(a,c,!0),L.remove(d,b))}}}),n.fn.extend({on:function(a,b,c,d,e){var f,g;if(\"object\"==typeof a){\"string\"!=typeof b&&(c=c||b,b=void 0);for(g in a)this.on(g,b,c,a[g],e);return this}if(null==c&&null==d?(d=b,c=b=void 0):null==d&&(\"string\"==typeof b?(d=c,c=void 0):(d=c,c=b,b=void 0)),d===!1)d=$;else if(!d)return this;return 1===e&&(f=d,d=function(a){return n().off(a),f.apply(this,arguments)},d.guid=f.guid||(f.guid=n.guid++)),this.each(function(){n.event.add(this,a,d,c,b)})},one:function(a,b,c,d){return this.on(a,b,c,d,1)},off:function(a,b,c){var d,e;if(a&&a.preventDefault&&a.handleObj)return d=a.handleObj,n(a.delegateTarget).off(d.namespace?d.origType+\".\"+d.namespace:d.origType,d.selector,d.handler),this;if(\"object\"==typeof a){for(e in a)this.off(e,b,a[e]);return this}return(b===!1||\"function\"==typeof b)&&(c=b,b=void 0),c===!1&&(c=$),this.each(function(){n.event.remove(this,a,c,b)})},trigger:function(a,b){return this.each(function(){n.event.trigger(a,b,this)})},triggerHandler:function(a,b){var c=this[0];return c?n.event.trigger(a,b,c,!0):void 0}});var ab=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi,bb=/<([\\w:]+)/,cb=/<|&#?\\w+;/,db=/<(?:script|style|link)/i,eb=/checked\\s*(?:[^=]|=\\s*.checked.)/i,fb=/^$|\\/(?:java|ecma)script/i,gb=/^true\\/(.*)/,hb=/^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g,ib={option:[1,\"<select multiple='multiple'>\",\"</select>\"],thead:[1,\"<table>\",\"</table>\"],col:[2,\"<table><colgroup>\",\"</colgroup></table>\"],tr:[2,\"<table><tbody>\",\"</tbody></table>\"],td:[3,\"<table><tbody><tr>\",\"</tr></tbody></table>\"],_default:[0,\"\",\"\"]};ib.optgroup=ib.option,ib.tbody=ib.tfoot=ib.colgroup=ib.caption=ib.thead,ib.th=ib.td;function jb(a,b){return n.nodeName(a,\"table\")&&n.nodeName(11!==b.nodeType?b:b.firstChild,\"tr\")?a.getElementsByTagName(\"tbody\")[0]||a.appendChild(a.ownerDocument.createElement(\"tbody\")):a}function kb(a){return a.type=(null!==a.getAttribute(\"type\"))+\"/\"+a.type,a}function lb(a){var b=gb.exec(a.type);return b?a.type=b[1]:a.removeAttribute(\"type\"),a}function mb(a,b){for(var c=0,d=a.length;d>c;c++)L.set(a[c],\"globalEval\",!b||L.get(b[c],\"globalEval\"))}function nb(a,b){var c,d,e,f,g,h,i,j;if(1===b.nodeType){if(L.hasData(a)&&(f=L.access(a),g=L.set(b,f),j=f.events)){delete g.handle,g.events={};for(e in j)for(c=0,d=j[e].length;d>c;c++)n.event.add(b,e,j[e][c])}M.hasData(a)&&(h=M.access(a),i=n.extend({},h),M.set(b,i))}}function ob(a,b){var c=a.getElementsByTagName?a.getElementsByTagName(b||\"*\"):a.querySelectorAll?a.querySelectorAll(b||\"*\"):[];return void 0===b||b&&n.nodeName(a,b)?n.merge([a],c):c}function pb(a,b){var c=b.nodeName.toLowerCase();\"input\"===c&&T.test(a.type)?b.checked=a.checked:(\"input\"===c||\"textarea\"===c)&&(b.defaultValue=a.defaultValue)}n.extend({clone:function(a,b,c){var d,e,f,g,h=a.cloneNode(!0),i=n.contains(a.ownerDocument,a);if(!(k.noCloneChecked||1!==a.nodeType&&11!==a.nodeType||n.isXMLDoc(a)))for(g=ob(h),f=ob(a),d=0,e=f.length;e>d;d++)pb(f[d],g[d]);if(b)if(c)for(f=f||ob(a),g=g||ob(h),d=0,e=f.length;e>d;d++)nb(f[d],g[d]);else nb(a,h);return g=ob(h,\"script\"),g.length>0&&mb(g,!i&&ob(a,\"script\")),h},buildFragment:function(a,b,c,d){for(var e,f,g,h,i,j,k=b.createDocumentFragment(),l=[],m=0,o=a.length;o>m;m++)if(e=a[m],e||0===e)if(\"object\"===n.type(e))n.merge(l,e.nodeType?[e]:e);else if(cb.test(e)){f=f||k.appendChild(b.createElement(\"div\")),g=(bb.exec(e)||[\"\",\"\"])[1].toLowerCase(),h=ib[g]||ib._default,f.innerHTML=h[1]+e.replace(ab,\"<$1></$2>\")+h[2],j=h[0];while(j--)f=f.lastChild;n.merge(l,f.childNodes),f=k.firstChild,f.textContent=\"\"}else l.push(b.createTextNode(e));k.textContent=\"\",m=0;while(e=l[m++])if((!d||-1===n.inArray(e,d))&&(i=n.contains(e.ownerDocument,e),f=ob(k.appendChild(e),\"script\"),i&&mb(f),c)){j=0;while(e=f[j++])fb.test(e.type||\"\")&&c.push(e)}return k},cleanData:function(a){for(var b,c,d,e,f=n.event.special,g=0;void 0!==(c=a[g]);g++){if(n.acceptData(c)&&(e=c[L.expando],e&&(b=L.cache[e]))){if(b.events)for(d in b.events)f[d]?n.event.remove(c,d):n.removeEvent(c,d,b.handle);L.cache[e]&&delete L.cache[e]}delete M.cache[c[M.expando]]}}}),n.fn.extend({text:function(a){return J(this,function(a){return void 0===a?n.text(this):this.empty().each(function(){(1===this.nodeType||11===this.nodeType||9===this.nodeType)&&(this.textContent=a)})},null,a,arguments.length)},append:function(){return this.domManip(arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=jb(this,a);b.appendChild(a)}})},prepend:function(){return this.domManip(arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=jb(this,a);b.insertBefore(a,b.firstChild)}})},before:function(){return this.domManip(arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this)})},after:function(){return this.domManip(arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this.nextSibling)})},remove:function(a,b){for(var c,d=a?n.filter(a,this):this,e=0;null!=(c=d[e]);e++)b||1!==c.nodeType||n.cleanData(ob(c)),c.parentNode&&(b&&n.contains(c.ownerDocument,c)&&mb(ob(c,\"script\")),c.parentNode.removeChild(c));return this},empty:function(){for(var a,b=0;null!=(a=this[b]);b++)1===a.nodeType&&(n.cleanData(ob(a,!1)),a.textContent=\"\");return this},clone:function(a,b){return a=null==a?!1:a,b=null==b?a:b,this.map(function(){return n.clone(this,a,b)})},html:function(a){return J(this,function(a){var b=this[0]||{},c=0,d=this.length;if(void 0===a&&1===b.nodeType)return b.innerHTML;if(\"string\"==typeof a&&!db.test(a)&&!ib[(bb.exec(a)||[\"\",\"\"])[1].toLowerCase()]){a=a.replace(ab,\"<$1></$2>\");try{for(;d>c;c++)b=this[c]||{},1===b.nodeType&&(n.cleanData(ob(b,!1)),b.innerHTML=a);b=0}catch(e){}}b&&this.empty().append(a)},null,a,arguments.length)},replaceWith:function(){var a=arguments[0];return this.domManip(arguments,function(b){a=this.parentNode,n.cleanData(ob(this)),a&&a.replaceChild(b,this)}),a&&(a.length||a.nodeType)?this:this.remove()},detach:function(a){return this.remove(a,!0)},domManip:function(a,b){a=e.apply([],a);var c,d,f,g,h,i,j=0,l=this.length,m=this,o=l-1,p=a[0],q=n.isFunction(p);if(q||l>1&&\"string\"==typeof p&&!k.checkClone&&eb.test(p))return this.each(function(c){var d=m.eq(c);q&&(a[0]=p.call(this,c,d.html())),d.domManip(a,b)});if(l&&(c=n.buildFragment(a,this[0].ownerDocument,!1,this),d=c.firstChild,1===c.childNodes.length&&(c=d),d)){for(f=n.map(ob(c,\"script\"),kb),g=f.length;l>j;j++)h=c,j!==o&&(h=n.clone(h,!0,!0),g&&n.merge(f,ob(h,\"script\"))),b.call(this[j],h,j);if(g)for(i=f[f.length-1].ownerDocument,n.map(f,lb),j=0;g>j;j++)h=f[j],fb.test(h.type||\"\")&&!L.access(h,\"globalEval\")&&n.contains(i,h)&&(h.src?n._evalUrl&&n._evalUrl(h.src):n.globalEval(h.textContent.replace(hb,\"\")))}return this}}),n.each({appendTo:\"append\",prependTo:\"prepend\",insertBefore:\"before\",insertAfter:\"after\",replaceAll:\"replaceWith\"},function(a,b){n.fn[a]=function(a){for(var c,d=[],e=n(a),g=e.length-1,h=0;g>=h;h++)c=h===g?this:this.clone(!0),n(e[h])[b](c),f.apply(d,c.get());return this.pushStack(d)}});var qb,rb={};function sb(b,c){var d,e=n(c.createElement(b)).appendTo(c.body),f=a.getDefaultComputedStyle&&(d=a.getDefaultComputedStyle(e[0]))?d.display:n.css(e[0],\"display\");return e.detach(),f}function tb(a){var b=l,c=rb[a];return c||(c=sb(a,b),\"none\"!==c&&c||(qb=(qb||n(\"<iframe frameborder='0' width='0' height='0'/>\")).appendTo(b.documentElement),b=qb[0].contentDocument,b.write(),b.close(),c=sb(a,b),qb.detach()),rb[a]=c),c}var ub=/^margin/,vb=new RegExp(\"^(\"+Q+\")(?!px)[a-z%]+$\",\"i\"),wb=function(a){return a.ownerDocument.defaultView.getComputedStyle(a,null)};function xb(a,b,c){var d,e,f,g,h=a.style;return c=c||wb(a),c&&(g=c.getPropertyValue(b)||c[b]),c&&(\"\"!==g||n.contains(a.ownerDocument,a)||(g=n.style(a,b)),vb.test(g)&&ub.test(b)&&(d=h.width,e=h.minWidth,f=h.maxWidth,h.minWidth=h.maxWidth=h.width=g,g=c.width,h.width=d,h.minWidth=e,h.maxWidth=f)),void 0!==g?g+\"\":g}function yb(a,b){return{get:function(){return a()?void delete this.get:(this.get=b).apply(this,arguments)}}}!function(){var b,c,d=l.documentElement,e=l.createElement(\"div\"),f=l.createElement(\"div\");if(f.style){f.style.backgroundClip=\"content-box\",f.cloneNode(!0).style.backgroundClip=\"\",k.clearCloneStyle=\"content-box\"===f.style.backgroundClip,e.style.cssText=\"border:0;width:0;height:0;top:0;left:-9999px;margin-top:1px;position:absolute\",e.appendChild(f);function g(){f.style.cssText=\"-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;display:block;margin-top:1%;top:1%;border:1px;padding:1px;width:4px;position:absolute\",f.innerHTML=\"\",d.appendChild(e);var g=a.getComputedStyle(f,null);b=\"1%\"!==g.top,c=\"4px\"===g.width,d.removeChild(e)}a.getComputedStyle&&n.extend(k,{pixelPosition:function(){return g(),b},boxSizingReliable:function(){return null==c&&g(),c},reliableMarginRight:function(){var b,c=f.appendChild(l.createElement(\"div\"));return c.style.cssText=f.style.cssText=\"-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0\",c.style.marginRight=c.style.width=\"0\",f.style.width=\"1px\",d.appendChild(e),b=!parseFloat(a.getComputedStyle(c,null).marginRight),d.removeChild(e),b}})}}(),n.swap=function(a,b,c,d){var e,f,g={};for(f in b)g[f]=a.style[f],a.style[f]=b[f];e=c.apply(a,d||[]);for(f in b)a.style[f]=g[f];return e};var zb=/^(none|table(?!-c[ea]).+)/,Ab=new RegExp(\"^(\"+Q+\")(.*)$\",\"i\"),Bb=new RegExp(\"^([+-])=(\"+Q+\")\",\"i\"),Cb={position:\"absolute\",visibility:\"hidden\",display:\"block\"},Db={letterSpacing:\"0\",fontWeight:\"400\"},Eb=[\"Webkit\",\"O\",\"Moz\",\"ms\"];function Fb(a,b){if(b in a)return b;var c=b[0].toUpperCase()+b.slice(1),d=b,e=Eb.length;while(e--)if(b=Eb[e]+c,b in a)return b;return d}function Gb(a,b,c){var d=Ab.exec(b);return d?Math.max(0,d[1]-(c||0))+(d[2]||\"px\"):b}function Hb(a,b,c,d,e){for(var f=c===(d?\"border\":\"content\")?4:\"width\"===b?1:0,g=0;4>f;f+=2)\"margin\"===c&&(g+=n.css(a,c+R[f],!0,e)),d?(\"content\"===c&&(g-=n.css(a,\"padding\"+R[f],!0,e)),\"margin\"!==c&&(g-=n.css(a,\"border\"+R[f]+\"Width\",!0,e))):(g+=n.css(a,\"padding\"+R[f],!0,e),\"padding\"!==c&&(g+=n.css(a,\"border\"+R[f]+\"Width\",!0,e)));return g}function Ib(a,b,c){var d=!0,e=\"width\"===b?a.offsetWidth:a.offsetHeight,f=wb(a),g=\"border-box\"===n.css(a,\"boxSizing\",!1,f);if(0>=e||null==e){if(e=xb(a,b,f),(0>e||null==e)&&(e=a.style[b]),vb.test(e))return e;d=g&&(k.boxSizingReliable()||e===a.style[b]),e=parseFloat(e)||0}return e+Hb(a,b,c||(g?\"border\":\"content\"),d,f)+\"px\"}function Jb(a,b){for(var c,d,e,f=[],g=0,h=a.length;h>g;g++)d=a[g],d.style&&(f[g]=L.get(d,\"olddisplay\"),c=d.style.display,b?(f[g]||\"none\"!==c||(d.style.display=\"\"),\"\"===d.style.display&&S(d)&&(f[g]=L.access(d,\"olddisplay\",tb(d.nodeName)))):(e=S(d),\"none\"===c&&e||L.set(d,\"olddisplay\",e?c:n.css(d,\"display\"))));for(g=0;h>g;g++)d=a[g],d.style&&(b&&\"none\"!==d.style.display&&\"\"!==d.style.display||(d.style.display=b?f[g]||\"\":\"none\"));return a}n.extend({cssHooks:{opacity:{get:function(a,b){if(b){var c=xb(a,\"opacity\");return\"\"===c?\"1\":c}}}},cssNumber:{columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{\"float\":\"cssFloat\"},style:function(a,b,c,d){if(a&&3!==a.nodeType&&8!==a.nodeType&&a.style){var e,f,g,h=n.camelCase(b),i=a.style;return b=n.cssProps[h]||(n.cssProps[h]=Fb(i,h)),g=n.cssHooks[b]||n.cssHooks[h],void 0===c?g&&\"get\"in g&&void 0!==(e=g.get(a,!1,d))?e:i[b]:(f=typeof c,\"string\"===f&&(e=Bb.exec(c))&&(c=(e[1]+1)*e[2]+parseFloat(n.css(a,b)),f=\"number\"),null!=c&&c===c&&(\"number\"!==f||n.cssNumber[h]||(c+=\"px\"),k.clearCloneStyle||\"\"!==c||0!==b.indexOf(\"background\")||(i[b]=\"inherit\"),g&&\"set\"in g&&void 0===(c=g.set(a,c,d))||(i[b]=c)),void 0)}},css:function(a,b,c,d){var e,f,g,h=n.camelCase(b);return b=n.cssProps[h]||(n.cssProps[h]=Fb(a.style,h)),g=n.cssHooks[b]||n.cssHooks[h],g&&\"get\"in g&&(e=g.get(a,!0,c)),void 0===e&&(e=xb(a,b,d)),\"normal\"===e&&b in Db&&(e=Db[b]),\"\"===c||c?(f=parseFloat(e),c===!0||n.isNumeric(f)?f||0:e):e}}),n.each([\"height\",\"width\"],function(a,b){n.cssHooks[b]={get:function(a,c,d){return c?zb.test(n.css(a,\"display\"))&&0===a.offsetWidth?n.swap(a,Cb,function(){return Ib(a,b,d)}):Ib(a,b,d):void 0},set:function(a,c,d){var e=d&&wb(a);return Gb(a,c,d?Hb(a,b,d,\"border-box\"===n.css(a,\"boxSizing\",!1,e),e):0)}}}),n.cssHooks.marginRight=yb(k.reliableMarginRight,function(a,b){return b?n.swap(a,{display:\"inline-block\"},xb,[a,\"marginRight\"]):void 0}),n.each({margin:\"\",padding:\"\",border:\"Width\"},function(a,b){n.cssHooks[a+b]={expand:function(c){for(var d=0,e={},f=\"string\"==typeof c?c.split(\" \"):[c];4>d;d++)e[a+R[d]+b]=f[d]||f[d-2]||f[0];return e}},ub.test(a)||(n.cssHooks[a+b].set=Gb)}),n.fn.extend({css:function(a,b){return J(this,function(a,b,c){var d,e,f={},g=0;if(n.isArray(b)){for(d=wb(a),e=b.length;e>g;g++)f[b[g]]=n.css(a,b[g],!1,d);return f}return void 0!==c?n.style(a,b,c):n.css(a,b)},a,b,arguments.length>1)},show:function(){return Jb(this,!0)},hide:function(){return Jb(this)},toggle:function(a){return\"boolean\"==typeof a?a?this.show():this.hide():this.each(function(){S(this)?n(this).show():n(this).hide()})}});function Kb(a,b,c,d,e){return new Kb.prototype.init(a,b,c,d,e)}n.Tween=Kb,Kb.prototype={constructor:Kb,init:function(a,b,c,d,e,f){this.elem=a,this.prop=c,this.easing=e||\"swing\",this.options=b,this.start=this.now=this.cur(),this.end=d,this.unit=f||(n.cssNumber[c]?\"\":\"px\")},cur:function(){var a=Kb.propHooks[this.prop];return a&&a.get?a.get(this):Kb.propHooks._default.get(this)},run:function(a){var b,c=Kb.propHooks[this.prop];return this.pos=b=this.options.duration?n.easing[this.easing](a,this.options.duration*a,0,1,this.options.duration):a,this.now=(this.end-this.start)*b+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),c&&c.set?c.set(this):Kb.propHooks._default.set(this),this}},Kb.prototype.init.prototype=Kb.prototype,Kb.propHooks={_default:{get:function(a){var b;return null==a.elem[a.prop]||a.elem.style&&null!=a.elem.style[a.prop]?(b=n.css(a.elem,a.prop,\"\"),b&&\"auto\"!==b?b:0):a.elem[a.prop]},set:function(a){n.fx.step[a.prop]?n.fx.step[a.prop](a):a.elem.style&&(null!=a.elem.style[n.cssProps[a.prop]]||n.cssHooks[a.prop])?n.style(a.elem,a.prop,a.now+a.unit):a.elem[a.prop]=a.now}}},Kb.propHooks.scrollTop=Kb.propHooks.scrollLeft={set:function(a){a.elem.nodeType&&a.elem.parentNode&&(a.elem[a.prop]=a.now)}},n.easing={linear:function(a){return a},swing:function(a){return.5-Math.cos(a*Math.PI)/2}},n.fx=Kb.prototype.init,n.fx.step={};var Lb,Mb,Nb=/^(?:toggle|show|hide)$/,Ob=new RegExp(\"^(?:([+-])=|)(\"+Q+\")([a-z%]*)$\",\"i\"),Pb=/queueHooks$/,Qb=[Vb],Rb={\"*\":[function(a,b){var c=this.createTween(a,b),d=c.cur(),e=Ob.exec(b),f=e&&e[3]||(n.cssNumber[a]?\"\":\"px\"),g=(n.cssNumber[a]||\"px\"!==f&&+d)&&Ob.exec(n.css(c.elem,a)),h=1,i=20;if(g&&g[3]!==f){f=f||g[3],e=e||[],g=+d||1;do h=h||\".5\",g/=h,n.style(c.elem,a,g+f);while(h!==(h=c.cur()/d)&&1!==h&&--i)}return e&&(g=c.start=+g||+d||0,c.unit=f,c.end=e[1]?g+(e[1]+1)*e[2]:+e[2]),c}]};function Sb(){return setTimeout(function(){Lb=void 0}),Lb=n.now()}function Tb(a,b){var c,d=0,e={height:a};for(b=b?1:0;4>d;d+=2-b)c=R[d],e[\"margin\"+c]=e[\"padding\"+c]=a;return b&&(e.opacity=e.width=a),e}function Ub(a,b,c){for(var d,e=(Rb[b]||[]).concat(Rb[\"*\"]),f=0,g=e.length;g>f;f++)if(d=e[f].call(c,b,a))return d}function Vb(a,b,c){var d,e,f,g,h,i,j,k,l=this,m={},o=a.style,p=a.nodeType&&S(a),q=L.get(a,\"fxshow\");c.queue||(h=n._queueHooks(a,\"fx\"),null==h.unqueued&&(h.unqueued=0,i=h.empty.fire,h.empty.fire=function(){h.unqueued||i()}),h.unqueued++,l.always(function(){l.always(function(){h.unqueued--,n.queue(a,\"fx\").length||h.empty.fire()})})),1===a.nodeType&&(\"height\"in b||\"width\"in b)&&(c.overflow=[o.overflow,o.overflowX,o.overflowY],j=n.css(a,\"display\"),k=\"none\"===j?L.get(a,\"olddisplay\")||tb(a.nodeName):j,\"inline\"===k&&\"none\"===n.css(a,\"float\")&&(o.display=\"inline-block\")),c.overflow&&(o.overflow=\"hidden\",l.always(function(){o.overflow=c.overflow[0],o.overflowX=c.overflow[1],o.overflowY=c.overflow[2]}));for(d in b)if(e=b[d],Nb.exec(e)){if(delete b[d],f=f||\"toggle\"===e,e===(p?\"hide\":\"show\")){if(\"show\"!==e||!q||void 0===q[d])continue;p=!0}m[d]=q&&q[d]||n.style(a,d)}else j=void 0;if(n.isEmptyObject(m))\"inline\"===(\"none\"===j?tb(a.nodeName):j)&&(o.display=j);else{q?\"hidden\"in q&&(p=q.hidden):q=L.access(a,\"fxshow\",{}),f&&(q.hidden=!p),p?n(a).show():l.done(function(){n(a).hide()}),l.done(function(){var b;L.remove(a,\"fxshow\");for(b in m)n.style(a,b,m[b])});for(d in m)g=Ub(p?q[d]:0,d,l),d in q||(q[d]=g.start,p&&(g.end=g.start,g.start=\"width\"===d||\"height\"===d?1:0))}}function Wb(a,b){var c,d,e,f,g;for(c in a)if(d=n.camelCase(c),e=b[d],f=a[c],n.isArray(f)&&(e=f[1],f=a[c]=f[0]),c!==d&&(a[d]=f,delete a[c]),g=n.cssHooks[d],g&&\"expand\"in g){f=g.expand(f),delete a[d];for(c in f)c in a||(a[c]=f[c],b[c]=e)}else b[d]=e}function Xb(a,b,c){var d,e,f=0,g=Qb.length,h=n.Deferred().always(function(){delete i.elem}),i=function(){if(e)return!1;for(var b=Lb||Sb(),c=Math.max(0,j.startTime+j.duration-b),d=c/j.duration||0,f=1-d,g=0,i=j.tweens.length;i>g;g++)j.tweens[g].run(f);return h.notifyWith(a,[j,f,c]),1>f&&i?c:(h.resolveWith(a,[j]),!1)},j=h.promise({elem:a,props:n.extend({},b),opts:n.extend(!0,{specialEasing:{}},c),originalProperties:b,originalOptions:c,startTime:Lb||Sb(),duration:c.duration,tweens:[],createTween:function(b,c){var d=n.Tween(a,j.opts,b,c,j.opts.specialEasing[b]||j.opts.easing);return j.tweens.push(d),d},stop:function(b){var c=0,d=b?j.tweens.length:0;if(e)return this;for(e=!0;d>c;c++)j.tweens[c].run(1);return b?h.resolveWith(a,[j,b]):h.rejectWith(a,[j,b]),this}}),k=j.props;for(Wb(k,j.opts.specialEasing);g>f;f++)if(d=Qb[f].call(j,a,k,j.opts))return d;return n.map(k,Ub,j),n.isFunction(j.opts.start)&&j.opts.start.call(a,j),n.fx.timer(n.extend(i,{elem:a,anim:j,queue:j.opts.queue})),j.progress(j.opts.progress).done(j.opts.done,j.opts.complete).fail(j.opts.fail).always(j.opts.always)}n.Animation=n.extend(Xb,{tweener:function(a,b){n.isFunction(a)?(b=a,a=[\"*\"]):a=a.split(\" \");for(var c,d=0,e=a.length;e>d;d++)c=a[d],Rb[c]=Rb[c]||[],Rb[c].unshift(b)},prefilter:function(a,b){b?Qb.unshift(a):Qb.push(a)}}),n.speed=function(a,b,c){var d=a&&\"object\"==typeof a?n.extend({},a):{complete:c||!c&&b||n.isFunction(a)&&a,duration:a,easing:c&&b||b&&!n.isFunction(b)&&b};return d.duration=n.fx.off?0:\"number\"==typeof d.duration?d.duration:d.duration in n.fx.speeds?n.fx.speeds[d.duration]:n.fx.speeds._default,(null==d.queue||d.queue===!0)&&(d.queue=\"fx\"),d.old=d.complete,d.complete=function(){n.isFunction(d.old)&&d.old.call(this),d.queue&&n.dequeue(this,d.queue)},d},n.fn.extend({fadeTo:function(a,b,c,d){return this.filter(S).css(\"opacity\",0).show().end().animate({opacity:b},a,c,d)},animate:function(a,b,c,d){var e=n.isEmptyObject(a),f=n.speed(b,c,d),g=function(){var b=Xb(this,n.extend({},a),f);(e||L.get(this,\"finish\"))&&b.stop(!0)};return g.finish=g,e||f.queue===!1?this.each(g):this.queue(f.queue,g)},stop:function(a,b,c){var d=function(a){var b=a.stop;delete a.stop,b(c)};return\"string\"!=typeof a&&(c=b,b=a,a=void 0),b&&a!==!1&&this.queue(a||\"fx\",[]),this.each(function(){var b=!0,e=null!=a&&a+\"queueHooks\",f=n.timers,g=L.get(this);if(e)g[e]&&g[e].stop&&d(g[e]);else for(e in g)g[e]&&g[e].stop&&Pb.test(e)&&d(g[e]);for(e=f.length;e--;)f[e].elem!==this||null!=a&&f[e].queue!==a||(f[e].anim.stop(c),b=!1,f.splice(e,1));(b||!c)&&n.dequeue(this,a)})},finish:function(a){return a!==!1&&(a=a||\"fx\"),this.each(function(){var b,c=L.get(this),d=c[a+\"queue\"],e=c[a+\"queueHooks\"],f=n.timers,g=d?d.length:0;for(c.finish=!0,n.queue(this,a,[]),e&&e.stop&&e.stop.call(this,!0),b=f.length;b--;)f[b].elem===this&&f[b].queue===a&&(f[b].anim.stop(!0),f.splice(b,1));for(b=0;g>b;b++)d[b]&&d[b].finish&&d[b].finish.call(this);delete c.finish})}}),n.each([\"toggle\",\"show\",\"hide\"],function(a,b){var c=n.fn[b];n.fn[b]=function(a,d,e){return null==a||\"boolean\"==typeof a?c.apply(this,arguments):this.animate(Tb(b,!0),a,d,e)}}),n.each({slideDown:Tb(\"show\"),slideUp:Tb(\"hide\"),slideToggle:Tb(\"toggle\"),fadeIn:{opacity:\"show\"},fadeOut:{opacity:\"hide\"},fadeToggle:{opacity:\"toggle\"}},function(a,b){n.fn[a]=function(a,c,d){return this.animate(b,a,c,d)}}),n.timers=[],n.fx.tick=function(){var a,b=0,c=n.timers;for(Lb=n.now();b<c.length;b++)a=c[b],a()||c[b]!==a||c.splice(b--,1);c.length||n.fx.stop(),Lb=void 0},n.fx.timer=function(a){n.timers.push(a),a()?n.fx.start():n.timers.pop()},n.fx.interval=13,n.fx.start=function(){Mb||(Mb=setInterval(n.fx.tick,n.fx.interval))},n.fx.stop=function(){clearInterval(Mb),Mb=null},n.fx.speeds={slow:600,fast:200,_default:400},n.fn.delay=function(a,b){return a=n.fx?n.fx.speeds[a]||a:a,b=b||\"fx\",this.queue(b,function(b,c){var d=setTimeout(b,a);c.stop=function(){clearTimeout(d)}})},function(){var a=l.createElement(\"input\"),b=l.createElement(\"select\"),c=b.appendChild(l.createElement(\"option\"));a.type=\"checkbox\",k.checkOn=\"\"!==a.value,k.optSelected=c.selected,b.disabled=!0,k.optDisabled=!c.disabled,a=l.createElement(\"input\"),a.value=\"t\",a.type=\"radio\",k.radioValue=\"t\"===a.value}();var Yb,Zb,$b=n.expr.attrHandle;n.fn.extend({attr:function(a,b){return J(this,n.attr,a,b,arguments.length>1)},removeAttr:function(a){return this.each(function(){n.removeAttr(this,a)})}}),n.extend({attr:function(a,b,c){var d,e,f=a.nodeType;if(a&&3!==f&&8!==f&&2!==f)return typeof a.getAttribute===U?n.prop(a,b,c):(1===f&&n.isXMLDoc(a)||(b=b.toLowerCase(),d=n.attrHooks[b]||(n.expr.match.bool.test(b)?Zb:Yb)),void 0===c?d&&\"get\"in d&&null!==(e=d.get(a,b))?e:(e=n.find.attr(a,b),null==e?void 0:e):null!==c?d&&\"set\"in d&&void 0!==(e=d.set(a,c,b))?e:(a.setAttribute(b,c+\"\"),c):void n.removeAttr(a,b))\n    4: },removeAttr:function(a,b){var c,d,e=0,f=b&&b.match(E);if(f&&1===a.nodeType)while(c=f[e++])d=n.propFix[c]||c,n.expr.match.bool.test(c)&&(a[d]=!1),a.removeAttribute(c)},attrHooks:{type:{set:function(a,b){if(!k.radioValue&&\"radio\"===b&&n.nodeName(a,\"input\")){var c=a.value;return a.setAttribute(\"type\",b),c&&(a.value=c),b}}}}}),Zb={set:function(a,b,c){return b===!1?n.removeAttr(a,c):a.setAttribute(c,c),c}},n.each(n.expr.match.bool.source.match(/\\w+/g),function(a,b){var c=$b[b]||n.find.attr;$b[b]=function(a,b,d){var e,f;return d||(f=$b[b],$b[b]=e,e=null!=c(a,b,d)?b.toLowerCase():null,$b[b]=f),e}});var _b=/^(?:input|select|textarea|button)$/i;n.fn.extend({prop:function(a,b){return J(this,n.prop,a,b,arguments.length>1)},removeProp:function(a){return this.each(function(){delete this[n.propFix[a]||a]})}}),n.extend({propFix:{\"for\":\"htmlFor\",\"class\":\"className\"},prop:function(a,b,c){var d,e,f,g=a.nodeType;if(a&&3!==g&&8!==g&&2!==g)return f=1!==g||!n.isXMLDoc(a),f&&(b=n.propFix[b]||b,e=n.propHooks[b]),void 0!==c?e&&\"set\"in e&&void 0!==(d=e.set(a,c,b))?d:a[b]=c:e&&\"get\"in e&&null!==(d=e.get(a,b))?d:a[b]},propHooks:{tabIndex:{get:function(a){return a.hasAttribute(\"tabindex\")||_b.test(a.nodeName)||a.href?a.tabIndex:-1}}}}),k.optSelected||(n.propHooks.selected={get:function(a){var b=a.parentNode;return b&&b.parentNode&&b.parentNode.selectedIndex,null}}),n.each([\"tabIndex\",\"readOnly\",\"maxLength\",\"cellSpacing\",\"cellPadding\",\"rowSpan\",\"colSpan\",\"useMap\",\"frameBorder\",\"contentEditable\"],function(){n.propFix[this.toLowerCase()]=this});var ac=/[\\t\\r\\n\\f]/g;n.fn.extend({addClass:function(a){var b,c,d,e,f,g,h=\"string\"==typeof a&&a,i=0,j=this.length;if(n.isFunction(a))return this.each(function(b){n(this).addClass(a.call(this,b,this.className))});if(h)for(b=(a||\"\").match(E)||[];j>i;i++)if(c=this[i],d=1===c.nodeType&&(c.className?(\" \"+c.className+\" \").replace(ac,\" \"):\" \")){f=0;while(e=b[f++])d.indexOf(\" \"+e+\" \")<0&&(d+=e+\" \");g=n.trim(d),c.className!==g&&(c.className=g)}return this},removeClass:function(a){var b,c,d,e,f,g,h=0===arguments.length||\"string\"==typeof a&&a,i=0,j=this.length;if(n.isFunction(a))return this.each(function(b){n(this).removeClass(a.call(this,b,this.className))});if(h)for(b=(a||\"\").match(E)||[];j>i;i++)if(c=this[i],d=1===c.nodeType&&(c.className?(\" \"+c.className+\" \").replace(ac,\" \"):\"\")){f=0;while(e=b[f++])while(d.indexOf(\" \"+e+\" \")>=0)d=d.replace(\" \"+e+\" \",\" \");g=a?n.trim(d):\"\",c.className!==g&&(c.className=g)}return this},toggleClass:function(a,b){var c=typeof a;return\"boolean\"==typeof b&&\"string\"===c?b?this.addClass(a):this.removeClass(a):this.each(n.isFunction(a)?function(c){n(this).toggleClass(a.call(this,c,this.className,b),b)}:function(){if(\"string\"===c){var b,d=0,e=n(this),f=a.match(E)||[];while(b=f[d++])e.hasClass(b)?e.removeClass(b):e.addClass(b)}else(c===U||\"boolean\"===c)&&(this.className&&L.set(this,\"__className__\",this.className),this.className=this.className||a===!1?\"\":L.get(this,\"__className__\")||\"\")})},hasClass:function(a){for(var b=\" \"+a+\" \",c=0,d=this.length;d>c;c++)if(1===this[c].nodeType&&(\" \"+this[c].className+\" \").replace(ac,\" \").indexOf(b)>=0)return!0;return!1}});var bc=/\\r/g;n.fn.extend({val:function(a){var b,c,d,e=this[0];{if(arguments.length)return d=n.isFunction(a),this.each(function(c){var e;1===this.nodeType&&(e=d?a.call(this,c,n(this).val()):a,null==e?e=\"\":\"number\"==typeof e?e+=\"\":n.isArray(e)&&(e=n.map(e,function(a){return null==a?\"\":a+\"\"})),b=n.valHooks[this.type]||n.valHooks[this.nodeName.toLowerCase()],b&&\"set\"in b&&void 0!==b.set(this,e,\"value\")||(this.value=e))});if(e)return b=n.valHooks[e.type]||n.valHooks[e.nodeName.toLowerCase()],b&&\"get\"in b&&void 0!==(c=b.get(e,\"value\"))?c:(c=e.value,\"string\"==typeof c?c.replace(bc,\"\"):null==c?\"\":c)}}}),n.extend({valHooks:{option:{get:function(a){var b=n.find.attr(a,\"value\");return null!=b?b:n.trim(n.text(a))}},select:{get:function(a){for(var b,c,d=a.options,e=a.selectedIndex,f=\"select-one\"===a.type||0>e,g=f?null:[],h=f?e+1:d.length,i=0>e?h:f?e:0;h>i;i++)if(c=d[i],!(!c.selected&&i!==e||(k.optDisabled?c.disabled:null!==c.getAttribute(\"disabled\"))||c.parentNode.disabled&&n.nodeName(c.parentNode,\"optgroup\"))){if(b=n(c).val(),f)return b;g.push(b)}return g},set:function(a,b){var c,d,e=a.options,f=n.makeArray(b),g=e.length;while(g--)d=e[g],(d.selected=n.inArray(d.value,f)>=0)&&(c=!0);return c||(a.selectedIndex=-1),f}}}}),n.each([\"radio\",\"checkbox\"],function(){n.valHooks[this]={set:function(a,b){return n.isArray(b)?a.checked=n.inArray(n(a).val(),b)>=0:void 0}},k.checkOn||(n.valHooks[this].get=function(a){return null===a.getAttribute(\"value\")?\"on\":a.value})}),n.each(\"blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu\".split(\" \"),function(a,b){n.fn[b]=function(a,c){return arguments.length>0?this.on(b,null,a,c):this.trigger(b)}}),n.fn.extend({hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)},bind:function(a,b,c){return this.on(a,null,b,c)},unbind:function(a,b){return this.off(a,null,b)},delegate:function(a,b,c,d){return this.on(b,a,c,d)},undelegate:function(a,b,c){return 1===arguments.length?this.off(a,\"**\"):this.off(b,a||\"**\",c)}});var cc=n.now(),dc=/\\?/;n.parseJSON=function(a){return JSON.parse(a+\"\")},n.parseXML=function(a){var b,c;if(!a||\"string\"!=typeof a)return null;try{c=new DOMParser,b=c.parseFromString(a,\"text/xml\")}catch(d){b=void 0}return(!b||b.getElementsByTagName(\"parsererror\").length)&&n.error(\"Invalid XML: \"+a),b};var ec,fc,gc=/#.*$/,hc=/([?&])_=[^&]*/,ic=/^(.*?):[ \\t]*([^\\r\\n]*)$/gm,jc=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,kc=/^(?:GET|HEAD)$/,lc=/^\\/\\//,mc=/^([\\w.+-]+:)(?:\\/\\/(?:[^\\/?#]*@|)([^\\/?#:]*)(?::(\\d+)|)|)/,nc={},oc={},pc=\"*/\".concat(\"*\");try{fc=location.href}catch(qc){fc=l.createElement(\"a\"),fc.href=\"\",fc=fc.href}ec=mc.exec(fc.toLowerCase())||[];function rc(a){return function(b,c){\"string\"!=typeof b&&(c=b,b=\"*\");var d,e=0,f=b.toLowerCase().match(E)||[];if(n.isFunction(c))while(d=f[e++])\"+\"===d[0]?(d=d.slice(1)||\"*\",(a[d]=a[d]||[]).unshift(c)):(a[d]=a[d]||[]).push(c)}}function sc(a,b,c,d){var e={},f=a===oc;function g(h){var i;return e[h]=!0,n.each(a[h]||[],function(a,h){var j=h(b,c,d);return\"string\"!=typeof j||f||e[j]?f?!(i=j):void 0:(b.dataTypes.unshift(j),g(j),!1)}),i}return g(b.dataTypes[0])||!e[\"*\"]&&g(\"*\")}function tc(a,b){var c,d,e=n.ajaxSettings.flatOptions||{};for(c in b)void 0!==b[c]&&((e[c]?a:d||(d={}))[c]=b[c]);return d&&n.extend(!0,a,d),a}function uc(a,b,c){var d,e,f,g,h=a.contents,i=a.dataTypes;while(\"*\"===i[0])i.shift(),void 0===d&&(d=a.mimeType||b.getResponseHeader(\"Content-Type\"));if(d)for(e in h)if(h[e]&&h[e].test(d)){i.unshift(e);break}if(i[0]in c)f=i[0];else{for(e in c){if(!i[0]||a.converters[e+\" \"+i[0]]){f=e;break}g||(g=e)}f=f||g}return f?(f!==i[0]&&i.unshift(f),c[f]):void 0}function vc(a,b,c,d){var e,f,g,h,i,j={},k=a.dataTypes.slice();if(k[1])for(g in a.converters)j[g.toLowerCase()]=a.converters[g];f=k.shift();while(f)if(a.responseFields[f]&&(c[a.responseFields[f]]=b),!i&&d&&a.dataFilter&&(b=a.dataFilter(b,a.dataType)),i=f,f=k.shift())if(\"*\"===f)f=i;else if(\"*\"!==i&&i!==f){if(g=j[i+\" \"+f]||j[\"* \"+f],!g)for(e in j)if(h=e.split(\" \"),h[1]===f&&(g=j[i+\" \"+h[0]]||j[\"* \"+h[0]])){g===!0?g=j[e]:j[e]!==!0&&(f=h[0],k.unshift(h[1]));break}if(g!==!0)if(g&&a[\"throws\"])b=g(b);else try{b=g(b)}catch(l){return{state:\"parsererror\",error:g?l:\"No conversion from \"+i+\" to \"+f}}}return{state:\"success\",data:b}}n.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:fc,type:\"GET\",isLocal:jc.test(ec[1]),global:!0,processData:!0,async:!0,contentType:\"application/x-www-form-urlencoded; charset=UTF-8\",accepts:{\"*\":pc,text:\"text/plain\",html:\"text/html\",xml:\"application/xml, text/xml\",json:\"application/json, text/javascript\"},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:\"responseXML\",text:\"responseText\",json:\"responseJSON\"},converters:{\"* text\":String,\"text html\":!0,\"text json\":n.parseJSON,\"text xml\":n.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(a,b){return b?tc(tc(a,n.ajaxSettings),b):tc(n.ajaxSettings,a)},ajaxPrefilter:rc(nc),ajaxTransport:rc(oc),ajax:function(a,b){\"object\"==typeof a&&(b=a,a=void 0),b=b||{};var c,d,e,f,g,h,i,j,k=n.ajaxSetup({},b),l=k.context||k,m=k.context&&(l.nodeType||l.jquery)?n(l):n.event,o=n.Deferred(),p=n.Callbacks(\"once memory\"),q=k.statusCode||{},r={},s={},t=0,u=\"canceled\",v={readyState:0,getResponseHeader:function(a){var b;if(2===t){if(!f){f={};while(b=ic.exec(e))f[b[1].toLowerCase()]=b[2]}b=f[a.toLowerCase()]}return null==b?null:b},getAllResponseHeaders:function(){return 2===t?e:null},setRequestHeader:function(a,b){var c=a.toLowerCase();return t||(a=s[c]=s[c]||a,r[a]=b),this},overrideMimeType:function(a){return t||(k.mimeType=a),this},statusCode:function(a){var b;if(a)if(2>t)for(b in a)q[b]=[q[b],a[b]];else v.always(a[v.status]);return this},abort:function(a){var b=a||u;return c&&c.abort(b),x(0,b),this}};if(o.promise(v).complete=p.add,v.success=v.done,v.error=v.fail,k.url=((a||k.url||fc)+\"\").replace(gc,\"\").replace(lc,ec[1]+\"//\"),k.type=b.method||b.type||k.method||k.type,k.dataTypes=n.trim(k.dataType||\"*\").toLowerCase().match(E)||[\"\"],null==k.crossDomain&&(h=mc.exec(k.url.toLowerCase()),k.crossDomain=!(!h||h[1]===ec[1]&&h[2]===ec[2]&&(h[3]||(\"http:\"===h[1]?\"80\":\"443\"))===(ec[3]||(\"http:\"===ec[1]?\"80\":\"443\")))),k.data&&k.processData&&\"string\"!=typeof k.data&&(k.data=n.param(k.data,k.traditional)),sc(nc,k,b,v),2===t)return v;i=k.global,i&&0===n.active++&&n.event.trigger(\"ajaxStart\"),k.type=k.type.toUpperCase(),k.hasContent=!kc.test(k.type),d=k.url,k.hasContent||(k.data&&(d=k.url+=(dc.test(d)?\"&\":\"?\")+k.data,delete k.data),k.cache===!1&&(k.url=hc.test(d)?d.replace(hc,\"$1_=\"+cc++):d+(dc.test(d)?\"&\":\"?\")+\"_=\"+cc++)),k.ifModified&&(n.lastModified[d]&&v.setRequestHeader(\"If-Modified-Since\",n.lastModified[d]),n.etag[d]&&v.setRequestHeader(\"If-None-Match\",n.etag[d])),(k.data&&k.hasContent&&k.contentType!==!1||b.contentType)&&v.setRequestHeader(\"Content-Type\",k.contentType),v.setRequestHeader(\"Accept\",k.dataTypes[0]&&k.accepts[k.dataTypes[0]]?k.accepts[k.dataTypes[0]]+(\"*\"!==k.dataTypes[0]?\", \"+pc+\"; q=0.01\":\"\"):k.accepts[\"*\"]);for(j in k.headers)v.setRequestHeader(j,k.headers[j]);if(k.beforeSend&&(k.beforeSend.call(l,v,k)===!1||2===t))return v.abort();u=\"abort\";for(j in{success:1,error:1,complete:1})v[j](k[j]);if(c=sc(oc,k,b,v)){v.readyState=1,i&&m.trigger(\"ajaxSend\",[v,k]),k.async&&k.timeout>0&&(g=setTimeout(function(){v.abort(\"timeout\")},k.timeout));try{t=1,c.send(r,x)}catch(w){if(!(2>t))throw w;x(-1,w)}}else x(-1,\"No Transport\");function x(a,b,f,h){var j,r,s,u,w,x=b;2!==t&&(t=2,g&&clearTimeout(g),c=void 0,e=h||\"\",v.readyState=a>0?4:0,j=a>=200&&300>a||304===a,f&&(u=uc(k,v,f)),u=vc(k,u,v,j),j?(k.ifModified&&(w=v.getResponseHeader(\"Last-Modified\"),w&&(n.lastModified[d]=w),w=v.getResponseHeader(\"etag\"),w&&(n.etag[d]=w)),204===a||\"HEAD\"===k.type?x=\"nocontent\":304===a?x=\"notmodified\":(x=u.state,r=u.data,s=u.error,j=!s)):(s=x,(a||!x)&&(x=\"error\",0>a&&(a=0))),v.status=a,v.statusText=(b||x)+\"\",j?o.resolveWith(l,[r,x,v]):o.rejectWith(l,[v,x,s]),v.statusCode(q),q=void 0,i&&m.trigger(j?\"ajaxSuccess\":\"ajaxError\",[v,k,j?r:s]),p.fireWith(l,[v,x]),i&&(m.trigger(\"ajaxComplete\",[v,k]),--n.active||n.event.trigger(\"ajaxStop\")))}return v},getJSON:function(a,b,c){return n.get(a,b,c,\"json\")},getScript:function(a,b){return n.get(a,void 0,b,\"script\")}}),n.each([\"get\",\"post\"],function(a,b){n[b]=function(a,c,d,e){return n.isFunction(c)&&(e=e||d,d=c,c=void 0),n.ajax({url:a,type:b,dataType:e,data:c,success:d})}}),n.each([\"ajaxStart\",\"ajaxStop\",\"ajaxComplete\",\"ajaxError\",\"ajaxSuccess\",\"ajaxSend\"],function(a,b){n.fn[b]=function(a){return this.on(b,a)}}),n._evalUrl=function(a){return n.ajax({url:a,type:\"GET\",dataType:\"script\",async:!1,global:!1,\"throws\":!0})},n.fn.extend({wrapAll:function(a){var b;return n.isFunction(a)?this.each(function(b){n(this).wrapAll(a.call(this,b))}):(this[0]&&(b=n(a,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&b.insertBefore(this[0]),b.map(function(){var a=this;while(a.firstElementChild)a=a.firstElementChild;return a}).append(this)),this)},wrapInner:function(a){return this.each(n.isFunction(a)?function(b){n(this).wrapInner(a.call(this,b))}:function(){var b=n(this),c=b.contents();c.length?c.wrapAll(a):b.append(a)})},wrap:function(a){var b=n.isFunction(a);return this.each(function(c){n(this).wrapAll(b?a.call(this,c):a)})},unwrap:function(){return this.parent().each(function(){n.nodeName(this,\"body\")||n(this).replaceWith(this.childNodes)}).end()}}),n.expr.filters.hidden=function(a){return a.offsetWidth<=0&&a.offsetHeight<=0},n.expr.filters.visible=function(a){return!n.expr.filters.hidden(a)};var wc=/%20/g,xc=/\\[\\]$/,yc=/\\r?\\n/g,zc=/^(?:submit|button|image|reset|file)$/i,Ac=/^(?:input|select|textarea|keygen)/i;function Bc(a,b,c,d){var e;if(n.isArray(b))n.each(b,function(b,e){c||xc.test(a)?d(a,e):Bc(a+\"[\"+(\"object\"==typeof e?b:\"\")+\"]\",e,c,d)});else if(c||\"object\"!==n.type(b))d(a,b);else for(e in b)Bc(a+\"[\"+e+\"]\",b[e],c,d)}n.param=function(a,b){var c,d=[],e=function(a,b){b=n.isFunction(b)?b():null==b?\"\":b,d[d.length]=encodeURIComponent(a)+\"=\"+encodeURIComponent(b)};if(void 0===b&&(b=n.ajaxSettings&&n.ajaxSettings.traditional),n.isArray(a)||a.jquery&&!n.isPlainObject(a))n.each(a,function(){e(this.name,this.value)});else for(c in a)Bc(c,a[c],b,e);return d.join(\"&\").replace(wc,\"+\")},n.fn.extend({serialize:function(){return n.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var a=n.prop(this,\"elements\");return a?n.makeArray(a):this}).filter(function(){var a=this.type;return this.name&&!n(this).is(\":disabled\")&&Ac.test(this.nodeName)&&!zc.test(a)&&(this.checked||!T.test(a))}).map(function(a,b){var c=n(this).val();return null==c?null:n.isArray(c)?n.map(c,function(a){return{name:b.name,value:a.replace(yc,\"\\r\\n\")}}):{name:b.name,value:c.replace(yc,\"\\r\\n\")}}).get()}}),n.ajaxSettings.xhr=function(){try{return new XMLHttpRequest}catch(a){}};var Cc=0,Dc={},Ec={0:200,1223:204},Fc=n.ajaxSettings.xhr();a.ActiveXObject&&n(a).on(\"unload\",function(){for(var a in Dc)Dc[a]()}),k.cors=!!Fc&&\"withCredentials\"in Fc,k.ajax=Fc=!!Fc,n.ajaxTransport(function(a){var b;return k.cors||Fc&&!a.crossDomain?{send:function(c,d){var e,f=a.xhr(),g=++Cc;if(f.open(a.type,a.url,a.async,a.username,a.password),a.xhrFields)for(e in a.xhrFields)f[e]=a.xhrFields[e];a.mimeType&&f.overrideMimeType&&f.overrideMimeType(a.mimeType),a.crossDomain||c[\"X-Requested-With\"]||(c[\"X-Requested-With\"]=\"XMLHttpRequest\");for(e in c)f.setRequestHeader(e,c[e]);b=function(a){return function(){b&&(delete Dc[g],b=f.onload=f.onerror=null,\"abort\"===a?f.abort():\"error\"===a?d(f.status,f.statusText):d(Ec[f.status]||f.status,f.statusText,\"string\"==typeof f.responseText?{text:f.responseText}:void 0,f.getAllResponseHeaders()))}},f.onload=b(),f.onerror=b(\"error\"),b=Dc[g]=b(\"abort\");try{f.send(a.hasContent&&a.data||null)}catch(h){if(b)throw h}},abort:function(){b&&b()}}:void 0}),n.ajaxSetup({accepts:{script:\"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript\"},contents:{script:/(?:java|ecma)script/},converters:{\"text script\":function(a){return n.globalEval(a),a}}}),n.ajaxPrefilter(\"script\",function(a){void 0===a.cache&&(a.cache=!1),a.crossDomain&&(a.type=\"GET\")}),n.ajaxTransport(\"script\",function(a){if(a.crossDomain){var b,c;return{send:function(d,e){b=n(\"<script>\").prop({async:!0,charset:a.scriptCharset,src:a.url}).on(\"load error\",c=function(a){b.remove(),c=null,a&&e(\"error\"===a.type?404:200,a.type)}),l.head.appendChild(b[0])},abort:function(){c&&c()}}}});var Gc=[],Hc=/(=)\\?(?=&|$)|\\?\\?/;n.ajaxSetup({jsonp:\"callback\",jsonpCallback:function(){var a=Gc.pop()||n.expando+\"_\"+cc++;return this[a]=!0,a}}),n.ajaxPrefilter(\"json jsonp\",function(b,c,d){var e,f,g,h=b.jsonp!==!1&&(Hc.test(b.url)?\"url\":\"string\"==typeof b.data&&!(b.contentType||\"\").indexOf(\"application/x-www-form-urlencoded\")&&Hc.test(b.data)&&\"data\");return h||\"jsonp\"===b.dataTypes[0]?(e=b.jsonpCallback=n.isFunction(b.jsonpCallback)?b.jsonpCallback():b.jsonpCallback,h?b[h]=b[h].replace(Hc,\"$1\"+e):b.jsonp!==!1&&(b.url+=(dc.test(b.url)?\"&\":\"?\")+b.jsonp+\"=\"+e),b.converters[\"script json\"]=function(){return g||n.error(e+\" was not called\"),g[0]},b.dataTypes[0]=\"json\",f=a[e],a[e]=function(){g=arguments},d.always(function(){a[e]=f,b[e]&&(b.jsonpCallback=c.jsonpCallback,Gc.push(e)),g&&n.isFunction(f)&&f(g[0]),g=f=void 0}),\"script\"):void 0}),n.parseHTML=function(a,b,c){if(!a||\"string\"!=typeof a)return null;\"boolean\"==typeof b&&(c=b,b=!1),b=b||l;var d=v.exec(a),e=!c&&[];return d?[b.createElement(d[1])]:(d=n.buildFragment([a],b,e),e&&e.length&&n(e).remove(),n.merge([],d.childNodes))};var Ic=n.fn.load;n.fn.load=function(a,b,c){if(\"string\"!=typeof a&&Ic)return Ic.apply(this,arguments);var d,e,f,g=this,h=a.indexOf(\" \");return h>=0&&(d=n.trim(a.slice(h)),a=a.slice(0,h)),n.isFunction(b)?(c=b,b=void 0):b&&\"object\"==typeof b&&(e=\"POST\"),g.length>0&&n.ajax({url:a,type:e,dataType:\"html\",data:b}).done(function(a){f=arguments,g.html(d?n(\"<div>\").append(n.parseHTML(a)).find(d):a)}).complete(c&&function(a,b){g.each(c,f||[a.responseText,b,a])}),this},n.expr.filters.animated=function(a){return n.grep(n.timers,function(b){return a===b.elem}).length};var Jc=a.document.documentElement;function Kc(a){return n.isWindow(a)?a:9===a.nodeType&&a.defaultView}n.offset={setOffset:function(a,b,c){var d,e,f,g,h,i,j,k=n.css(a,\"position\"),l=n(a),m={};\"static\"===k&&(a.style.position=\"relative\"),h=l.offset(),f=n.css(a,\"top\"),i=n.css(a,\"left\"),j=(\"absolute\"===k||\"fixed\"===k)&&(f+i).indexOf(\"auto\")>-1,j?(d=l.position(),g=d.top,e=d.left):(g=parseFloat(f)||0,e=parseFloat(i)||0),n.isFunction(b)&&(b=b.call(a,c,h)),null!=b.top&&(m.top=b.top-h.top+g),null!=b.left&&(m.left=b.left-h.left+e),\"using\"in b?b.using.call(a,m):l.css(m)}},n.fn.extend({offset:function(a){if(arguments.length)return void 0===a?this:this.each(function(b){n.offset.setOffset(this,a,b)});var b,c,d=this[0],e={top:0,left:0},f=d&&d.ownerDocument;if(f)return b=f.documentElement,n.contains(b,d)?(typeof d.getBoundingClientRect!==U&&(e=d.getBoundingClientRect()),c=Kc(f),{top:e.top+c.pageYOffset-b.clientTop,left:e.left+c.pageXOffset-b.clientLeft}):e},position:function(){if(this[0]){var a,b,c=this[0],d={top:0,left:0};return\"fixed\"===n.css(c,\"position\")?b=c.getBoundingClientRect():(a=this.offsetParent(),b=this.offset(),n.nodeName(a[0],\"html\")||(d=a.offset()),d.top+=n.css(a[0],\"borderTopWidth\",!0),d.left+=n.css(a[0],\"borderLeftWidth\",!0)),{top:b.top-d.top-n.css(c,\"marginTop\",!0),left:b.left-d.left-n.css(c,\"marginLeft\",!0)}}},offsetParent:function(){return this.map(function(){var a=this.offsetParent||Jc;while(a&&!n.nodeName(a,\"html\")&&\"static\"===n.css(a,\"position\"))a=a.offsetParent;return a||Jc})}}),n.each({scrollLeft:\"pageXOffset\",scrollTop:\"pageYOffset\"},function(b,c){var d=\"pageYOffset\"===c;n.fn[b]=function(e){return J(this,function(b,e,f){var g=Kc(b);return void 0===f?g?g[c]:b[e]:void(g?g.scrollTo(d?a.pageXOffset:f,d?f:a.pageYOffset):b[e]=f)},b,e,arguments.length,null)}}),n.each([\"top\",\"left\"],function(a,b){n.cssHooks[b]=yb(k.pixelPosition,function(a,c){return c?(c=xb(a,b),vb.test(c)?n(a).position()[b]+\"px\":c):void 0})}),n.each({Height:\"height\",Width:\"width\"},function(a,b){n.each({padding:\"inner\"+a,content:b,\"\":\"outer\"+a},function(c,d){n.fn[d]=function(d,e){var f=arguments.length&&(c||\"boolean\"!=typeof d),g=c||(d===!0||e===!0?\"margin\":\"border\");return J(this,function(b,c,d){var e;return n.isWindow(b)?b.document.documentElement[\"client\"+a]:9===b.nodeType?(e=b.documentElement,Math.max(b.body[\"scroll\"+a],e[\"scroll\"+a],b.body[\"offset\"+a],e[\"offset\"+a],e[\"client\"+a])):void 0===d?n.css(b,c,g):n.style(b,c,d,g)},b,f?d:void 0,f,null)}})}),n.fn.size=function(){return this.length},n.fn.andSelf=n.fn.addBack,\"function\"==typeof define&&define.amd&&define(\"jquery\",[],function(){return n});var Lc=a.jQuery,Mc=a.$;return n.noConflict=function(b){return a.$===n&&(a.$=Mc),b&&a.jQuery===n&&(a.jQuery=Lc),n},typeof b===U&&(a.jQuery=a.$=n),n});\n    5  \n\n/Users/kirkcp/Documents/node_play/slatemail_dist/slatemail.app/Contents/Resources/app.nw/node_modules/jquery/src/ajax/xhr.js:\n   32  }\n   33  \n   34: support.cors = !!xhrSupported && ( \"withCredentials\" in xhrSupported );\n   35  support.ajax = xhrSupported = !!xhrSupported;\n   36  \n\n/Users/kirkcp/Documents/node_play/slatemail_dist/slatemail.app/Contents/Resources/app.nw/node_modules/jquery/src/sizzle/test/jquery.js:\n 8466  // Determine support properties\n 8467  xhrSupported = jQuery.ajaxSettings.xhr();\n 8468: jQuery.support.cors = !!xhrSupported && ( \"withCredentials\" in xhrSupported );\n 8469  xhrSupported = jQuery.support.ajax = !!xhrSupported;\n 8470  \n\n/Users/kirkcp/Documents/node_play/slatemail_dist/slatemail.app/Contents/Resources/app.nw/node_modules/nodemailer/node_modules/hyperquest/index.js:\n  124          agent: false,\n  125          headers: headers,\n  126:         withCredentials: this.options.withCredentials\n  127      };\n  128      if (protocol === 'https:') {\n\n/Users/kirkcp/Documents/node_play/slatemail_dist/slatemail.app/Contents/Resources/app.nw/node_modules/nodemailer/node_modules/nodemailer-direct-transport/node_modules/smtp-connection/src/smtp-connection.js:\n   21   *  * **auth** - authentication object {user:'...', pass:'...'}\n   22   *  * **ignoreTLS** - ignore server support for STARTTLS\n   23:  *  * **tls** - options for createCredentials\n   24   *  * **debug** - if true, emits 'log' events with all traffic between client and server\n   25   *  * **localAddress** - outbound address to bind to (see: http://nodejs.org/api/net.html#net_net_connect_options_connectionlistener)\n\n/Users/kirkcp/Documents/node_play/slatemail_dist/slatemail.app/Contents/Resources/app.nw/node_modules/nodemailer/node_modules/nodemailer-smtp-transport/node_modules/smtp-connection/src/smtp-connection.js:\n   21   *  * **auth** - authentication object {user:'...', pass:'...'}\n   22   *  * **ignoreTLS** - ignore server support for STARTTLS\n   23:  *  * **tls** - options for createCredentials\n   24   *  * **debug** - if true, emits 'log' events with all traffic between client and server\n   25   *  * **localAddress** - outbound address to bind to (see: http://nodejs.org/api/net.html#net_net_connect_options_connectionlistener)\n\n/Users/kirkcp/Documents/node_play/slatemail_dist/slatemail.app/Contents/Resources/app.nw/node_modules/nodemailer-smtp-transport/node_modules/smtp-connection/src/smtp-connection.js:\n   21   *  * **auth** - authentication object {user:'...', pass:'...'}\n   22   *  * **ignoreTLS** - ignore server support for STARTTLS\n   23:  *  * **tls** - options for createCredentials\n   24   *  * **debug** - if true, emits 'log' events with all traffic between client and server\n   25   *  * **localAddress** - outbound address to bind to (see: http://nodejs.org/api/net.html#net_net_connect_options_connectionlistener)\n\n2183 matches across 61 files\n",
			"settings":
			{
				"buffer_size": 644279,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "modules/projectView.js",
			"settings":
			{
				"buffer_size": 4633,
				"line_ending": "Unix"
			}
		},
		{
			"file": "modules/syncer.js",
			"settings":
			{
				"buffer_size": 11701,
				"line_ending": "Unix"
			}
		},
		{
			"file": "modules/projectList.jsx",
			"settings":
			{
				"buffer_size": 1609,
				"line_ending": "Unix"
			}
		},
		{
			"file": "modules/treeView.js",
			"settings":
			{
				"buffer_size": 2258,
				"line_ending": "Unix"
			}
		},
		{
			"file": "preferences/preferences.json",
			"settings":
			{
				"buffer_size": 324,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "{\n	\"internal\":{\n	  \"user\": \"Chris.Kirk@slate.com\",\n	  \"password\": \"@z919XLWslUo\",\n	  \"host\": \"outlook.office365.com\",\n	  \"port\": 993,\n	  \"tls\": true\n	},\n	\"external\":{\n		\"host\":\"smtp.office365.com\",\n		\"port\":587,\n		\"auth\":{\n			\"user\": \"Chris.Kirk@slate.com\",\n			\"pass\": \"@z919XLWslUo\"\n		},\n		\"secure\": false,\n		\"tls\": {\n        \"ciphers\":\"SSLv3\"\n    }\n	}\n}",
			"settings":
			{
				"buffer_size": 355,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 330.0,
		"selected_items":
		[
			[
				"find",
				"Finder: Open here"
			],
			[
				"sort",
				"Sort Lines"
			],
			[
				"set syntax: jsx",
				"Set Syntax: JSX"
			],
			[
				"lint",
				"SublimeLinter: Lint This View"
			],
			[
				"set syntax: react",
				"Set Syntax: React JSX"
			],
			[
				"syntax: jsx",
				"Set Syntax: JSX"
			],
			[
				"rena",
				"File: Rename"
			],
			[
				"rename",
				"File: Rename"
			],
			[
				"term",
				"Open in terminal"
			],
			[
				"terminal",
				"Open in terminal"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"gr",
				"Grunt"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"nog",
				"Snippet: noHighlight"
			],
			[
				"now",
				"Snippet: scrollWin"
			],
			[
				"no",
				"Snippet: noHighlight"
			],
			[
				"packa",
				"Package Control: List Packages"
			],
			[
				"bookmark",
				"Bookmarks: Toggle"
			],
			[
				"bookkm",
				"Bookmarks: Clear All"
			],
			[
				"wra",
				"Word Wrap: Toggle"
			],
			[
				"nonb",
				"Snippet: insert non-breaking space"
			],
			[
				"disab",
				"Package Control: Disable Package"
			],
			[
				"package",
				"Package Control: List Packages"
			],
			[
				"dsiable ",
				"Package Control: Disable Package"
			],
			[
				"scope ",
				"Scope Hunter: Show Scope Under Cursor(s)"
			],
			[
				"scope",
				"Scope Hunter: Toggle Instant Scoper"
			],
			[
				"disalb",
				"Package Control: Disable Package"
			],
			[
				"jsx",
				"Set Syntax: JSX"
			],
			[
				"scope s",
				"Scope Hunter: Show Scope Under Cursor(s)"
			],
			[
				"set syn",
				"Set Syntax: JSX"
			],
			[
				"scop hu",
				"Scope Hunter: Toggle Instant Scoper"
			],
			[
				"set sy",
				"Set Syntax: JSX"
			],
			[
				"scope hunter",
				"Scope Hunter: Toggle Instant Scoper"
			],
			[
				"gru",
				"Grunt"
			],
			[
				"sublimelinter",
				"SublimeLinter: Toggle Linter"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"remove p",
				"Package Control: Remove Package"
			],
			[
				"disable",
				"Package Control: Disable Package"
			],
			[
				"convert ",
				"Indentation: Convert to Tabs"
			],
			[
				"reid",
				"Indentation: Reindent Lines"
			],
			[
				"left",
				"Snippet: insert left guillmet arrows"
			],
			[
				"disabe",
				"Package Control: Disable Package"
			],
			[
				"disa",
				"Package Control: Disable Package"
			],
			[
				"forma",
				"Format: Javascript"
			],
			[
				"form",
				"Pretty JSON: Format (Pretty Print) JSON"
			],
			[
				"pad",
				"Snippet: pad"
			],
			[
				"color",
				"ColorSchemeSelector: Select Color Scheme"
			],
			[
				"colors",
				"ColorSchemeSelector: Random Color Scheme"
			],
			[
				"select",
				"ColorSchemeSelector: Select Color Scheme"
			],
			[
				"html",
				"HTMLBeautify"
			],
			[
				"color sc",
				"ColorSchemeSelector: Select Color Scheme"
			],
			[
				"rand",
				"ColorSchemeSelector: Random Color Scheme"
			],
			[
				"rando",
				"ColorSchemeSelector: Random Color Scheme"
			],
			[
				"random",
				"ColorSchemeSelector: Random Color Scheme"
			],
			[
				"format",
				"Pretty JSON: Format (Pretty Print) JSON"
			],
			[
				"next color",
				"ColorSchemeSelector: Next Color Scheme"
			],
			[
				"random ",
				"ColorSchemeSelector: Random Color Scheme"
			],
			[
				"save ",
				"Project: Save As"
			],
			[
				"grunt",
				"Grunt: Kill Running Tasks"
			],
			[
				"mobile",
				"Snippet: mobile media query"
			],
			[
				"set syntax: live",
				"Set Syntax: LiveScript"
			],
			[
				"grun",
				"Grunt"
			],
			[
				"json",
				"Pretty JSON: Format (Pretty Print) JSON"
			],
			[
				"beau",
				"HTMLBeautify"
			],
			[
				"beua",
				"Javascript Beautify"
			],
			[
				"beauty",
				"Javascript Beautify"
			],
			[
				"beaut",
				"Javascript Beautify"
			],
			[
				"conver tto ",
				"Indentation: Convert to Tabs"
			],
			[
				"convert tos",
				"Indentation: Convert to Tabs"
			],
			[
				"grut",
				"Grunt: Kill Running Tasks"
			],
			[
				"indent",
				"Indentation: Reindent Lines"
			],
			[
				"meda",
				"Snippet: mobile media query"
			],
			[
				"convert",
				"Indentation: Convert to Spaces"
			],
			[
				"conver tto sp",
				"Indentation: Convert to Spaces"
			],
			[
				"media",
				"Snippet: mobile media query"
			],
			[
				"set syntax: ya",
				"Set Syntax: YAML"
			],
			[
				"wrap",
				"Word Wrap: Toggle"
			],
			[
				"tabs",
				"Indentation: Convert to Tabs"
			],
			[
				"conver tot ta",
				"Indentation: Convert to Tabs"
			],
			[
				"conver tot a",
				"Indentation: Convert to Tabs"
			],
			[
				"remove pa",
				"Package Control: Remove Package"
			],
			[
				"remo",
				"Package Control: Remove Package"
			],
			[
				"select col",
				"ColorSchemeSelector: Select Color Scheme"
			],
			[
				"select theme",
				"ColorSchemeSelector: Select Color Scheme"
			],
			[
				"randomc",
				"ColorSchemeSelector: Random Color Scheme"
			],
			[
				"to tabs",
				"Indentation: Convert to Tabs"
			],
			[
				"no ",
				"Snippet: noHighlight"
			],
			[
				"lower",
				"Convert Case: Lower Case"
			],
			[
				"lowerc",
				"Convert Case: Lower Case"
			],
			[
				"set syntax: plain",
				"Set Syntax: Plain Text"
			],
			[
				"syntax: text",
				"Set Syntax: Plain Text"
			],
			[
				"reind",
				"Indentation: Reindent Lines"
			],
			[
				"noh",
				"Snippet: noHighlight"
			],
			[
				"scramble",
				"Snippet: scrambleArray"
			],
			[
				"json format",
				"Pretty JSON: Format (Pretty Print) JSON"
			],
			[
				"random fro",
				"Snippet: random item from array"
			],
			[
				"gurnt",
				"Grunt"
			],
			[
				"grunts",
				"Preferences: Grunt - Settings – Default"
			],
			[
				"slatred",
				"Snippet: slatered"
			],
			[
				"linting",
				"SublimeLinter: Enable Linting"
			],
			[
				"eriden",
				"Indentation: Reindent Lines"
			],
			[
				"erid",
				"Snippet: Insert Right Double Quotation Mark"
			],
			[
				"convert to",
				"Indentation: Convert to Tabs"
			],
			[
				"scheme",
				"ColorSchemeSelector: Select Color Scheme"
			],
			[
				"theme",
				"ColorSchemeSelector: Select Color Scheme"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"medai",
				"Snippet: mobile media query"
			],
			[
				"for each",
				"Snippet: forEach polyfill"
			],
			[
				"rei",
				"Indentation: Reindent Lines"
			],
			[
				"ried",
				"Indentation: Reindent Lines"
			],
			[
				"right doubl",
				"Snippet: Insert Right Double Quotation Mark"
			],
			[
				"emd",
				"Snippet: Insert Em Dash"
			],
			[
				"double",
				"Snippet: Insert Right Double Quotation Mark"
			],
			[
				"double ",
				"Snippet: Insert Left Double Quotation Mark"
			],
			[
				"rightu",
				"Snippet: insert right guillmet arrows"
			],
			[
				"insert right",
				"Snippet: Insert Right Double Quotation Mark"
			],
			[
				"insert left ",
				"Snippet: Insert Left Double Quotation Mark"
			],
			[
				"disabl",
				"Package Control: Disable Package"
			],
			[
				"enable",
				"Package Control: Enable Package"
			],
			[
				"update",
				"Package Control: Upgrade/Overwrite All Packages"
			],
			[
				"min",
				"Pretty JSON: Minify (compress) JSON"
			],
			[
				"comam",
				"Snippet: commaSeparateNumber"
			],
			[
				"slatere",
				"Snippet: slatered"
			],
			[
				"cofee compi",
				"Coffee: Compile File"
			],
			[
				"compile",
				"Coffee: Compile File"
			],
			[
				"cofeecompi",
				"Coffee: Compile File"
			],
			[
				"slatre",
				"Snippet: slatered"
			],
			[
				"reii",
				"Indentation: Reindent Lines"
			]
		],
		"width": 475.0
	},
	"console":
	{
		"height": 174.0,
		"history":
		[
			"clear()",
			"clear",
			"clear;",
			"clear()",
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": true,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/kirkcp/Documents/node_play/slatemail",
		"/Users/kirkcp/Documents/node_play/slatemail/preferences",
		"/Users/kirkcp/Documents/node_play/slatemail_dist"
	],
	"file_history":
	[
		"/Users/kirkcp/Documents/node_play/slatemail/.gitignore",
		"/Users/kirkcp/Documents/node_play/slatemail/mailComposer/mailComposer.js",
		"/Users/kirkcp/Documents/node_play/slatemail/mailComposer/mailComposer.html",
		"/Users/kirkcp/Documents/node_play/slatemail/mailComposer/mailComposer.css",
		"/Users/kirkcp/Documents/node_play/slatemail/mailComposer/ckeditor/samples/index.html",
		"/Users/kirkcp/Documents/node_play/slatemail/modules/dbHandler.js",
		"/Users/kirkcp/Documents/node_play/slatemail/To-do.txt",
		"/Users/kirkcp/Documents/node_play/slatemail/slatemail.sublime-project",
		"/Users/kirkcp/Documents/node_play/slatemail/modules/projectList.js",
		"/Users/kirkcp/Documents/node_play/slatemail/modules/projectView.js",
		"/Users/kirkcp/Documents/node_play/slatemail/node_modules/fs-extra/node_modules/mkdirp/node_modules/minimist/test/default_bool.js",
		"/Users/kirkcp/Documents/node_play/slatemail/modules/treeView.js",
		"/Users/kirkcp/Documents/node_play/slatemail/modules/projectSelector.js",
		"/Users/kirkcp/Documents/node_play/slatemail/css/projectSelector.scss",
		"/Users/kirkcp/Documents/node_play/slatemail/css/projectSelector.css",
		"/Users/kirkcp/Documents/node_play/slatemail/node_modules/react/lib/EventPluginRegistry.js",
		"/Users/kirkcp/Documents/node_play/slatemail/attachments/Junk Email/14417/PGA TOUR Rewind, YouTube.docx",
		"/Users/kirkcp/Documents/node_play/slatemail/package.json",
		"/Users/kirkcp/Documents/node_play/slatemail/modules/messageList.js",
		"/Users/kirkcp/Documents/node_play/slatemail/node_modules/favicon/index.js",
		"/Users/kirkcp/Documents/node_play/slatemail/node_modules/datejs/index.js",
		"/Users/kirkcp/Documents/node_play/slatemail/node_modules/imap/test/test-connection-idle-normal.js",
		"/Users/kirkcp/Documents/node_play/slatemail/attachments/Sent Items/776/ImAmerican.DealWithitSouthAmericans. (1).docx",
		"/Users/kirkcp/Documents/node_play/slatemail/node_modules/datejs/src/i18n/tt-RU.js",
		"/Users/kirkcp/Documents/node_play/slatemail/modules/test.js",
		"/Users/kirkcp/Documents/node_play/slatemail/css/message.css",
		"/Users/kirkcp/Documents/node_play/slatemail/attachments/Sent Items/783/MOTWActualEuropeanDiscoveries.docx",
		"/Users/kirkcp/Documents/node_play/slatemail/credentials/credentials.json",
		"/Users/kirkcp/Documents/node_play/slatemail/mailComposer/mailComposer.scss",
		"/Users/kirkcp/Documents/node_play/slatemail/graphics/mail.ai",
		"/Users/kirkcp/Documents/node_play/slatemail/attachments/Sports Separation/359/MakeAll4.py",
		"/Users/kirkcp/Documents/node_play/slatemail_dist/slatemail.app/Contents/Resources/app.nw/node_modules/imap/node_modules/utf7/test/utf7-imap.js",
		"/Users/kirkcp/Documents/node_play/slatemail/node_modules/imap/node_modules/utf7/test/utf7-imap.js",
		"/Users/kirkcp/Documents/node_play/slatemail_dist/slatemail.app/Contents/Resources/app.nw/modules/imaper.js",
		"/Users/kirkcp/Documents/node_play/slatemail/README.md",
		"/Users/kirkcp/.Trash/credentials2.json",
		"/Users/kirkcp/Documents/node_play/slatemail_dist/README.txt",
		"/Users/kirkcp/Desktop/gmail_cred",
		"/Users/kirkcp/Documents/node_play/slatemail/main.html",
		"/Users/kirkcp/Documents/node_play/slatemail/credentials/credentials2.json",
		"/Users/kirkcp/Documents/node_play/slatemail/main.js",
		"/Users/kirkcp/Documents/node_play/slatemail/css/styles.scss",
		"/Users/kirkcp/Documents/node_play/slatemail/modules/syncer.js",
		"/Users/kirkcp/Documents/node_play/slatemail/modules/overlay.js",
		"/Users/kirkcp/Documents/node_play/slatemail/modules/messageList.jsx",
		"/Users/kirkcp/Documents/node_play/slatemail/attachments/INBOX/2366983/oscars1.docx",
		"/Users/kirkcp/Documents/node_play/slatemail/node_modules/fs-extra/node_modules/mkdirp/test/opts_fs_sync.js",
		"/Users/kirkcp/Documents/node_play/slatemail/modules/projectList.jsx",
		"/Users/kirkcp/Documents/node_play/slatemail/modules/messageView.js",
		"/Users/kirkcp/Documents/node_play/slatemail/css/message_list.css",
		"/Users/kirkcp/Documents/node_play/slatemail/raceconditions.txt",
		"/Users/kirkcp/Documents/node_play/slatemail/node_modules/react/lib/ReactPerf.js",
		"/Users/kirkcp/Documents/node_play/slatemail/node_modules/jquery/src/css.js",
		"/Users/kirkcp/Documents/node_play/slatemail/attachments/Sent Items/11903/scotus death simulator.doc",
		"/Users/kirkcp/Documents/node_play/slatemail/node_modules/datejs/src/i18n/sr-Cyrl-BA.js",
		"/Users/kirkcp/Documents/node_play/slatemail/node_modules/react/lib/camelizeStyleName.js",
		"/Users/kirkcp/Documents/node_play/slatemail/node_modules/react/lib/ReactNativeComponent.js",
		"/Users/kirkcp/Documents/node_play/slatemail/node_modules/react/lib/ReactElement.js",
		"/Users/kirkcp/Documents/node_play/slatemail/node_modules/react/node_modules/envify/node_modules/jstransform/visitors/es6-arrow-function-visitors.js",
		"/Users/kirkcp/Documents/node_play/slatemail/node_modules/fs-extra/lib/remove.js",
		"/Users/kirkcp/Documents/node_play/slatemail/node_modules/react/lib/ReactEventEmitterMixin.js",
		"/Users/kirkcp/Documents/node_play/slatemail/css/message.scss",
		"/Users/kirkcp/Documents/node_play/slatemail/node_modules/react/lib/CompositionEventPlugin.js",
		"/Users/kirkcp/Documents/node_play/slatemail/descriptors/complete_uids.json",
		"/Users/kirkcp/Documents/node_play/slatemail/node_modules/react/lib/CSSPropertyOperations.js",
		"/Users/kirkcp/Documents/node_play/slatemail/node_modules/react/lib/cx.js",
		"/Users/kirkcp/Documents/node_play/slatemail/attachments/Sent Items/11847/Contraceptive and Abortion laws - US.xlsx",
		"/Users/kirkcp/Documents/node_play/slatemail/mailComposer/ckeditor/samples/xhtmlstyle.html",
		"/Users/kirkcp/Documents/node_play/slatemail/attachments/INBOX/2367407/oscar predictions-1MW.docx",
		"/Users/kirkcp/Documents/node_play/slatemail/node_modules/react/lib/ReactTextComponent.js",
		"/Users/kirkcp/Documents/node_play/slatemail/modules/userActions.js",
		"/Users/kirkcp/Documents/node_play/slatemail/mailComposer/ckeditor/skins/moono/editor.css",
		"/Users/kirkcp/Documents/node_play/slatemail/attachments/Sent Items/3561/AmazonPrimeCalculator.docx",
		"/Users/kirkcp/Documents/node_play/slatemail/node_modules/jquery/src/effects/animatedSelector.js",
		"/Users/kirkcp/Documents/node_play/slatemail/node_modules/react/lib/ReactRootIndex.js",
		"/Users/kirkcp/Documents/node_play/slatemail/node_modules/react/lib/ReactOwner.js",
		"/Users/kirkcp/Documents/node_play/slatemail/node_modules/datejs/src/i18n/az-Cyrl-AZ.js",
		"/Users/kirkcp/Documents/node_play/slatemail/attachments/Sent Items/11560/Code of Business Conduct sign off sheet.doc",
		"/Users/kirkcp/Documents/node_play/slatemail/attachments/Sent Items/3328/QZ-FiveRingCircus-140219-MedalCountRedlines.docx",
		"/Users/kirkcp/Documents/node_play/slatemail/descriptors/Archive_uids.json",
		"/Users/kirkcp/Documents/node_play/slatemail/node_modules/react/lib/isNode.js",
		"/Users/kirkcp/Documents/node_play/slatemail/node_modules/fs-extra/lib/move.js",
		"/Users/kirkcp/Documents/node_play/slatemail/node_modules/react/lib/mapObject.js",
		"/Users/kirkcp/Documents/node_play/slatemail/node_modules/favicon/node_modules/request/node_modules/hawk/Makefile",
		"/Users/kirkcp/Documents/node_play/slatemail/node_modules/react/lib/getEventModifierState.js",
		"/Users/kirkcp/Documents/node_play/slatemail/attachments/Sent Items/49438/HorrorMovieMusicQuizCopy.docx",
		"/Users/kirkcp/Documents/node_play/slatemail/modules/old/mailboxView.js",
		"/Users/kirkcp/Documents/node_play/slatemail/node_modules/react/lib/getMarkupWrap.js",
		"/Users/kirkcp/Documents/node_play/slatemail/node_modules/react/lib/getEventTarget.js",
		"/Users/kirkcp/Documents/node_play/slatemail/node_modules/datejs/src/i18n/gl-ES.js",
		"/Users/kirkcp/Documents/node_play/slatemail/node_modules/nodemailer/Gruntfile.js",
		"/Users/kirkcp/Documents/node_play/slatemail/attachments/Sent Items/1191/Predicthowlongtheshutdownwilllast (1).docx",
		"/Users/kirkcp/Documents/node_play/slatemail/descriptors/MailPilot/ReviewOn_uids.json",
		"/Users/kirkcp/Documents/node_play/slatemail/node_modules/react/lib/DOMChildrenOperations.js",
		"/Users/kirkcp/Documents/node_play/slatemail/node_modules/react/lib/SyntheticClipboardEvent.js",
		"/Users/kirkcp/Documents/node_play/slatemail/node_modules/react/lib/SyntheticTouchEvent.js",
		"/Users/kirkcp/Documents/node_play/slatemail/node_modules/favicon/node_modules/request/node_modules/hawk/test/readme.js",
		"/Users/kirkcp/Documents/node_play/slatemail/node_modules/nodemailer/node_modules/hyperquest/node_modules/through/readme.markdown",
		"/Users/kirkcp/Documents/node_play/slatemail/modules/old/threader.js",
		"/Users/kirkcp/Documents/node_play/slatemail/node_modules/imap/test/test-parse-header.js",
		"/Users/kirkcp/Documents/node_play/slatemail/modules/imapHandler.js",
		"/Users/kirkcp/Documents/node_play/slatemail/node_modules/jquery/src/var/indexOf.js",
		"/Users/kirkcp/Documents/node_play/slatemail/node_modules/imap/node_modules/readable-stream/node_modules/inherits/inherits_browser.js",
		"/Users/kirkcp/Documents/node_play/slatemail/modules/mailboxView.js",
		"/Users/kirkcp/Desktop/test2.js",
		"/Users/kirkcp/Documents/node_play/slatemail/css/message_list.scss",
		"/Users/kirkcp/Documents/node_play/slatemail/modules/mailboxView2.js",
		"/Users/kirkcp/Documents/node_play/slatemail/attachments/INBOX/2366111/Ben Boggs.vcf",
		"/Users/kirkcp/Documents/node_play/slatemail/descriptors/INBOX_uids.json",
		"/Users/kirkcp/Documents/node_play/slatemail/node_modules/react/lib/SyntheticDragEvent.js",
		"/Users/kirkcp/Documents/node_play/slatemail/modules/syncer_older.js",
		"/Users/kirkcp/Documents/node_play/slatemail/modules/littleSyncer.js",
		"/Users/kirkcp/Documents/node_play/slatemail/modules/q_test.js",
		"/Users/kirkcp/Documents/node_play/slatemail/node_modules/react/lib/ClientReactRootIndex.js",
		"/Users/kirkcp/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/Users/kirkcp/Documents/node_play/slatemail/modules/oldPrepHtml.js",
		"/Users/kirkcp/Documents/node_play/slatemail/modules/oldPrepHtml",
		"/Users/kirkcp/Documents/node_play/slatemail/modules/threadParser.js",
		"/Users/kirkcp/Documents/node_play/slatemail/node_modules/fs-extra/node_modules/mkdirp/node_modules/minimist/test/parse_modified.js",
		"/Users/kirkcp/Documents/node_play/slatemail/modules/testModule.js",
		"/Users/kirkcp/Documents/node_play/slatemail/node_modules/datejs/src/i18n/mr-IN.js",
		"/Users/kirkcp/Documents/node_play/slatemail/modules/.module-cache/e24fb5ba34bf718b9e20cd881c45182acd880b96.js",
		"/Users/kirkcp/Documents/node_play/slatemail/node_modules/datejs/src/i18n/es-SV.js",
		"/Users/kirkcp/Documents/node_play/slatemail/node_modules/react/lib/escapeTextForBrowser.js",
		"/Users/kirkcp/Documents/node_play/slatemail/index.js",
		"/Users/kirkcp/Documents/node_play/slatemail/index.html",
		"/Users/kirkcp/Documents/node_play/slatemail/node_modules/react/lib/LocalEventTrapMixin.js",
		"/Users/kirkcp/Documents/node_play/slatemail/node_modules/datejs/src/i18n/ar-LB.js"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 94.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"credentials",
			"preferences",
			"credentials",
			"movetocomplete",
			"resolved",
			"markcomplete",
			"ensurebox",
			"complete",
			"@z919XLWslUo",
			"getpassword",
			"imaper",
			"getpassword",
			"project_list",
			"dbhandler",
			"_dbHandler",
			"dbHandler",
			"dbhandler",
			"imaper",
			"printtree",
			"exports",
			"dbhandler",
			"();\n",
			"dbhandler",
			"imaper",
			"init()",
			"new imaper",
			"imaper",
			"this",
			"erasemessage",
			"delete",
			"clearprojectfromthread",
			"overlay.close()",
			"overlay",
			"jquery",
			"scheduled",
			"overlay",
			"project_viewer",
			"projectview",
			"clearProjectFromThread",
			"openprojectview",
			"ensureprojectstore",
			"project",
			"thread",
			"listprojects",
			"exec(",
			"fs.",
			"complete",
			"'complete'",
			"muted",
			"savetoexistingthread",
			"movetocomplete",
			"savetoexistingthread",
			"movetocomplete",
			"movetocomplee",
			"movetocomplete",
			"markcomplete",
			"request_update",
			"data",
			".objectstore",
			"key",
			"selected",
			"getthread",
			"reflectactivemailbox",
			"selectmessage",
			"projectview",
			"ensurelocalboxes",
			"ensurelocalbox",
			"ensurelocalboxes",
			"ensurelocalbox",
			"markseenseries",
			"markseen",
			"markread",
			"emailselected",
			"markread",
			"conf",
			"openprojectview",
			"openprojectivew",
			"openprojectview",
			"projectview",
			"initial_thread",
			"initial_thread_id",
			"initial_thread",
			"getthread",
			"openprojectview",
			"projectview",
			"savedescriptors",
			"savedescriptros",
			"getlocaldescriptors",
			"addobjectstore",
			"getlocaldescriptors",
			"savedescriptors",
			"indexeddb",
			"getlocaldescriptors",
			"savedescriptors",
			"removelocalmessage",
			"console.log",
			"removelocalmessage",
			"message_obj",
			"removelocalmessage",
			"deleting local",
			"console",
			"dbhandler",
			"self",
			"dbhandler",
			"dbHandler",
			"getmessages",
			"selectmessage",
			"messagelist",
			"eele",
			"$(this)",
			"removelocalmessage",
			"openbox",
			"dbhandler",
			"DbHandler",
			"messagelist",
			"dbhandler",
			"updateflags",
			"dbhandler",
			"mailparser",
			"imapHandler",
			"imap",
			"imaper",
			"exports",
			"dbhandler",
			"imapHandler",
			"imaphandler",
			"savedescriptors",
			"savedescriptros"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 3,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "modules/imaper.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9532,
						"regions":
						{
						},
						"selection":
						[
							[
								491,
								491
							]
						],
						"settings":
						{
							"color_scheme": "Packages/User/Color Highlighter/themes/Seti (SL).tmTheme",
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "main.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1188,
						"regions":
						{
						},
						"selection":
						[
							[
								693,
								693
							]
						],
						"settings":
						{
							"color_scheme": "Packages/User/Color Highlighter/themes/Seti (SL).tmTheme",
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "main.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9230,
						"regions":
						{
						},
						"selection":
						[
							[
								7853,
								7853
							]
						],
						"settings":
						{
							"color_scheme": "Packages/User/Color Highlighter/themes/Seti (SL).tmTheme",
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 5196.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 3,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 644279,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										103,
										114
									],
									[
										378,
										389
									],
									[
										496,
										507
									],
									[
										686,
										697
									],
									[
										1179,
										1190
									],
									[
										1938,
										1949
									],
									[
										2340,
										2351
									],
									[
										2375,
										2386
									],
									[
										2647,
										2658
									],
									[
										3124,
										3135
									],
									[
										3313,
										3324
									],
									[
										3694,
										3705
									],
									[
										4004,
										4015
									],
									[
										4331,
										4342
									],
									[
										4378,
										4389
									],
									[
										4445,
										4456
									],
									[
										4625,
										4636
									],
									[
										4756,
										4767
									],
									[
										4792,
										4803
									],
									[
										4917,
										4928
									],
									[
										5160,
										5171
									],
									[
										5349,
										5360
									],
									[
										5380,
										5391
									],
									[
										5646,
										5657
									],
									[
										5659,
										5670
									],
									[
										5888,
										5899
									],
									[
										6061,
										6072
									],
									[
										6154,
										6165
									],
									[
										6447,
										6458
									],
									[
										6762,
										6773
									],
									[
										7190,
										7201
									],
									[
										7447,
										7458
									],
									[
										7715,
										7726
									],
									[
										7779,
										7790
									],
									[
										7859,
										7870
									],
									[
										7930,
										7941
									],
									[
										8095,
										8106
									],
									[
										8142,
										8153
									],
									[
										8209,
										8220
									],
									[
										8382,
										8393
									],
									[
										8509,
										8520
									],
									[
										8545,
										8556
									],
									[
										8701,
										8712
									],
									[
										8732,
										8743
									],
									[
										8989,
										9000
									],
									[
										9002,
										9013
									],
									[
										9294,
										9305
									],
									[
										9361,
										9372
									],
									[
										9702,
										9713
									],
									[
										10033,
										10044
									],
									[
										10469,
										10480
									],
									[
										10527,
										10538
									],
									[
										11039,
										11050
									],
									[
										11227,
										11238
									],
									[
										11263,
										11274
									],
									[
										11477,
										11488
									],
									[
										11509,
										11520
									],
									[
										12065,
										12076
									],
									[
										12477,
										12488
									],
									[
										12587,
										12598
									],
									[
										12736,
										12747
									],
									[
										12903,
										12914
									],
									[
										13179,
										13190
									],
									[
										13375,
										13386
									],
									[
										13422,
										13433
									],
									[
										13517,
										13528
									],
									[
										13651,
										13662
									],
									[
										13687,
										13698
									],
									[
										13769,
										13780
									],
									[
										13964,
										13975
									],
									[
										14121,
										14132
									],
									[
										14168,
										14179
									],
									[
										14287,
										14298
									],
									[
										14300,
										14311
									],
									[
										14569,
										14580
									],
									[
										14934,
										14945
									],
									[
										15181,
										15192
									],
									[
										15220,
										15231
									],
									[
										15242,
										15253
									],
									[
										15275,
										15286
									],
									[
										15310,
										15321
									],
									[
										15348,
										15359
									],
									[
										15387,
										15398
									],
									[
										15461,
										15472
									],
									[
										15591,
										15602
									],
									[
										15877,
										15888
									],
									[
										16007,
										16018
									],
									[
										16269,
										16280
									],
									[
										16466,
										16477
									],
									[
										16678,
										16689
									],
									[
										16717,
										16728
									],
									[
										16739,
										16750
									],
									[
										16772,
										16783
									],
									[
										16807,
										16818
									],
									[
										16845,
										16856
									],
									[
										16884,
										16895
									],
									[
										17022,
										17033
									],
									[
										17222,
										17233
									],
									[
										17386,
										17397
									],
									[
										17592,
										17603
									],
									[
										17804,
										17815
									],
									[
										18006,
										18017
									],
									[
										18229,
										18240
									],
									[
										18492,
										18503
									],
									[
										18531,
										18542
									],
									[
										18553,
										18564
									],
									[
										18586,
										18597
									],
									[
										18621,
										18632
									],
									[
										18659,
										18670
									],
									[
										18698,
										18709
									],
									[
										18860,
										18871
									],
									[
										19077,
										19088
									],
									[
										19193,
										19204
									],
									[
										19390,
										19401
									],
									[
										19521,
										19532
									],
									[
										19663,
										19674
									],
									[
										19850,
										19861
									],
									[
										20019,
										20030
									],
									[
										20068,
										20079
									],
									[
										20227,
										20238
									],
									[
										20294,
										20305
									],
									[
										20390,
										20401
									],
									[
										20649,
										20660
									],
									[
										20879,
										20890
									],
									[
										20914,
										20925
									],
									[
										20936,
										20947
									],
									[
										20965,
										20976
									],
									[
										20996,
										21007
									],
									[
										21030,
										21041
									],
									[
										21065,
										21076
									],
									[
										21223,
										21234
									],
									[
										21488,
										21499
									],
									[
										21605,
										21616
									],
									[
										21855,
										21866
									],
									[
										22049,
										22060
									],
									[
										22254,
										22265
									],
									[
										22466,
										22477
									],
									[
										22665,
										22676
									],
									[
										22840,
										22851
									],
									[
										23039,
										23050
									],
									[
										23074,
										23085
									],
									[
										23096,
										23107
									],
									[
										23125,
										23136
									],
									[
										23156,
										23167
									],
									[
										23190,
										23201
									],
									[
										23225,
										23236
									],
									[
										23346,
										23357
									],
									[
										23544,
										23555
									],
									[
										23692,
										23703
									],
									[
										23868,
										23879
									],
									[
										24098,
										24109
									],
									[
										24133,
										24144
									],
									[
										24155,
										24166
									],
									[
										24184,
										24195
									],
									[
										24215,
										24226
									],
									[
										24249,
										24260
									],
									[
										24284,
										24295
									],
									[
										24429,
										24440
									],
									[
										24621,
										24632
									],
									[
										24725,
										24736
									],
									[
										24901,
										24912
									],
									[
										25180,
										25191
									],
									[
										25387,
										25398
									],
									[
										25544,
										25555
									],
									[
										25567,
										25578
									],
									[
										25745,
										25756
									],
									[
										25808,
										25819
									],
									[
										25831,
										25842
									],
									[
										26035,
										26046
									],
									[
										26185,
										26196
									],
									[
										26424,
										26435
									],
									[
										26489,
										26500
									],
									[
										26523,
										26534
									],
									[
										26574,
										26585
									],
									[
										26892,
										26903
									],
									[
										26993,
										27004
									],
									[
										27203,
										27214
									],
									[
										27453,
										27464
									],
									[
										27948,
										27959
									],
									[
										28128,
										28139
									],
									[
										28220,
										28231
									],
									[
										28365,
										28376
									],
									[
										28396,
										28407
									],
									[
										28442,
										28453
									],
									[
										28531,
										28542
									],
									[
										28609,
										28620
									],
									[
										28686,
										28697
									],
									[
										28772,
										28783
									],
									[
										28811,
										28822
									],
									[
										28902,
										28913
									],
									[
										28917,
										28928
									],
									[
										29012,
										29023
									],
									[
										29116,
										29127
									],
									[
										29261,
										29272
									],
									[
										29433,
										29444
									],
									[
										29639,
										29650
									],
									[
										29768,
										29779
									],
									[
										29979,
										29990
									],
									[
										30169,
										30180
									],
									[
										30395,
										30406
									],
									[
										30528,
										30539
									],
									[
										30679,
										30690
									],
									[
										30812,
										30823
									],
									[
										31038,
										31049
									],
									[
										31154,
										31165
									],
									[
										31317,
										31328
									],
									[
										31634,
										31645
									],
									[
										31783,
										31794
									],
									[
										31819,
										31830
									],
									[
										31850,
										31861
									],
									[
										31885,
										31896
									],
									[
										32030,
										32041
									],
									[
										32255,
										32266
									],
									[
										32374,
										32385
									],
									[
										32513,
										32524
									],
									[
										32658,
										32669
									],
									[
										32689,
										32700
									],
									[
										32730,
										32741
									],
									[
										32819,
										32830
									],
									[
										32897,
										32908
									],
									[
										32974,
										32985
									],
									[
										33056,
										33067
									],
									[
										33095,
										33106
									],
									[
										33186,
										33197
									],
									[
										33201,
										33212
									],
									[
										33292,
										33303
									],
									[
										33396,
										33407
									],
									[
										33536,
										33547
									],
									[
										33771,
										33782
									],
									[
										33906,
										33917
									],
									[
										34060,
										34071
									],
									[
										34205,
										34216
									],
									[
										34236,
										34247
									],
									[
										34285,
										34296
									],
									[
										34374,
										34385
									],
									[
										34441,
										34452
									],
									[
										34518,
										34529
									],
									[
										34587,
										34598
									],
									[
										34626,
										34637
									],
									[
										34717,
										34728
									],
									[
										34732,
										34743
									],
									[
										34816,
										34827
									],
									[
										34920,
										34931
									],
									[
										35061,
										35072
									],
									[
										35236,
										35247
									],
									[
										35383,
										35394
									],
									[
										35568,
										35579
									],
									[
										35734,
										35745
									],
									[
										35972,
										35983
									],
									[
										36112,
										36123
									],
									[
										36346,
										36357
									],
									[
										36417,
										36428
									],
									[
										36600,
										36611
									],
									[
										36683,
										36694
									],
									[
										36724,
										36735
									],
									[
										36842,
										36853
									],
									[
										36855,
										36866
									],
									[
										37030,
										37041
									],
									[
										37066,
										37077
									],
									[
										37182,
										37193
									],
									[
										37370,
										37381
									],
									[
										37411,
										37422
									],
									[
										37529,
										37540
									],
									[
										37542,
										37553
									],
									[
										37695,
										37706
									],
									[
										37731,
										37742
									],
									[
										37847,
										37858
									],
									[
										38042,
										38053
									],
									[
										38280,
										38291
									],
									[
										38293,
										38304
									],
									[
										38690,
										38701
									],
									[
										38932,
										38943
									],
									[
										38945,
										38956
									],
									[
										39343,
										39354
									],
									[
										39586,
										39597
									],
									[
										39599,
										39610
									],
									[
										39986,
										39997
									],
									[
										40224,
										40235
									],
									[
										40237,
										40248
									],
									[
										40592,
										40603
									],
									[
										40788,
										40799
									],
									[
										40980,
										40991
									],
									[
										40993,
										41004
									],
									[
										41267,
										41278
									],
									[
										41458,
										41469
									],
									[
										41471,
										41482
									],
									[
										41711,
										41722
									],
									[
										41779,
										41790
									],
									[
										42017,
										42028
									],
									[
										42030,
										42041
									],
									[
										42216,
										42227
									],
									[
										42465,
										42476
									],
									[
										42534,
										42545
									],
									[
										42764,
										42775
									],
									[
										42777,
										42788
									],
									[
										43003,
										43014
									],
									[
										43241,
										43252
									],
									[
										43254,
										43265
									],
									[
										43477,
										43488
									],
									[
										43622,
										43633
									],
									[
										43663,
										43674
									],
									[
										43808,
										43819
									],
									[
										43821,
										43832
									],
									[
										43979,
										43990
									],
									[
										44015,
										44026
									],
									[
										44130,
										44141
									],
									[
										44355,
										44366
									],
									[
										44396,
										44407
									],
									[
										44537,
										44548
									],
									[
										44550,
										44561
									],
									[
										44769,
										44780
									],
									[
										44805,
										44816
									],
									[
										44920,
										44931
									],
									[
										45100,
										45111
									],
									[
										45333,
										45344
									],
									[
										45588,
										45599
									],
									[
										45795,
										45806
									],
									[
										45836,
										45847
									],
									[
										45977,
										45988
									],
									[
										45990,
										46001
									],
									[
										46209,
										46220
									],
									[
										46245,
										46256
									],
									[
										46360,
										46371
									],
									[
										46540,
										46551
									],
									[
										46773,
										46784
									],
									[
										47028,
										47039
									],
									[
										47197,
										47208
									],
									[
										47238,
										47249
									],
									[
										47383,
										47394
									],
									[
										47396,
										47407
									],
									[
										47583,
										47594
									],
									[
										47648,
										47659
									],
									[
										47763,
										47774
									],
									[
										47988,
										47999
									],
									[
										48029,
										48040
									],
									[
										48170,
										48181
									],
									[
										48183,
										48194
									],
									[
										48402,
										48413
									],
									[
										48438,
										48449
									],
									[
										48553,
										48564
									],
									[
										48733,
										48744
									],
									[
										48966,
										48977
									],
									[
										49141,
										49152
									],
									[
										49321,
										49332
									],
									[
										49362,
										49373
									],
									[
										49503,
										49514
									],
									[
										49516,
										49527
									],
									[
										49735,
										49746
									],
									[
										49771,
										49782
									],
									[
										49886,
										49897
									],
									[
										50066,
										50077
									],
									[
										50282,
										50293
									],
									[
										50424,
										50435
									],
									[
										50465,
										50476
									],
									[
										50666,
										50677
									],
									[
										50679,
										50690
									],
									[
										50884,
										50895
									],
									[
										50920,
										50931
									],
									[
										51164,
										51175
									],
									[
										51419,
										51430
									],
									[
										51432,
										51443
									],
									[
										51598,
										51609
									],
									[
										51634,
										51645
									],
									[
										51757,
										51768
									],
									[
										51952,
										51963
									],
									[
										51993,
										52004
									],
									[
										52284,
										52295
									],
									[
										52297,
										52308
									],
									[
										52502,
										52513
									],
									[
										52538,
										52549
									],
									[
										52881,
										52892
									],
									[
										53230,
										53241
									],
									[
										53243,
										53254
									],
									[
										53409,
										53420
									],
									[
										53445,
										53456
									],
									[
										53568,
										53579
									],
									[
										53801,
										53812
									],
									[
										53842,
										53853
									],
									[
										53983,
										53994
									],
									[
										53996,
										54007
									],
									[
										54215,
										54226
									],
									[
										54251,
										54262
									],
									[
										54366,
										54377
									],
									[
										54546,
										54557
									],
									[
										54779,
										54790
									],
									[
										54954,
										54965
									],
									[
										55124,
										55135
									],
									[
										55165,
										55176
									],
									[
										55310,
										55321
									],
									[
										55323,
										55334
									],
									[
										55434,
										55445
									],
									[
										55470,
										55481
									],
									[
										55585,
										55596
									],
									[
										55772,
										55783
									],
									[
										55813,
										55824
									],
									[
										55958,
										55969
									],
									[
										55971,
										55982
									],
									[
										56082,
										56093
									],
									[
										56118,
										56129
									],
									[
										56233,
										56244
									],
									[
										56413,
										56424
									],
									[
										56524,
										56535
									],
									[
										56665,
										56676
									],
									[
										56706,
										56717
									],
									[
										56851,
										56862
									],
									[
										56864,
										56875
									],
									[
										56975,
										56986
									],
									[
										57011,
										57022
									],
									[
										57126,
										57137
									],
									[
										57350,
										57361
									],
									[
										57391,
										57402
									],
									[
										57536,
										57547
									],
									[
										57549,
										57560
									],
									[
										57681,
										57692
									],
									[
										57717,
										57728
									],
									[
										57832,
										57843
									],
									[
										58056,
										58067
									],
									[
										58097,
										58108
									],
									[
										58242,
										58253
									],
									[
										58255,
										58266
									],
									[
										58366,
										58377
									],
									[
										58422,
										58433
									],
									[
										58550,
										58561
									],
									[
										58591,
										58602
									],
									[
										58736,
										58747
									],
									[
										58749,
										58760
									],
									[
										58898,
										58909
									],
									[
										58934,
										58945
									],
									[
										59045,
										59056
									],
									[
										59252,
										59263
									],
									[
										59515,
										59526
									],
									[
										59528,
										59539
									],
									[
										59995,
										60006
									],
									[
										60259,
										60270
									],
									[
										60272,
										60283
									],
									[
										60805,
										60816
									],
									[
										61068,
										61079
									],
									[
										61081,
										61092
									],
									[
										61536,
										61547
									],
									[
										61800,
										61811
									],
									[
										61813,
										61824
									],
									[
										62308,
										62319
									],
									[
										62572,
										62583
									],
									[
										62585,
										62596
									],
									[
										63093,
										63104
									],
									[
										63393,
										63404
									],
									[
										63406,
										63417
									],
									[
										63873,
										63884
									],
									[
										64091,
										64102
									],
									[
										64104,
										64115
									],
									[
										64465,
										64476
									],
									[
										64682,
										64693
									],
									[
										64695,
										64706
									],
									[
										65059,
										65070
									],
									[
										65319,
										65330
									],
									[
										65332,
										65343
									],
									[
										65696,
										65707
									],
									[
										65955,
										65966
									],
									[
										65968,
										65979
									],
									[
										66301,
										66312
									],
									[
										66620,
										66631
									],
									[
										66745,
										66756
									],
									[
										66817,
										66828
									],
									[
										67081,
										67092
									],
									[
										67094,
										67105
									],
									[
										67268,
										67279
									],
									[
										67393,
										67404
									],
									[
										67466,
										67477
									],
									[
										67722,
										67733
									],
									[
										67735,
										67746
									],
									[
										67909,
										67920
									],
									[
										68097,
										68108
									],
									[
										68361,
										68372
									],
									[
										68374,
										68385
									],
									[
										68713,
										68724
									],
									[
										68898,
										68909
									],
									[
										68911,
										68922
									],
									[
										69138,
										69149
									],
									[
										69604,
										69615
									],
									[
										69843,
										69854
									],
									[
										70005,
										70016
									],
									[
										70244,
										70255
									],
									[
										70407,
										70418
									],
									[
										70646,
										70657
									],
									[
										70874,
										70885
									],
									[
										71113,
										71124
									],
									[
										71332,
										71343
									],
									[
										71373,
										71384
									],
									[
										71496,
										71507
									],
									[
										71509,
										71520
									],
									[
										71687,
										71698
									],
									[
										71723,
										71734
									],
									[
										71843,
										71854
									],
									[
										72086,
										72097
									],
									[
										72127,
										72138
									],
									[
										72250,
										72261
									],
									[
										72263,
										72274
									],
									[
										72543,
										72554
									],
									[
										72584,
										72595
									],
									[
										72698,
										72709
									],
									[
										72711,
										72722
									],
									[
										72921,
										72932
									],
									[
										72962,
										72973
									],
									[
										73073,
										73084
									],
									[
										73086,
										73097
									],
									[
										73296,
										73307
									],
									[
										73337,
										73348
									],
									[
										73457,
										73468
									],
									[
										73470,
										73481
									],
									[
										73680,
										73691
									],
									[
										73721,
										73732
									],
									[
										73843,
										73854
									],
									[
										73856,
										73867
									],
									[
										74069,
										74080
									],
									[
										74110,
										74121
									],
									[
										74228,
										74239
									],
									[
										74241,
										74252
									],
									[
										74451,
										74462
									],
									[
										74492,
										74503
									],
									[
										74605,
										74616
									],
									[
										74618,
										74629
									],
									[
										74831,
										74842
									],
									[
										74872,
										74883
									],
									[
										74982,
										74993
									],
									[
										74995,
										75006
									],
									[
										75180,
										75191
									],
									[
										75397,
										75408
									],
									[
										75465,
										75476
									],
									[
										75506,
										75517
									],
									[
										75579,
										75590
									],
									[
										75737,
										75748
									],
									[
										75929,
										75940
									],
									[
										75998,
										76009
									],
									[
										76039,
										76050
									],
									[
										76112,
										76123
									],
									[
										76271,
										76282
									],
									[
										76493,
										76504
									],
									[
										76534,
										76545
									],
									[
										76607,
										76618
									],
									[
										76774,
										76785
									],
									[
										76990,
										77001
									],
									[
										77031,
										77042
									],
									[
										77120,
										77131
									],
									[
										77210,
										77221
									],
									[
										77432,
										77443
									],
									[
										77473,
										77484
									],
									[
										77632,
										77643
									],
									[
										77729,
										77740
									],
									[
										77987,
										77998
									],
									[
										78028,
										78039
									],
									[
										78117,
										78128
									],
									[
										78246,
										78257
									],
									[
										78582,
										78593
									],
									[
										78842,
										78853
									],
									[
										78855,
										78866
									],
									[
										79322,
										79333
									],
									[
										79583,
										79594
									],
									[
										79596,
										79607
									],
									[
										80122,
										80133
									],
									[
										80383,
										80394
									],
									[
										80396,
										80407
									],
									[
										80891,
										80902
									],
									[
										81152,
										81163
									],
									[
										81165,
										81176
									],
									[
										81676,
										81687
									],
									[
										81937,
										81948
									],
									[
										81950,
										81961
									],
									[
										82441,
										82452
									],
									[
										82626,
										82637
									],
									[
										82639,
										82650
									],
									[
										82846,
										82857
									],
									[
										83304,
										83315
									],
									[
										83376,
										83387
									],
									[
										83637,
										83648
									],
									[
										83650,
										83661
									],
									[
										83923,
										83934
									],
									[
										84199,
										84210
									],
									[
										84266,
										84277
									],
									[
										84519,
										84530
									],
									[
										84532,
										84543
									],
									[
										84839,
										84850
									],
									[
										85100,
										85111
									],
									[
										85113,
										85124
									],
									[
										85400,
										85411
									],
									[
										85636,
										85647
									],
									[
										85799,
										85810
									],
									[
										86035,
										86046
									],
									[
										86262,
										86273
									],
									[
										86651,
										86662
									],
									[
										86844,
										86855
									],
									[
										87086,
										87097
									],
									[
										87099,
										87110
									],
									[
										87371,
										87382
									],
									[
										87601,
										87612
									],
									[
										87614,
										87625
									],
									[
										87860,
										87871
									],
									[
										88104,
										88115
									],
									[
										88117,
										88128
									],
									[
										88363,
										88374
									],
									[
										88604,
										88615
									],
									[
										88617,
										88628
									],
									[
										88863,
										88874
									],
									[
										89090,
										89101
									],
									[
										89103,
										89114
									],
									[
										89352,
										89363
									],
									[
										89584,
										89595
									],
									[
										89597,
										89608
									],
									[
										89846,
										89857
									],
									[
										90070,
										90081
									],
									[
										90083,
										90094
									],
									[
										90332,
										90343
									],
									[
										90516,
										90527
									],
									[
										90588,
										90599
									],
									[
										90828,
										90839
									],
									[
										90841,
										90852
									],
									[
										91052,
										91063
									],
									[
										91125,
										91136
									],
									[
										91357,
										91368
									],
									[
										91370,
										91381
									],
									[
										91744,
										91755
									],
									[
										91979,
										91990
									],
									[
										92214,
										92225
									],
									[
										92510,
										92521
									],
									[
										92581,
										92592
									],
									[
										92764,
										92775
									],
									[
										92847,
										92858
									],
									[
										92888,
										92899
									],
									[
										93041,
										93052
									],
									[
										93054,
										93065
									],
									[
										93212,
										93223
									],
									[
										93248,
										93259
									],
									[
										93363,
										93374
									],
									[
										93588,
										93599
									],
									[
										93629,
										93640
									],
									[
										93767,
										93778
									],
									[
										93780,
										93791
									],
									[
										93999,
										94010
									],
									[
										94035,
										94046
									],
									[
										94150,
										94161
									],
									[
										94330,
										94341
									],
									[
										94563,
										94574
									],
									[
										94815,
										94826
									],
									[
										95022,
										95033
									],
									[
										95063,
										95074
									],
									[
										95201,
										95212
									],
									[
										95214,
										95225
									],
									[
										95433,
										95444
									],
									[
										95469,
										95480
									],
									[
										95584,
										95595
									],
									[
										95764,
										95775
									],
									[
										95997,
										96008
									],
									[
										96249,
										96260
									],
									[
										96456,
										96467
									],
									[
										96497,
										96508
									],
									[
										96635,
										96646
									],
									[
										96648,
										96659
									],
									[
										96867,
										96878
									],
									[
										96903,
										96914
									],
									[
										97018,
										97029
									],
									[
										97198,
										97209
									],
									[
										97431,
										97442
									],
									[
										97603,
										97614
									],
									[
										97783,
										97794
									],
									[
										97824,
										97835
									],
									[
										97962,
										97973
									],
									[
										97975,
										97986
									],
									[
										98194,
										98205
									],
									[
										98230,
										98241
									],
									[
										98345,
										98356
									],
									[
										98525,
										98536
									],
									[
										98758,
										98769
									],
									[
										98930,
										98941
									],
									[
										99100,
										99111
									],
									[
										99141,
										99152
									],
									[
										99283,
										99294
									],
									[
										99296,
										99307
									],
									[
										99407,
										99418
									],
									[
										99443,
										99454
									],
									[
										99558,
										99569
									],
									[
										99745,
										99756
									],
									[
										99786,
										99797
									],
									[
										99928,
										99939
									],
									[
										99941,
										99952
									],
									[
										100052,
										100063
									],
									[
										100088,
										100099
									],
									[
										100203,
										100214
									],
									[
										100383,
										100394
									],
									[
										100494,
										100505
									],
									[
										100635,
										100646
									],
									[
										100676,
										100687
									],
									[
										100818,
										100829
									],
									[
										100831,
										100842
									],
									[
										100942,
										100953
									],
									[
										100996,
										101007
									],
									[
										101111,
										101122
									],
									[
										101298,
										101309
									],
									[
										101339,
										101350
									],
									[
										101481,
										101492
									],
									[
										101494,
										101505
									],
									[
										101605,
										101616
									],
									[
										101641,
										101652
									],
									[
										101756,
										101767
									],
									[
										101980,
										101991
									],
									[
										102021,
										102032
									],
									[
										102163,
										102174
									],
									[
										102176,
										102187
									],
									[
										102308,
										102319
									],
									[
										102344,
										102355
									],
									[
										102459,
										102470
									],
									[
										102683,
										102694
									],
									[
										102724,
										102735
									],
									[
										102866,
										102877
									],
									[
										102879,
										102890
									],
									[
										102990,
										103001
									],
									[
										103046,
										103057
									],
									[
										103174,
										103185
									],
									[
										103215,
										103226
									],
									[
										103357,
										103368
									],
									[
										103370,
										103381
									],
									[
										103519,
										103530
									],
									[
										103555,
										103566
									],
									[
										103666,
										103677
									],
									[
										103928,
										103939
									],
									[
										103999,
										104010
									],
									[
										104182,
										104193
									],
									[
										104336,
										104347
									],
									[
										104377,
										104388
									],
									[
										104489,
										104500
									],
									[
										104502,
										104513
									],
									[
										104664,
										104675
									],
									[
										104700,
										104711
									],
									[
										104804,
										104815
									],
									[
										105005,
										105016
									],
									[
										105046,
										105057
									],
									[
										105158,
										105169
									],
									[
										105171,
										105182
									],
									[
										105334,
										105345
									],
									[
										105370,
										105381
									],
									[
										105549,
										105560
									],
									[
										105590,
										105601
									],
									[
										105702,
										105713
									],
									[
										105715,
										105726
									],
									[
										105877,
										105888
									],
									[
										105942,
										105953
									],
									[
										106103,
										106114
									],
									[
										106144,
										106155
									],
									[
										106256,
										106267
									],
									[
										106269,
										106280
									],
									[
										106460,
										106471
									],
									[
										106519,
										106530
									],
									[
										106708,
										106719
									],
									[
										106749,
										106760
									],
									[
										106861,
										106872
									],
									[
										106874,
										106885
									],
									[
										107071,
										107082
									],
									[
										107107,
										107118
									],
									[
										107279,
										107290
									],
									[
										107320,
										107331
									],
									[
										107432,
										107443
									],
									[
										107445,
										107456
									],
									[
										107608,
										107619
									],
									[
										107644,
										107655
									],
									[
										107819,
										107830
									],
									[
										107860,
										107871
									],
									[
										107972,
										107983
									],
									[
										107985,
										107996
									],
									[
										108147,
										108158
									],
									[
										108262,
										108273
									],
									[
										108405,
										108416
									],
									[
										108466,
										108477
									],
									[
										108507,
										108518
									],
									[
										108619,
										108630
									],
									[
										108632,
										108643
									],
									[
										108858,
										108869
									],
									[
										109009,
										109020
									],
									[
										109064,
										109075
									],
									[
										109105,
										109116
									],
									[
										109217,
										109228
									],
									[
										109230,
										109241
									],
									[
										109456,
										109467
									],
									[
										109587,
										109598
									],
									[
										109737,
										109748
									],
									[
										109792,
										109803
									],
									[
										109833,
										109844
									],
									[
										109945,
										109956
									],
									[
										109958,
										109969
									],
									[
										110184,
										110195
									],
									[
										110315,
										110326
									],
									[
										110465,
										110476
									],
									[
										110530,
										110541
									],
									[
										110571,
										110582
									],
									[
										110683,
										110694
									],
									[
										110696,
										110707
									],
									[
										110922,
										110933
									],
									[
										111084,
										111095
									],
									[
										111125,
										111136
									],
									[
										111228,
										111239
									],
									[
										111241,
										111252
									],
									[
										111399,
										111410
									],
									[
										111624,
										111635
									],
									[
										111665,
										111676
									],
									[
										111730,
										111741
									],
									[
										111878,
										111889
									],
									[
										112174,
										112185
									],
									[
										112380,
										112391
									],
									[
										112393,
										112404
									],
									[
										112622,
										112633
									],
									[
										112635,
										112646
									],
									[
										112877,
										112888
									],
									[
										112890,
										112901
									],
									[
										113185,
										113196
									],
									[
										113500,
										113511
									],
									[
										113575,
										113586
									],
									[
										113774,
										113785
									],
									[
										113907,
										113918
									],
									[
										113998,
										114009
									],
									[
										114121,
										114132
									],
									[
										114313,
										114324
									],
									[
										114404,
										114415
									],
									[
										114527,
										114538
									],
									[
										114719,
										114730
									],
									[
										114831,
										114842
									],
									[
										114954,
										114965
									],
									[
										115146,
										115157
									],
									[
										115270,
										115281
									],
									[
										115393,
										115404
									],
									[
										115585,
										115596
									],
									[
										115676,
										115687
									],
									[
										115799,
										115810
									],
									[
										115991,
										116002
									],
									[
										116099,
										116110
									],
									[
										116277,
										116288
									],
									[
										116313,
										116324
									],
									[
										116506,
										116517
									],
									[
										116702,
										116713
									],
									[
										116743,
										116754
									],
									[
										116866,
										116877
									],
									[
										116968,
										116979
									],
									[
										117009,
										117020
									],
									[
										117191,
										117202
									],
									[
										117282,
										117293
									],
									[
										117460,
										117471
									],
									[
										117551,
										117562
									],
									[
										117729,
										117740
									],
									[
										117765,
										117776
									],
									[
										117943,
										117954
									],
									[
										118034,
										118045
									],
									[
										118212,
										118223
									],
									[
										118303,
										118314
									],
									[
										118481,
										118492
									],
									[
										118572,
										118583
									],
									[
										118750,
										118761
									],
									[
										118841,
										118852
									],
									[
										119019,
										119030
									],
									[
										119110,
										119121
									],
									[
										119288,
										119299
									],
									[
										119379,
										119390
									],
									[
										119557,
										119568
									],
									[
										119648,
										119659
									],
									[
										119826,
										119837
									],
									[
										119917,
										119928
									],
									[
										120095,
										120106
									],
									[
										120186,
										120197
									],
									[
										120364,
										120375
									],
									[
										120455,
										120466
									],
									[
										120633,
										120644
									],
									[
										120724,
										120735
									],
									[
										120902,
										120913
									],
									[
										120993,
										121004
									],
									[
										121171,
										121182
									],
									[
										121262,
										121273
									],
									[
										121417,
										121428
									],
									[
										121569,
										121580
									],
									[
										121779,
										121790
									],
									[
										121870,
										121881
									],
									[
										122025,
										122036
									],
									[
										122053,
										122064
									],
									[
										122196,
										122207
									],
									[
										122425,
										122436
									],
									[
										122516,
										122527
									],
									[
										122708,
										122719
									],
									[
										122879,
										122890
									],
									[
										123021,
										123032
									],
									[
										123216,
										123227
									],
									[
										123307,
										123318
									],
									[
										123472,
										123483
									],
									[
										123621,
										123632
									],
									[
										123768,
										123779
									],
									[
										123851,
										123862
									],
									[
										124082,
										124093
									],
									[
										124183,
										124194
									],
									[
										124274,
										124285
									],
									[
										124424,
										124435
									],
									[
										124661,
										124672
									],
									[
										124809,
										124820
									],
									[
										124892,
										124903
									],
									[
										125094,
										125105
									],
									[
										125195,
										125206
									],
									[
										125286,
										125297
									],
									[
										125436,
										125447
									],
									[
										125673,
										125684
									],
									[
										125825,
										125836
									],
									[
										125908,
										125919
									],
									[
										126156,
										126167
									],
									[
										126257,
										126268
									],
									[
										126348,
										126359
									],
									[
										126500,
										126511
									],
									[
										126583,
										126594
									],
									[
										126827,
										126838
									],
									[
										126928,
										126939
									],
									[
										127019,
										127030
									],
									[
										127205,
										127216
									],
									[
										127436,
										127447
									],
									[
										127880,
										127891
									],
									[
										128111,
										128122
									],
									[
										128551,
										128562
									],
									[
										128906,
										128917
									],
									[
										129006,
										129017
									],
									[
										129374,
										129385
									],
									[
										129605,
										129616
									],
									[
										130002,
										130013
									],
									[
										130233,
										130244
									],
									[
										130528,
										130539
									],
									[
										130759,
										130770
									],
									[
										131011,
										131022
									],
									[
										131170,
										131181
									],
									[
										131243,
										131254
									],
									[
										131443,
										131454
									],
									[
										131743,
										131754
									],
									[
										131974,
										131985
									],
									[
										132279,
										132290
									],
									[
										132320,
										132331
									],
									[
										132440,
										132451
									],
									[
										132453,
										132464
									],
									[
										132622,
										132633
									],
									[
										132658,
										132669
									],
									[
										132856,
										132867
									],
									[
										132897,
										132908
									],
									[
										133017,
										133028
									],
									[
										133030,
										133041
									],
									[
										133202,
										133213
									],
									[
										133238,
										133249
									],
									[
										133435,
										133446
									],
									[
										133476,
										133487
									],
									[
										133596,
										133607
									],
									[
										133609,
										133620
									],
									[
										133780,
										133791
									],
									[
										133816,
										133827
									],
									[
										133966,
										133977
									],
									[
										134029,
										134040
									],
									[
										134070,
										134081
									],
									[
										134190,
										134201
									],
									[
										134203,
										134214
									],
									[
										134430,
										134441
									],
									[
										134620,
										134631
									],
									[
										134913,
										134924
									],
									[
										134988,
										134999
									],
									[
										135187,
										135198
									],
									[
										135282,
										135293
									],
									[
										135323,
										135334
									],
									[
										135442,
										135453
									],
									[
										135455,
										135466
									],
									[
										135638,
										135649
									],
									[
										135674,
										135685
									],
									[
										135798,
										135809
									],
									[
										136002,
										136013
									],
									[
										136043,
										136054
									],
									[
										136162,
										136173
									],
									[
										136175,
										136186
									],
									[
										136336,
										136347
									],
									[
										136372,
										136383
									],
									[
										136496,
										136507
									],
									[
										136677,
										136688
									],
									[
										136713,
										136724
									],
									[
										136829,
										136840
									],
									[
										137052,
										137063
									],
									[
										137088,
										137099
									],
									[
										137204,
										137215
									],
									[
										137427,
										137438
									],
									[
										137463,
										137474
									],
									[
										137579,
										137590
									],
									[
										137802,
										137813
									],
									[
										137838,
										137849
									],
									[
										138029,
										138040
									],
									[
										138070,
										138081
									],
									[
										138326,
										138337
									],
									[
										138498,
										138509
									],
									[
										138694,
										138705
									],
									[
										138730,
										138741
									],
									[
										138898,
										138909
									],
									[
										138934,
										138945
									],
									[
										139098,
										139109
									],
									[
										139134,
										139145
									],
									[
										139298,
										139309
									],
									[
										139334,
										139345
									],
									[
										139498,
										139509
									],
									[
										139534,
										139545
									],
									[
										139698,
										139709
									],
									[
										139734,
										139745
									],
									[
										139898,
										139909
									],
									[
										139934,
										139945
									],
									[
										140098,
										140109
									],
									[
										140134,
										140145
									],
									[
										140298,
										140309
									],
									[
										140334,
										140345
									],
									[
										140483,
										140494
									],
									[
										140740,
										140751
									],
									[
										140889,
										140900
									],
									[
										140921,
										140932
									],
									[
										141182,
										141193
									],
									[
										141370,
										141381
									],
									[
										141527,
										141538
									],
									[
										141768,
										141779
									],
									[
										141926,
										141937
									],
									[
										142064,
										142075
									],
									[
										142303,
										142314
									],
									[
										142446,
										142457
									],
									[
										142584,
										142595
									],
									[
										142873,
										142884
									],
									[
										143138,
										143149
									],
									[
										143324,
										143335
									],
									[
										143559,
										143570
									],
									[
										143572,
										143583
									],
									[
										143964,
										143975
									],
									[
										144204,
										144215
									],
									[
										144217,
										144228
									],
									[
										144604,
										144615
									],
									[
										144839,
										144850
									],
									[
										144852,
										144863
									],
									[
										145222,
										145233
									],
									[
										145468,
										145479
									],
									[
										145481,
										145492
									],
									[
										145855,
										145866
									],
									[
										146051,
										146062
									],
									[
										146240,
										146251
									],
									[
										146253,
										146264
									],
									[
										146527,
										146538
									],
									[
										146715,
										146726
									],
									[
										146728,
										146739
									],
									[
										146968,
										146979
									],
									[
										147036,
										147047
									],
									[
										147271,
										147282
									],
									[
										147284,
										147295
									],
									[
										147470,
										147481
									],
									[
										147716,
										147727
									],
									[
										147785,
										147796
									],
									[
										148012,
										148023
									],
									[
										148025,
										148036
									],
									[
										148251,
										148262
									],
									[
										148486,
										148497
									],
									[
										148499,
										148510
									],
									[
										148722,
										148733
									],
									[
										149015,
										149026
									],
									[
										149313,
										149324
									],
									[
										227788,
										227799
									],
									[
										233872,
										233883
									],
									[
										312357,
										312368
									],
									[
										318397,
										318408
									],
									[
										318724,
										318735
									],
									[
										319008,
										319019
									],
									[
										319038,
										319049
									],
									[
										319443,
										319454
									],
									[
										320029,
										320040
									],
									[
										320591,
										320602
									],
									[
										321256,
										321267
									],
									[
										321941,
										321952
									],
									[
										322261,
										322272
									],
									[
										322292,
										322303
									],
									[
										322304,
										322315
									],
									[
										322380,
										322391
									],
									[
										322570,
										322581
									],
									[
										322826,
										322837
									],
									[
										322838,
										322849
									],
									[
										323418,
										323429
									],
									[
										324222,
										324233
									],
									[
										324669,
										324680
									],
									[
										324704,
										324715
									],
									[
										324976,
										324987
									],
									[
										325453,
										325464
									],
									[
										325642,
										325653
									],
									[
										326023,
										326034
									],
									[
										326333,
										326344
									],
									[
										326660,
										326671
									],
									[
										326707,
										326718
									],
									[
										326774,
										326785
									],
									[
										326954,
										326965
									],
									[
										327085,
										327096
									],
									[
										327121,
										327132
									],
									[
										327246,
										327257
									],
									[
										327489,
										327500
									],
									[
										327678,
										327689
									],
									[
										327709,
										327720
									],
									[
										327975,
										327986
									],
									[
										327988,
										327999
									],
									[
										328217,
										328228
									],
									[
										328390,
										328401
									],
									[
										328483,
										328494
									],
									[
										328776,
										328787
									],
									[
										329091,
										329102
									],
									[
										329519,
										329530
									],
									[
										329776,
										329787
									],
									[
										330044,
										330055
									],
									[
										330108,
										330119
									],
									[
										330188,
										330199
									],
									[
										330259,
										330270
									],
									[
										330424,
										330435
									],
									[
										330471,
										330482
									],
									[
										330538,
										330549
									],
									[
										330711,
										330722
									],
									[
										330838,
										330849
									],
									[
										330874,
										330885
									],
									[
										331030,
										331041
									],
									[
										331061,
										331072
									],
									[
										331318,
										331329
									],
									[
										331331,
										331342
									],
									[
										331623,
										331634
									],
									[
										331690,
										331701
									],
									[
										332031,
										332042
									],
									[
										332362,
										332373
									],
									[
										332798,
										332809
									],
									[
										332856,
										332867
									],
									[
										333368,
										333379
									],
									[
										333556,
										333567
									],
									[
										333592,
										333603
									],
									[
										333806,
										333817
									],
									[
										333838,
										333849
									],
									[
										334394,
										334405
									],
									[
										334806,
										334817
									],
									[
										334916,
										334927
									],
									[
										335065,
										335076
									],
									[
										335232,
										335243
									],
									[
										335553,
										335564
									],
									[
										335749,
										335760
									],
									[
										335796,
										335807
									],
									[
										335891,
										335902
									],
									[
										336025,
										336036
									],
									[
										336061,
										336072
									],
									[
										336143,
										336154
									],
									[
										336338,
										336349
									],
									[
										336495,
										336506
									],
									[
										336542,
										336553
									],
									[
										336661,
										336672
									],
									[
										336674,
										336685
									],
									[
										336943,
										336954
									],
									[
										337353,
										337364
									],
									[
										337600,
										337611
									],
									[
										337639,
										337650
									],
									[
										337661,
										337672
									],
									[
										337694,
										337705
									],
									[
										337729,
										337740
									],
									[
										337767,
										337778
									],
									[
										337806,
										337817
									],
									[
										337880,
										337891
									],
									[
										338010,
										338021
									],
									[
										338296,
										338307
									],
									[
										338426,
										338437
									],
									[
										338688,
										338699
									],
									[
										338885,
										338896
									],
									[
										339097,
										339108
									],
									[
										339136,
										339147
									],
									[
										339158,
										339169
									],
									[
										339191,
										339202
									],
									[
										339226,
										339237
									],
									[
										339264,
										339275
									],
									[
										339303,
										339314
									],
									[
										339441,
										339452
									],
									[
										339641,
										339652
									],
									[
										339805,
										339816
									],
									[
										340011,
										340022
									],
									[
										340223,
										340234
									],
									[
										340425,
										340436
									],
									[
										340648,
										340659
									],
									[
										340911,
										340922
									],
									[
										340950,
										340961
									],
									[
										340972,
										340983
									],
									[
										341005,
										341016
									],
									[
										341040,
										341051
									],
									[
										341078,
										341089
									],
									[
										341117,
										341128
									],
									[
										341279,
										341290
									],
									[
										341496,
										341507
									],
									[
										341612,
										341623
									],
									[
										341809,
										341820
									],
									[
										341940,
										341951
									],
									[
										342082,
										342093
									],
									[
										342269,
										342280
									],
									[
										342438,
										342449
									],
									[
										342487,
										342498
									],
									[
										342646,
										342657
									],
									[
										342713,
										342724
									],
									[
										342809,
										342820
									],
									[
										343113,
										343124
									],
									[
										343343,
										343354
									],
									[
										343378,
										343389
									],
									[
										343400,
										343411
									],
									[
										343429,
										343440
									],
									[
										343460,
										343471
									],
									[
										343494,
										343505
									],
									[
										343529,
										343540
									],
									[
										343687,
										343698
									],
									[
										343952,
										343963
									],
									[
										344069,
										344080
									],
									[
										344319,
										344330
									],
									[
										344513,
										344524
									],
									[
										344718,
										344729
									],
									[
										344930,
										344941
									],
									[
										345129,
										345140
									],
									[
										345304,
										345315
									],
									[
										345503,
										345514
									],
									[
										345538,
										345549
									],
									[
										345560,
										345571
									],
									[
										345589,
										345600
									],
									[
										345620,
										345631
									],
									[
										345654,
										345665
									],
									[
										345689,
										345700
									],
									[
										345810,
										345821
									],
									[
										346008,
										346019
									],
									[
										346156,
										346167
									],
									[
										346332,
										346343
									],
									[
										346562,
										346573
									],
									[
										346597,
										346608
									],
									[
										346619,
										346630
									],
									[
										346648,
										346659
									],
									[
										346679,
										346690
									],
									[
										346713,
										346724
									],
									[
										346748,
										346759
									],
									[
										346893,
										346904
									],
									[
										347085,
										347096
									],
									[
										347189,
										347200
									],
									[
										347365,
										347376
									],
									[
										347689,
										347700
									],
									[
										347896,
										347907
									],
									[
										348053,
										348064
									],
									[
										348076,
										348087
									],
									[
										348254,
										348265
									],
									[
										348317,
										348328
									],
									[
										348340,
										348351
									],
									[
										348544,
										348555
									],
									[
										348694,
										348705
									],
									[
										348978,
										348989
									],
									[
										349043,
										349054
									],
									[
										349077,
										349088
									],
									[
										349128,
										349139
									],
									[
										349446,
										349457
									],
									[
										349547,
										349558
									],
									[
										349757,
										349768
									],
									[
										350007,
										350018
									],
									[
										350502,
										350513
									],
									[
										350682,
										350693
									],
									[
										350774,
										350785
									],
									[
										350919,
										350930
									],
									[
										350950,
										350961
									],
									[
										350996,
										351007
									],
									[
										351085,
										351096
									],
									[
										351163,
										351174
									],
									[
										351240,
										351251
									],
									[
										351326,
										351337
									],
									[
										351365,
										351376
									],
									[
										351456,
										351467
									],
									[
										351471,
										351482
									],
									[
										351566,
										351577
									],
									[
										351670,
										351681
									],
									[
										351815,
										351826
									],
									[
										351987,
										351998
									],
									[
										352193,
										352204
									],
									[
										352322,
										352333
									],
									[
										352533,
										352544
									],
									[
										352723,
										352734
									],
									[
										352949,
										352960
									],
									[
										353082,
										353093
									],
									[
										353233,
										353244
									],
									[
										353366,
										353377
									],
									[
										353592,
										353603
									],
									[
										353708,
										353719
									],
									[
										353871,
										353882
									],
									[
										354188,
										354199
									],
									[
										354337,
										354348
									],
									[
										354373,
										354384
									],
									[
										354404,
										354415
									],
									[
										354439,
										354450
									],
									[
										354584,
										354595
									],
									[
										354809,
										354820
									],
									[
										354928,
										354939
									],
									[
										355067,
										355078
									],
									[
										355212,
										355223
									],
									[
										355243,
										355254
									],
									[
										355284,
										355295
									],
									[
										355373,
										355384
									],
									[
										355451,
										355462
									],
									[
										355528,
										355539
									],
									[
										355610,
										355621
									],
									[
										355649,
										355660
									],
									[
										355740,
										355751
									],
									[
										355755,
										355766
									],
									[
										355846,
										355857
									],
									[
										355950,
										355961
									],
									[
										356090,
										356101
									],
									[
										356325,
										356336
									],
									[
										356460,
										356471
									],
									[
										356614,
										356625
									],
									[
										356759,
										356770
									],
									[
										356790,
										356801
									],
									[
										356839,
										356850
									],
									[
										356928,
										356939
									],
									[
										356995,
										357006
									],
									[
										357072,
										357083
									],
									[
										357141,
										357152
									],
									[
										357180,
										357191
									],
									[
										357271,
										357282
									],
									[
										357286,
										357297
									],
									[
										357370,
										357381
									],
									[
										357474,
										357485
									],
									[
										357615,
										357626
									],
									[
										357790,
										357801
									],
									[
										357937,
										357948
									],
									[
										358122,
										358133
									],
									[
										358288,
										358299
									],
									[
										358526,
										358537
									],
									[
										358666,
										358677
									],
									[
										358945,
										358956
									],
									[
										359016,
										359027
									],
									[
										359199,
										359210
									],
									[
										359282,
										359293
									],
									[
										359323,
										359334
									],
									[
										359441,
										359452
									],
									[
										359454,
										359465
									],
									[
										359629,
										359640
									],
									[
										359665,
										359676
									],
									[
										359781,
										359792
									],
									[
										359969,
										359980
									],
									[
										360010,
										360021
									],
									[
										360128,
										360139
									],
									[
										360141,
										360152
									],
									[
										360294,
										360305
									],
									[
										360330,
										360341
									],
									[
										360446,
										360457
									],
									[
										360641,
										360652
									],
									[
										360879,
										360890
									],
									[
										360892,
										360903
									],
									[
										361289,
										361300
									],
									[
										361531,
										361542
									],
									[
										361544,
										361555
									],
									[
										361942,
										361953
									],
									[
										362185,
										362196
									],
									[
										362198,
										362209
									],
									[
										362585,
										362596
									],
									[
										362823,
										362834
									],
									[
										362836,
										362847
									],
									[
										363191,
										363202
									],
									[
										363387,
										363398
									],
									[
										363579,
										363590
									],
									[
										363592,
										363603
									],
									[
										363866,
										363877
									],
									[
										364057,
										364068
									],
									[
										364070,
										364081
									],
									[
										364310,
										364321
									],
									[
										364378,
										364389
									],
									[
										364616,
										364627
									],
									[
										364629,
										364640
									],
									[
										364815,
										364826
									],
									[
										365064,
										365075
									],
									[
										365133,
										365144
									],
									[
										365363,
										365374
									],
									[
										365376,
										365387
									],
									[
										365602,
										365613
									],
									[
										365840,
										365851
									],
									[
										365853,
										365864
									],
									[
										366076,
										366087
									],
									[
										366221,
										366232
									],
									[
										366262,
										366273
									],
									[
										366407,
										366418
									],
									[
										366420,
										366431
									],
									[
										366578,
										366589
									],
									[
										366614,
										366625
									],
									[
										366729,
										366740
									],
									[
										366954,
										366965
									],
									[
										366995,
										367006
									],
									[
										367136,
										367147
									],
									[
										367149,
										367160
									],
									[
										367368,
										367379
									],
									[
										367404,
										367415
									],
									[
										367519,
										367530
									],
									[
										367699,
										367710
									],
									[
										367932,
										367943
									],
									[
										368187,
										368198
									],
									[
										368394,
										368405
									],
									[
										368435,
										368446
									],
									[
										368576,
										368587
									],
									[
										368589,
										368600
									],
									[
										368808,
										368819
									],
									[
										368844,
										368855
									],
									[
										368959,
										368970
									],
									[
										369139,
										369150
									],
									[
										369372,
										369383
									],
									[
										369627,
										369638
									],
									[
										369796,
										369807
									],
									[
										369837,
										369848
									],
									[
										369982,
										369993
									],
									[
										369995,
										370006
									],
									[
										370182,
										370193
									],
									[
										370247,
										370258
									],
									[
										370362,
										370373
									],
									[
										370587,
										370598
									],
									[
										370628,
										370639
									],
									[
										370769,
										370780
									],
									[
										370782,
										370793
									],
									[
										371001,
										371012
									],
									[
										371037,
										371048
									],
									[
										371152,
										371163
									],
									[
										371332,
										371343
									],
									[
										371565,
										371576
									],
									[
										371740,
										371751
									],
									[
										371920,
										371931
									],
									[
										371961,
										371972
									],
									[
										372102,
										372113
									],
									[
										372115,
										372126
									],
									[
										372334,
										372345
									],
									[
										372370,
										372381
									],
									[
										372485,
										372496
									],
									[
										372665,
										372676
									],
									[
										372881,
										372892
									],
									[
										373023,
										373034
									],
									[
										373064,
										373075
									],
									[
										373265,
										373276
									],
									[
										373278,
										373289
									],
									[
										373483,
										373494
									],
									[
										373519,
										373530
									],
									[
										373763,
										373774
									],
									[
										374018,
										374029
									],
									[
										374031,
										374042
									],
									[
										374197,
										374208
									],
									[
										374233,
										374244
									],
									[
										374356,
										374367
									],
									[
										374551,
										374562
									],
									[
										374592,
										374603
									],
									[
										374883,
										374894
									],
									[
										374896,
										374907
									],
									[
										375101,
										375112
									],
									[
										375137,
										375148
									],
									[
										375480,
										375491
									],
									[
										375829,
										375840
									],
									[
										375842,
										375853
									],
									[
										376008,
										376019
									],
									[
										376044,
										376055
									],
									[
										376167,
										376178
									],
									[
										376400,
										376411
									],
									[
										376441,
										376452
									],
									[
										376582,
										376593
									],
									[
										376595,
										376606
									],
									[
										376814,
										376825
									],
									[
										376850,
										376861
									],
									[
										376965,
										376976
									],
									[
										377145,
										377156
									],
									[
										377378,
										377389
									],
									[
										377553,
										377564
									],
									[
										377723,
										377734
									],
									[
										377764,
										377775
									],
									[
										377909,
										377920
									],
									[
										377922,
										377933
									],
									[
										378033,
										378044
									],
									[
										378069,
										378080
									],
									[
										378184,
										378195
									],
									[
										378371,
										378382
									],
									[
										378412,
										378423
									],
									[
										378557,
										378568
									],
									[
										378570,
										378581
									],
									[
										378681,
										378692
									],
									[
										378717,
										378728
									],
									[
										378832,
										378843
									],
									[
										379012,
										379023
									],
									[
										379123,
										379134
									],
									[
										379264,
										379275
									],
									[
										379305,
										379316
									],
									[
										379450,
										379461
									],
									[
										379463,
										379474
									],
									[
										379574,
										379585
									],
									[
										379610,
										379621
									],
									[
										379725,
										379736
									],
									[
										379949,
										379960
									],
									[
										379990,
										380001
									],
									[
										380135,
										380146
									],
									[
										380148,
										380159
									],
									[
										380280,
										380291
									],
									[
										380316,
										380327
									],
									[
										380431,
										380442
									],
									[
										380655,
										380666
									],
									[
										380696,
										380707
									],
									[
										380841,
										380852
									],
									[
										380854,
										380865
									],
									[
										380965,
										380976
									],
									[
										381021,
										381032
									],
									[
										381149,
										381160
									],
									[
										381190,
										381201
									],
									[
										381335,
										381346
									],
									[
										381348,
										381359
									],
									[
										381497,
										381508
									],
									[
										381533,
										381544
									],
									[
										381644,
										381655
									],
									[
										381851,
										381862
									],
									[
										382114,
										382125
									],
									[
										382127,
										382138
									],
									[
										382594,
										382605
									],
									[
										382858,
										382869
									],
									[
										382871,
										382882
									],
									[
										383404,
										383415
									],
									[
										383667,
										383678
									],
									[
										383680,
										383691
									],
									[
										384135,
										384146
									],
									[
										384399,
										384410
									],
									[
										384412,
										384423
									],
									[
										384907,
										384918
									],
									[
										385171,
										385182
									],
									[
										385184,
										385195
									],
									[
										385692,
										385703
									],
									[
										385992,
										386003
									],
									[
										386005,
										386016
									],
									[
										386472,
										386483
									],
									[
										386690,
										386701
									],
									[
										386703,
										386714
									],
									[
										387064,
										387075
									],
									[
										387281,
										387292
									],
									[
										387294,
										387305
									],
									[
										387658,
										387669
									],
									[
										387918,
										387929
									],
									[
										387931,
										387942
									],
									[
										388295,
										388306
									],
									[
										388554,
										388565
									],
									[
										388567,
										388578
									],
									[
										388900,
										388911
									],
									[
										389219,
										389230
									],
									[
										389344,
										389355
									],
									[
										389416,
										389427
									],
									[
										389680,
										389691
									],
									[
										389693,
										389704
									],
									[
										389867,
										389878
									],
									[
										389992,
										390003
									],
									[
										390065,
										390076
									],
									[
										390321,
										390332
									],
									[
										390334,
										390345
									],
									[
										390508,
										390519
									],
									[
										390696,
										390707
									],
									[
										390960,
										390971
									],
									[
										390973,
										390984
									],
									[
										391312,
										391323
									],
									[
										391497,
										391508
									],
									[
										391510,
										391521
									],
									[
										391737,
										391748
									],
									[
										392203,
										392214
									],
									[
										392442,
										392453
									],
									[
										392604,
										392615
									],
									[
										392843,
										392854
									],
									[
										393006,
										393017
									],
									[
										393245,
										393256
									],
									[
										393473,
										393484
									],
									[
										393712,
										393723
									],
									[
										393931,
										393942
									],
									[
										393972,
										393983
									],
									[
										394095,
										394106
									],
									[
										394108,
										394119
									],
									[
										394286,
										394297
									],
									[
										394322,
										394333
									],
									[
										394442,
										394453
									],
									[
										394685,
										394696
									],
									[
										394726,
										394737
									],
									[
										394849,
										394860
									],
									[
										394862,
										394873
									],
									[
										395142,
										395153
									],
									[
										395183,
										395194
									],
									[
										395297,
										395308
									],
									[
										395310,
										395321
									],
									[
										395520,
										395531
									],
									[
										395561,
										395572
									],
									[
										395672,
										395683
									],
									[
										395685,
										395696
									],
									[
										395895,
										395906
									],
									[
										395936,
										395947
									],
									[
										396056,
										396067
									],
									[
										396069,
										396080
									],
									[
										396279,
										396290
									],
									[
										396320,
										396331
									],
									[
										396442,
										396453
									],
									[
										396455,
										396466
									],
									[
										396668,
										396679
									],
									[
										396709,
										396720
									],
									[
										396827,
										396838
									],
									[
										396840,
										396851
									],
									[
										397050,
										397061
									],
									[
										397091,
										397102
									],
									[
										397204,
										397215
									],
									[
										397217,
										397228
									],
									[
										397430,
										397441
									],
									[
										397471,
										397482
									],
									[
										397581,
										397592
									],
									[
										397594,
										397605
									],
									[
										397779,
										397790
									],
									[
										397996,
										398007
									],
									[
										398064,
										398075
									],
									[
										398105,
										398116
									],
									[
										398178,
										398189
									],
									[
										398336,
										398347
									],
									[
										398528,
										398539
									],
									[
										398597,
										398608
									],
									[
										398638,
										398649
									],
									[
										398711,
										398722
									],
									[
										398870,
										398881
									],
									[
										399092,
										399103
									],
									[
										399133,
										399144
									],
									[
										399206,
										399217
									],
									[
										399373,
										399384
									],
									[
										399589,
										399600
									],
									[
										399630,
										399641
									],
									[
										399719,
										399730
									],
									[
										399809,
										399820
									],
									[
										400031,
										400042
									],
									[
										400072,
										400083
									],
									[
										400231,
										400242
									],
									[
										400328,
										400339
									],
									[
										400586,
										400597
									],
									[
										400627,
										400638
									],
									[
										400716,
										400727
									],
									[
										400845,
										400856
									],
									[
										401226,
										401237
									],
									[
										401486,
										401497
									],
									[
										401499,
										401510
									],
									[
										401966,
										401977
									],
									[
										402227,
										402238
									],
									[
										402240,
										402251
									],
									[
										402766,
										402777
									],
									[
										403027,
										403038
									],
									[
										403040,
										403051
									],
									[
										403535,
										403546
									],
									[
										403796,
										403807
									],
									[
										403809,
										403820
									],
									[
										404320,
										404331
									],
									[
										404581,
										404592
									],
									[
										404594,
										404605
									],
									[
										405085,
										405096
									],
									[
										405270,
										405281
									],
									[
										405283,
										405294
									],
									[
										405490,
										405501
									],
									[
										405948,
										405959
									],
									[
										406020,
										406031
									],
									[
										406281,
										406292
									],
									[
										406294,
										406305
									],
									[
										406567,
										406578
									],
									[
										406843,
										406854
									],
									[
										406910,
										406921
									],
									[
										407163,
										407174
									],
									[
										407176,
										407187
									],
									[
										407483,
										407494
									],
									[
										407744,
										407755
									],
									[
										407757,
										407768
									],
									[
										408044,
										408055
									],
									[
										408280,
										408291
									],
									[
										408443,
										408454
									],
									[
										408679,
										408690
									],
									[
										408906,
										408917
									],
									[
										409295,
										409306
									],
									[
										409488,
										409499
									],
									[
										409730,
										409741
									],
									[
										409743,
										409754
									],
									[
										410015,
										410026
									],
									[
										410245,
										410256
									],
									[
										410258,
										410269
									],
									[
										410504,
										410515
									],
									[
										410748,
										410759
									],
									[
										410761,
										410772
									],
									[
										411007,
										411018
									],
									[
										411248,
										411259
									],
									[
										411261,
										411272
									],
									[
										411507,
										411518
									],
									[
										411734,
										411745
									],
									[
										411747,
										411758
									],
									[
										411996,
										412007
									],
									[
										412228,
										412239
									],
									[
										412241,
										412252
									],
									[
										412490,
										412501
									],
									[
										412714,
										412725
									],
									[
										412727,
										412738
									],
									[
										412976,
										412987
									],
									[
										413160,
										413171
									],
									[
										413232,
										413243
									],
									[
										413472,
										413483
									],
									[
										413485,
										413496
									],
									[
										413696,
										413707
									],
									[
										413769,
										413780
									],
									[
										414001,
										414012
									],
									[
										414014,
										414025
									],
									[
										414433,
										414444
									],
									[
										414668,
										414679
									],
									[
										414903,
										414914
									],
									[
										415244,
										415255
									],
									[
										415315,
										415326
									],
									[
										415498,
										415509
									],
									[
										415581,
										415592
									],
									[
										415622,
										415633
									],
									[
										415775,
										415786
									],
									[
										415788,
										415799
									],
									[
										415946,
										415957
									],
									[
										415982,
										415993
									],
									[
										416097,
										416108
									],
									[
										416322,
										416333
									],
									[
										416363,
										416374
									],
									[
										416501,
										416512
									],
									[
										416514,
										416525
									],
									[
										416733,
										416744
									],
									[
										416769,
										416780
									],
									[
										416884,
										416895
									],
									[
										417064,
										417075
									],
									[
										417297,
										417308
									],
									[
										417549,
										417560
									],
									[
										417756,
										417767
									],
									[
										417797,
										417808
									],
									[
										417935,
										417946
									],
									[
										417948,
										417959
									],
									[
										418167,
										418178
									],
									[
										418203,
										418214
									],
									[
										418318,
										418329
									],
									[
										418498,
										418509
									],
									[
										418731,
										418742
									],
									[
										418983,
										418994
									],
									[
										419190,
										419201
									],
									[
										419231,
										419242
									],
									[
										419369,
										419380
									],
									[
										419382,
										419393
									],
									[
										419601,
										419612
									],
									[
										419637,
										419648
									],
									[
										419752,
										419763
									],
									[
										419932,
										419943
									],
									[
										420165,
										420176
									],
									[
										420337,
										420348
									],
									[
										420517,
										420528
									],
									[
										420558,
										420569
									],
									[
										420696,
										420707
									],
									[
										420709,
										420720
									],
									[
										420928,
										420939
									],
									[
										420964,
										420975
									],
									[
										421079,
										421090
									],
									[
										421259,
										421270
									],
									[
										421492,
										421503
									],
									[
										421664,
										421675
									],
									[
										421834,
										421845
									],
									[
										421875,
										421886
									],
									[
										422017,
										422028
									],
									[
										422030,
										422041
									],
									[
										422141,
										422152
									],
									[
										422177,
										422188
									],
									[
										422292,
										422303
									],
									[
										422479,
										422490
									],
									[
										422520,
										422531
									],
									[
										422662,
										422673
									],
									[
										422675,
										422686
									],
									[
										422786,
										422797
									],
									[
										422822,
										422833
									],
									[
										422937,
										422948
									],
									[
										423117,
										423128
									],
									[
										423228,
										423239
									],
									[
										423369,
										423380
									],
									[
										423410,
										423421
									],
									[
										423552,
										423563
									],
									[
										423565,
										423576
									],
									[
										423676,
										423687
									],
									[
										423730,
										423741
									],
									[
										423845,
										423856
									],
									[
										424032,
										424043
									],
									[
										424073,
										424084
									],
									[
										424215,
										424226
									],
									[
										424228,
										424239
									],
									[
										424339,
										424350
									],
									[
										424375,
										424386
									],
									[
										424490,
										424501
									],
									[
										424714,
										424725
									],
									[
										424755,
										424766
									],
									[
										424897,
										424908
									],
									[
										424910,
										424921
									],
									[
										425042,
										425053
									],
									[
										425078,
										425089
									],
									[
										425193,
										425204
									],
									[
										425417,
										425428
									],
									[
										425458,
										425469
									],
									[
										425600,
										425611
									],
									[
										425613,
										425624
									],
									[
										425724,
										425735
									],
									[
										425780,
										425791
									],
									[
										425908,
										425919
									],
									[
										425949,
										425960
									],
									[
										426091,
										426102
									],
									[
										426104,
										426115
									],
									[
										426253,
										426264
									],
									[
										426289,
										426300
									],
									[
										426400,
										426411
									],
									[
										426707,
										426718
									],
									[
										426778,
										426789
									],
									[
										426961,
										426972
									],
									[
										427115,
										427126
									],
									[
										427156,
										427167
									],
									[
										427268,
										427279
									],
									[
										427281,
										427292
									],
									[
										427443,
										427454
									],
									[
										427479,
										427490
									],
									[
										427583,
										427594
									],
									[
										427784,
										427795
									],
									[
										427825,
										427836
									],
									[
										427937,
										427948
									],
									[
										427950,
										427961
									],
									[
										428113,
										428124
									],
									[
										428149,
										428160
									],
									[
										428328,
										428339
									],
									[
										428369,
										428380
									],
									[
										428481,
										428492
									],
									[
										428494,
										428505
									],
									[
										428656,
										428667
									],
									[
										428721,
										428732
									],
									[
										428882,
										428893
									],
									[
										428923,
										428934
									],
									[
										429035,
										429046
									],
									[
										429048,
										429059
									],
									[
										429239,
										429250
									],
									[
										429298,
										429309
									],
									[
										429487,
										429498
									],
									[
										429528,
										429539
									],
									[
										429640,
										429651
									],
									[
										429653,
										429664
									],
									[
										429850,
										429861
									],
									[
										429886,
										429897
									],
									[
										430058,
										430069
									],
									[
										430099,
										430110
									],
									[
										430211,
										430222
									],
									[
										430224,
										430235
									],
									[
										430387,
										430398
									],
									[
										430423,
										430434
									],
									[
										430598,
										430609
									],
									[
										430639,
										430650
									],
									[
										430751,
										430762
									],
									[
										430764,
										430775
									],
									[
										430926,
										430937
									],
									[
										431041,
										431052
									],
									[
										431184,
										431195
									],
									[
										431245,
										431256
									],
									[
										431286,
										431297
									],
									[
										431398,
										431409
									],
									[
										431411,
										431422
									],
									[
										431637,
										431648
									],
									[
										431788,
										431799
									],
									[
										431843,
										431854
									],
									[
										431884,
										431895
									],
									[
										431996,
										432007
									],
									[
										432009,
										432020
									],
									[
										432235,
										432246
									],
									[
										432366,
										432377
									],
									[
										432516,
										432527
									],
									[
										432571,
										432582
									],
									[
										432612,
										432623
									],
									[
										432724,
										432735
									],
									[
										432737,
										432748
									],
									[
										432963,
										432974
									],
									[
										433094,
										433105
									],
									[
										433244,
										433255
									],
									[
										433309,
										433320
									],
									[
										433350,
										433361
									],
									[
										433462,
										433473
									],
									[
										433475,
										433486
									],
									[
										433701,
										433712
									],
									[
										433863,
										433874
									],
									[
										433904,
										433915
									],
									[
										434007,
										434018
									],
									[
										434020,
										434031
									],
									[
										434178,
										434189
									],
									[
										434403,
										434414
									],
									[
										434444,
										434455
									],
									[
										434509,
										434520
									],
									[
										434657,
										434668
									],
									[
										434998,
										435009
									],
									[
										435204,
										435215
									],
									[
										435217,
										435228
									],
									[
										435446,
										435457
									],
									[
										435459,
										435470
									],
									[
										435701,
										435712
									],
									[
										435714,
										435725
									],
									[
										436009,
										436020
									],
									[
										436369,
										436380
									],
									[
										436444,
										436455
									],
									[
										436643,
										436654
									],
									[
										436776,
										436787
									],
									[
										436867,
										436878
									],
									[
										436990,
										437001
									],
									[
										437182,
										437193
									],
									[
										437273,
										437284
									],
									[
										437396,
										437407
									],
									[
										437588,
										437599
									],
									[
										437700,
										437711
									],
									[
										437823,
										437834
									],
									[
										438015,
										438026
									],
									[
										438139,
										438150
									],
									[
										438262,
										438273
									],
									[
										438454,
										438465
									],
									[
										438545,
										438556
									],
									[
										438668,
										438679
									],
									[
										438860,
										438871
									],
									[
										438968,
										438979
									],
									[
										439146,
										439157
									],
									[
										439182,
										439193
									],
									[
										439375,
										439386
									],
									[
										439571,
										439582
									],
									[
										439612,
										439623
									],
									[
										439735,
										439746
									],
									[
										439837,
										439848
									],
									[
										439878,
										439889
									],
									[
										440060,
										440071
									],
									[
										440151,
										440162
									],
									[
										440329,
										440340
									],
									[
										440420,
										440431
									],
									[
										440598,
										440609
									],
									[
										440634,
										440645
									],
									[
										440812,
										440823
									],
									[
										440903,
										440914
									],
									[
										441081,
										441092
									],
									[
										441172,
										441183
									],
									[
										441350,
										441361
									],
									[
										441441,
										441452
									],
									[
										441619,
										441630
									],
									[
										441710,
										441721
									],
									[
										441888,
										441899
									],
									[
										441979,
										441990
									],
									[
										442157,
										442168
									],
									[
										442248,
										442259
									],
									[
										442426,
										442437
									],
									[
										442517,
										442528
									],
									[
										442695,
										442706
									],
									[
										442786,
										442797
									],
									[
										442964,
										442975
									],
									[
										443055,
										443066
									],
									[
										443233,
										443244
									],
									[
										443324,
										443335
									],
									[
										443502,
										443513
									],
									[
										443593,
										443604
									],
									[
										443771,
										443782
									],
									[
										443862,
										443873
									],
									[
										444040,
										444051
									],
									[
										444131,
										444142
									],
									[
										444286,
										444297
									],
									[
										444438,
										444449
									],
									[
										444648,
										444659
									],
									[
										444739,
										444750
									],
									[
										444894,
										444905
									],
									[
										444922,
										444933
									],
									[
										445065,
										445076
									],
									[
										445294,
										445305
									],
									[
										445385,
										445396
									],
									[
										445577,
										445588
									],
									[
										445748,
										445759
									],
									[
										445890,
										445901
									],
									[
										446085,
										446096
									],
									[
										446176,
										446187
									],
									[
										446341,
										446352
									],
									[
										446490,
										446501
									],
									[
										446637,
										446648
									],
									[
										446720,
										446731
									],
									[
										446951,
										446962
									],
									[
										447052,
										447063
									],
									[
										447143,
										447154
									],
									[
										447293,
										447304
									],
									[
										447530,
										447541
									],
									[
										447678,
										447689
									],
									[
										447761,
										447772
									],
									[
										447963,
										447974
									],
									[
										448064,
										448075
									],
									[
										448155,
										448166
									],
									[
										448305,
										448316
									],
									[
										448542,
										448553
									],
									[
										448694,
										448705
									],
									[
										448777,
										448788
									],
									[
										449025,
										449036
									],
									[
										449126,
										449137
									],
									[
										449217,
										449228
									],
									[
										449369,
										449380
									],
									[
										449452,
										449463
									],
									[
										449696,
										449707
									],
									[
										449797,
										449808
									],
									[
										449888,
										449899
									],
									[
										450074,
										450085
									],
									[
										450305,
										450316
									],
									[
										450749,
										450760
									],
									[
										450980,
										450991
									],
									[
										451420,
										451431
									],
									[
										451775,
										451786
									],
									[
										451875,
										451886
									],
									[
										452243,
										452254
									],
									[
										452474,
										452485
									],
									[
										452871,
										452882
									],
									[
										453102,
										453113
									],
									[
										453397,
										453408
									],
									[
										453628,
										453639
									],
									[
										453880,
										453891
									],
									[
										454039,
										454050
									],
									[
										454112,
										454123
									],
									[
										454312,
										454323
									],
									[
										454612,
										454623
									],
									[
										454843,
										454854
									],
									[
										455148,
										455159
									],
									[
										455189,
										455200
									],
									[
										455309,
										455320
									],
									[
										455322,
										455333
									],
									[
										455491,
										455502
									],
									[
										455527,
										455538
									],
									[
										455725,
										455736
									],
									[
										455766,
										455777
									],
									[
										455886,
										455897
									],
									[
										455899,
										455910
									],
									[
										456071,
										456082
									],
									[
										456107,
										456118
									],
									[
										456304,
										456315
									],
									[
										456345,
										456356
									],
									[
										456465,
										456476
									],
									[
										456478,
										456489
									],
									[
										456649,
										456660
									],
									[
										456685,
										456696
									],
									[
										456835,
										456846
									],
									[
										456898,
										456909
									],
									[
										456939,
										456950
									],
									[
										457059,
										457070
									],
									[
										457072,
										457083
									],
									[
										457299,
										457310
									],
									[
										457489,
										457500
									],
									[
										457827,
										457838
									],
									[
										457902,
										457913
									],
									[
										458101,
										458112
									],
									[
										458196,
										458207
									],
									[
										458237,
										458248
									],
									[
										458356,
										458367
									],
									[
										458369,
										458380
									],
									[
										458552,
										458563
									],
									[
										458588,
										458599
									],
									[
										458712,
										458723
									],
									[
										458916,
										458927
									],
									[
										458957,
										458968
									],
									[
										459076,
										459087
									],
									[
										459089,
										459100
									],
									[
										459250,
										459261
									],
									[
										459286,
										459297
									],
									[
										459410,
										459421
									],
									[
										459591,
										459602
									],
									[
										459627,
										459638
									],
									[
										459743,
										459754
									],
									[
										459966,
										459977
									],
									[
										460002,
										460013
									],
									[
										460118,
										460129
									],
									[
										460341,
										460352
									],
									[
										460377,
										460388
									],
									[
										460493,
										460504
									],
									[
										460716,
										460727
									],
									[
										460752,
										460763
									],
									[
										460943,
										460954
									],
									[
										460984,
										460995
									],
									[
										461240,
										461251
									],
									[
										461412,
										461423
									],
									[
										461608,
										461619
									],
									[
										461644,
										461655
									],
									[
										461812,
										461823
									],
									[
										461848,
										461859
									],
									[
										462012,
										462023
									],
									[
										462048,
										462059
									],
									[
										462212,
										462223
									],
									[
										462248,
										462259
									],
									[
										462412,
										462423
									],
									[
										462448,
										462459
									],
									[
										462612,
										462623
									],
									[
										462648,
										462659
									],
									[
										462812,
										462823
									],
									[
										462848,
										462859
									],
									[
										463012,
										463023
									],
									[
										463048,
										463059
									],
									[
										463212,
										463223
									],
									[
										463248,
										463259
									],
									[
										463397,
										463408
									],
									[
										463654,
										463665
									],
									[
										463803,
										463814
									],
									[
										463835,
										463846
									],
									[
										464096,
										464107
									],
									[
										464284,
										464295
									],
									[
										464441,
										464452
									],
									[
										464682,
										464693
									],
									[
										464840,
										464851
									],
									[
										464978,
										464989
									],
									[
										465217,
										465228
									],
									[
										465360,
										465371
									],
									[
										465498,
										465509
									],
									[
										465787,
										465798
									],
									[
										466052,
										466063
									],
									[
										466238,
										466249
									],
									[
										466473,
										466484
									],
									[
										466486,
										466497
									],
									[
										466878,
										466889
									],
									[
										467118,
										467129
									],
									[
										467131,
										467142
									],
									[
										467518,
										467529
									],
									[
										467753,
										467764
									],
									[
										467766,
										467777
									],
									[
										468136,
										468147
									],
									[
										468382,
										468393
									],
									[
										468395,
										468406
									],
									[
										468769,
										468780
									],
									[
										468965,
										468976
									],
									[
										469154,
										469165
									],
									[
										469167,
										469178
									],
									[
										469441,
										469452
									],
									[
										469629,
										469640
									],
									[
										469642,
										469653
									],
									[
										469882,
										469893
									],
									[
										469950,
										469961
									],
									[
										470185,
										470196
									],
									[
										470198,
										470209
									],
									[
										470384,
										470395
									],
									[
										470630,
										470641
									],
									[
										470699,
										470710
									],
									[
										470926,
										470937
									],
									[
										470939,
										470950
									],
									[
										471165,
										471176
									],
									[
										471400,
										471411
									],
									[
										471413,
										471424
									],
									[
										471636,
										471647
									],
									[
										471974,
										471985
									],
									[
										472317,
										472328
									],
									[
										550837,
										550848
									],
									[
										556966,
										556977
									],
									[
										635496,
										635507
									],
									[
										641581,
										641592
									],
									[
										641953,
										641964
									],
									[
										642282,
										642293
									],
									[
										642312,
										642323
									],
									[
										642762,
										642773
									],
									[
										643393,
										643404
									],
									[
										644000,
										644011
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								4358,
								4358
							]
						],
						"settings":
						{
							"color_scheme": "Packages/User/Color Highlighter/themes/Seti (SL).tmTheme",
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 1,
							"result_base_dir": "",
							"result_file_regex": "^([A-Za-z\\\\/<].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 968.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "modules/projectView.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4633,
						"regions":
						{
						},
						"selection":
						[
							[
								183,
								183
							]
						],
						"settings":
						{
							"color_scheme": "Packages/User/Color Highlighter/themes/Seti (SL).tmTheme",
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "modules/syncer.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11701,
						"regions":
						{
						},
						"selection":
						[
							[
								10027,
								10027
							]
						],
						"settings":
						{
							"color_scheme": "Packages/User/Color Highlighter/themes/Seti (SL).tmTheme",
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 7355.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "modules/projectList.jsx",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1609,
						"regions":
						{
						},
						"selection":
						[
							[
								469,
								469
							]
						],
						"settings":
						{
							"color_scheme": "Packages/User/Color Highlighter/themes/Seti (SL).tmTheme",
							"syntax": "Packages/JSX/JSX.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "modules/treeView.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2258,
						"regions":
						{
						},
						"selection":
						[
							[
								454,
								454
							]
						],
						"settings":
						{
							"color_scheme": "Packages/User/Color Highlighter/themes/Seti (SL).tmTheme",
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "preferences/preferences.json",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 324,
						"regions":
						{
						},
						"selection":
						[
							[
								191,
								191
							]
						],
						"settings":
						{
							"color_scheme": "Packages/User/Color Highlighter/themes/Seti (SL).tmTheme",
							"syntax": "Packages/JavaScript/JSON.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 9,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 355,
						"regions":
						{
						},
						"selection":
						[
							[
								355,
								355
							]
						],
						"settings":
						{
							"color_scheme": "Packages/User/Color Highlighter/themes/Seti (SL).tmTheme",
							"syntax": "Packages/JavaScript/JSON.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 27.0
	},
	"input":
	{
		"height": 34.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 358.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.scope_viewer":
	{
		"height": 140.0
	},
	"project": "slatemail.sublime-project",
	"replace":
	{
		"height": 50.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				".git",
				"slatemail/.gitignore"
			],
			[
				"mailcompsoer",
				"slatemail/mailComposer/mailComposer.js"
			],
			[
				"main",
				"slatemail/main.js"
			],
			[
				"imap",
				"slatemail/modules/imaper.js"
			],
			[
				"syncer",
				"slatemail/modules/syncer.js"
			],
			[
				"dbhand",
				"slatemail/modules/dbHandler.js"
			],
			[
				"projectview",
				"slatemail/modules/projectView.js"
			],
			[
				"projectlist",
				"slatemail/modules/projectList.jsx"
			],
			[
				"treeview",
				"slatemail/modules/treeView.js"
			],
			[
				"prjoectselect",
				"slatemail/modules/projectSelector.js"
			],
			[
				"treev",
				"slatemail/modules/treeView.js"
			],
			[
				"projectivew",
				"slatemail/modules/projectView.js"
			],
			[
				"main.html",
				"slatemail/main.html"
			],
			[
				"idnex",
				"slatemail/mailComposer/ckeditor/samples/index.html"
			],
			[
				"imaper",
				"slatemail/modules/imaper.js"
			],
			[
				"messagelist",
				"slatemail/modules/messageList.js"
			],
			[
				"mailcompser",
				"slatemail/mailComposer/mailComposer.js"
			],
			[
				"main.js",
				"main.js"
			],
			[
				"dbhandl",
				"modules/dbHandler.js"
			],
			[
				"dbhandler",
				"modules/dbHandler.js"
			],
			[
				"overlay",
				"modules/overlay.js"
			],
			[
				"project",
				"modules/projectSelector.js"
			],
			[
				"messagelist.js",
				"modules/messageList.jsx"
			],
			[
				"projectsele",
				"modules/projectSelector.js"
			],
			[
				"styles",
				"css/styles.scss"
			],
			[
				"treevi",
				"modules/treeView.js"
			],
			[
				"messageview",
				"modules/messageView.js"
			],
			[
				"projects",
				"modules/projectSelector.js"
			],
			[
				"projectv",
				"modules/projectView.js"
			],
			[
				"mailcomposer",
				"mailComposer/mailComposer.js"
			],
			[
				"composer",
				"mailComposer/mailComposer.html"
			],
			[
				"index",
				"mailComposer/ckeditor/samples/index.html"
			],
			[
				"dbhan",
				"modules/dbHandler.js"
			],
			[
				"imaph",
				"modules/imapHandler.js"
			],
			[
				"index.html",
				"mailComposer/ckeditor/samples/index.html"
			],
			[
				"treevei",
				"modules/treeView.js"
			],
			[
				"dbha",
				"modules/dbHandler.js"
			],
			[
				"mailboxview",
				"modules/mailboxView.js"
			],
			[
				"messagelist.scs",
				"css/message_list.scss"
			],
			[
				"syn",
				"modules/syncer.js"
			],
			[
				"credent",
				"credentials/credentials2.json"
			],
			[
				"sync",
				"modules/syncer.js"
			],
			[
				"message_list.",
				"css/message_list.scss"
			],
			[
				"projectview.",
				"modules/projectView.js"
			],
			[
				"tree",
				"modules/treeView.js"
			],
			[
				"projectselec",
				"modules/projectSelector.js"
			],
			[
				"dbhanld",
				"modules/dbHandler.js"
			],
			[
				"mian.html",
				"~/Documents/node_play/slatemail/main.html"
			],
			[
				"mailcomposer.scss",
				"mailComposer/mailComposer.scss"
			],
			[
				"mailcomps",
				"mailComposer/mailComposer.js"
			],
			[
				"testmod",
				"modules/testModule.js"
			],
			[
				"pack",
				"package.json"
			],
			[
				"packag",
				"package.json"
			],
			[
				"",
				"main.js"
			],
			[
				"mailcomopser.html",
				"mailComposer/mailComposer.html"
			],
			[
				"testmodu",
				"modules/testModule.js"
			],
			[
				"test.js",
				"modules/test.js"
			],
			[
				"imah",
				"modules/imapHandler.js"
			],
			[
				"imapha",
				"modules/imapHandler.js"
			],
			[
				"message_list",
				"css/message_list.css"
			],
			[
				"styles.scss",
				"css/styles.scss"
			],
			[
				"projectsle",
				"modules/projectSelector.js"
			],
			[
				"styles.sc",
				"css/styles.scss"
			],
			[
				"messagelist.",
				"modules/messageList.js"
			],
			[
				"mailbox",
				"modules/mailboxView.js"
			],
			[
				"styles.scs",
				"css/styles.scss"
			],
			[
				"messagelist.scss",
				"css/message_list.scss"
			],
			[
				"index.",
				"index.html"
			],
			[
				"impa",
				"modules/imapHandler.js"
			],
			[
				"mailbxo",
				"modules/mailboxView.js"
			],
			[
				"mailb",
				"modules/mailboxView.js"
			],
			[
				"imaphan",
				"modules/imapHandler.js"
			],
			[
				"packa",
				"package.json"
			],
			[
				"mailcomp",
				"mailComposer/mailComposer.js"
			],
			[
				"package",
				"package.json"
			],
			[
				"messagev",
				"modules/messageView.js"
			],
			[
				"thread",
				"modules/threadParser.js"
			],
			[
				"style",
				"css/styles.scss"
			],
			[
				"proj",
				"modules/projectView.js"
			],
			[
				"graves.scss",
				"src/graves.scss"
			],
			[
				"mailcom",
				"mailComposer/mailComposer.js"
			],
			[
				"mailcomposer.html",
				"mailComposer/mailComposer.html"
			],
			[
				"mailcompo",
				"mailComposer/mailComposer.js"
			],
			[
				"mailview",
				"mailComposer/ckeditor/messageView.js"
			],
			[
				"dbh",
				"modules/dbHandler.js"
			],
			[
				"message",
				"modules/messageView.js"
			],
			[
				"mailcomposer.htlm",
				"mailComposer/mailComposer.html"
			],
			[
				"messsageview",
				"mailComposer/ckeditor/messageView.js"
			],
			[
				"mailc",
				"mailComposer/mailComposer.js"
			],
			[
				"test",
				"mailComposer/test.html"
			],
			[
				"test.html",
				"mailComposer/test.html"
			],
			[
				"mailboxvi",
				"modules/mailboxView.js"
			],
			[
				"mailcm",
				"mailComposer/mailComposer.js"
			],
			[
				"boxview",
				"modules/mailboxView.js"
			],
			[
				"styles.css",
				"css/styles.css"
			],
			[
				"fingers",
				"murakami/dist/fingers.json"
			],
			[
				"inbox.j",
				"inbox.js"
			],
			[
				"themesong",
				"src/quizzes/theme_song/theme_song.cson"
			],
			[
				"theme",
				"src/quizzes/theme_song/theme_song.cson"
			],
			[
				"theme_s",
				"sound/theme_songs/theme_songs.aup"
			],
			[
				"first_se",
				"src/quizzes/first_second/first_second.cson"
			],
			[
				"slideshow",
				"/Applications/MAMP/htdocs/editorial-interactives/13-02/slideshow/htdocs/slideshow.js"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
			[
				"simple",
				"~/Documents/interactives/src/features/2014/05/simple_quiz/simple_quiz.sublime-project"
			],
			[
				"outrage",
				"~/Documents/interactives/src/features/2014/09/outrage/outrage.sublime-project"
			],
			[
				"rei",
				"/Applications/MAMP/htdocs/editorial-interactives/14-03/reincarnation/reincarnation.sublime-workspace"
			],
			[
				"rein",
				"/Applications/MAMP/htdocs/editorial-interactives/14-03/reincarnation/reincarnation.sublime-workspace"
			],
			[
				"food",
				"~/Documents/interactives/src/features/2014/10/foods/foods.sublime-project"
			],
			[
				"run",
				"~/Documents/interactives/src/features/2014/10/run/run.sublime-project"
			],
			[
				"vote",
				"~/Documents/interactives/src/features/2014/10/vote_machine/vote_machine.sublime-project"
			],
			[
				"foods",
				"~/Documents/interactives/src/features/2014/10/foods/foods.sublime-project"
			],
			[
				"gay",
				"~/Documents/interactives/src/features/2014/05/gay_marriage_map/gay_marriage_map.sublime-project"
			],
			[
				"simple_quiz",
				"~/Documents/interactives/src/features/2014/05/simple_quiz/simple_quiz.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 375.0,
		"selected_items":
		[
		],
		"width": 453.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 241.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
